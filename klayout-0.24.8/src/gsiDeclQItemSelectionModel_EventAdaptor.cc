
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file generated/gsiDeclQItemSelectionModel_EventAdaptor.cc
*  @brief Event adaptor implementations for QItemSelectionModel
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include "gsiQtGui.h"
#include "gsiDeclQItemSelectionModel_EventAdaptor.h"

// -----------------------------------------------------------------------
// class QItemSelectionModel_EventAdaptor

QItemSelectionModel_EventAdaptor::QItemSelectionModel_EventAdaptor (QObject *host)
  : QObject ()
{
  connect (host, SIGNAL(currentChanged(const QModelIndex &, const QModelIndex &)), this, SLOT(currentChanged(const QModelIndex &, const QModelIndex &)));
  connect (host, SIGNAL(currentColumnChanged(const QModelIndex &, const QModelIndex &)), this, SLOT(currentColumnChanged(const QModelIndex &, const QModelIndex &)));
  connect (host, SIGNAL(currentRowChanged(const QModelIndex &, const QModelIndex &)), this, SLOT(currentRowChanged(const QModelIndex &, const QModelIndex &)));
  connect (host, SIGNAL(destroyed(QObject *)), this, SLOT(destroyed(QObject *)));
  connect (host, SIGNAL(selectionChanged(const QItemSelection &, const QItemSelection &)), this, SLOT(selectionChanged(const QItemSelection &, const QItemSelection &)));
}

//  Event QItemSelectionModel::currentChanged(const QModelIndex &current, const QModelIndex &previous)
void QItemSelectionModel_EventAdaptor::currentChanged(const QModelIndex &current, const QModelIndex &previous) {
BEGIN_PROTECTED
  currentChanged_e_4682(current, previous);
END_PROTECTED
}

//  Event QItemSelectionModel::currentColumnChanged(const QModelIndex &current, const QModelIndex &previous)
void QItemSelectionModel_EventAdaptor::currentColumnChanged(const QModelIndex &current, const QModelIndex &previous) {
BEGIN_PROTECTED
  currentColumnChanged_e_4682(current, previous);
END_PROTECTED
}

//  Event QItemSelectionModel::currentRowChanged(const QModelIndex &current, const QModelIndex &previous)
void QItemSelectionModel_EventAdaptor::currentRowChanged(const QModelIndex &current, const QModelIndex &previous) {
BEGIN_PROTECTED
  currentRowChanged_e_4682(current, previous);
END_PROTECTED
}

//  Event QItemSelectionModel::destroyed(QObject *arg1)
void QItemSelectionModel_EventAdaptor::destroyed(QObject *arg1) {
BEGIN_PROTECTED
  destroyed_e_1302(arg1);
END_PROTECTED
}

//  Event QItemSelectionModel::selectionChanged(const QItemSelection &selected, const QItemSelection &deselected)
void QItemSelectionModel_EventAdaptor::selectionChanged(const QItemSelection &selected, const QItemSelection &deselected) {
BEGIN_PROTECTED
  selectionChanged_e_5346(selected, deselected);
END_PROTECTED
}
