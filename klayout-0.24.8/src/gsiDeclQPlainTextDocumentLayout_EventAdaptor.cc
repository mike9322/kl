
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file generated/gsiDeclQPlainTextDocumentLayout_EventAdaptor.cc
*  @brief Event adaptor implementations for QPlainTextDocumentLayout
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include "gsiQtGui.h"
#include "gsiDeclQPlainTextDocumentLayout_EventAdaptor.h"

// -----------------------------------------------------------------------
// class QPlainTextDocumentLayout_EventAdaptor

QPlainTextDocumentLayout_EventAdaptor::QPlainTextDocumentLayout_EventAdaptor (QObject *host)
  : QObject ()
{
  connect (host, SIGNAL(destroyed(QObject *)), this, SLOT(destroyed(QObject *)));
  connect (host, SIGNAL(documentSizeChanged(const QSizeF &)), this, SLOT(documentSizeChanged(const QSizeF &)));
  connect (host, SIGNAL(pageCountChanged(int)), this, SLOT(pageCountChanged(int)));
  connect (host, SIGNAL(update(const QRectF &)), this, SLOT(update(const QRectF &)));
  connect (host, SIGNAL(updateBlock(const QTextBlock &)), this, SLOT(updateBlock(const QTextBlock &)));
}

//  Event QPlainTextDocumentLayout::destroyed(QObject *arg1)
void QPlainTextDocumentLayout_EventAdaptor::destroyed(QObject *arg1) {
BEGIN_PROTECTED
  destroyed_e_1302(arg1);
END_PROTECTED
}

//  Event QPlainTextDocumentLayout::documentSizeChanged(const QSizeF &newSize)
void QPlainTextDocumentLayout_EventAdaptor::documentSizeChanged(const QSizeF &newSize) {
BEGIN_PROTECTED
  documentSizeChanged_e_1875(newSize);
END_PROTECTED
}

//  Event QPlainTextDocumentLayout::pageCountChanged(int newPages)
void QPlainTextDocumentLayout_EventAdaptor::pageCountChanged(int newPages) {
BEGIN_PROTECTED
  pageCountChanged_e_767(newPages);
END_PROTECTED
}

//  Event QPlainTextDocumentLayout::update(const QRectF &arg1)
void QPlainTextDocumentLayout_EventAdaptor::update(const QRectF &arg1) {
BEGIN_PROTECTED
  update_e_1862(arg1);
END_PROTECTED
}

//  Event QPlainTextDocumentLayout::updateBlock(const QTextBlock &block)
void QPlainTextDocumentLayout_EventAdaptor::updateBlock(const QTextBlock &block) {
BEGIN_PROTECTED
  updateBlock_e_2306(block);
END_PROTECTED
}
