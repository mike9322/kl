
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file gsiDeclQDomNamedNodeMap.cc 
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include "gsiQtXml.h"
#include "gsiDeclQtTypeTraits.h"
#include "gsiDeclQDomNamedNodeMap_Enums.h"
#include <memory>

// -----------------------------------------------------------------------
// class QDomNamedNodeMap

//  Constructor QDomNamedNodeMap::QDomNamedNodeMap()


static void _init_ctor_QDomNamedNodeMap_0 (qt_gsi::GenericStaticMethod *decl)
{
  decl->set_return_new<QDomNamedNodeMap *> ();
}

static void _call_ctor_QDomNamedNodeMap_0 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QDomNamedNodeMap *> (new QDomNamedNodeMap ());
}

static qt_gsi::GenericStaticMethod *_create_ctor_QDomNamedNodeMap_0 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QDomNamedNodeMap::QDomNamedNodeMap()\nThis method creates an object of class QDomNamedNodeMap.", &_init_ctor_QDomNamedNodeMap_0, &_call_ctor_QDomNamedNodeMap_0);
}

//  Constructor QDomNamedNodeMap::QDomNamedNodeMap(const QDomNamedNodeMap &)


static void _init_ctor_QDomNamedNodeMap_2843 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("arg1");
  decl->add_arg<const QDomNamedNodeMap & > (argspec_0);
  decl->set_return_new<QDomNamedNodeMap *> ();
}

static void _call_ctor_QDomNamedNodeMap_2843 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QDomNamedNodeMap &arg1 = args.read<const QDomNamedNodeMap & > ();
  ret.write<QDomNamedNodeMap *> (new QDomNamedNodeMap (arg1));
}

static qt_gsi::GenericStaticMethod *_create_ctor_QDomNamedNodeMap_2843 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QDomNamedNodeMap::QDomNamedNodeMap(const QDomNamedNodeMap &)\nThis method creates an object of class QDomNamedNodeMap.", &_init_ctor_QDomNamedNodeMap_2843, &_call_ctor_QDomNamedNodeMap_2843);
}

// bool QDomNamedNodeMap::contains(const QString &name)


static void _init_f_contains_c2025 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("name");
  decl->add_arg<const QString & > (argspec_0);
  decl->set_return<bool > ();
}

static void _call_f_contains_c2025 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QString &arg1 = args.read<const QString & > ();
  ret.write<bool > ((bool)((QDomNamedNodeMap *)cls)->contains (arg1));
}

static qt_gsi::GenericMethod *_create_f_contains_c2025 ()
{
  return new qt_gsi::GenericMethod ("contains", "@brief Method bool QDomNamedNodeMap::contains(const QString &name)\n", true, &_init_f_contains_c2025, &_call_f_contains_c2025);
}

// int QDomNamedNodeMap::count()


static void _init_f_count_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<int > ();
}

static void _call_f_count_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<int > ((int)((QDomNamedNodeMap *)cls)->count ());
}

static qt_gsi::GenericMethod *_create_f_count_c0 ()
{
  return new qt_gsi::GenericMethod ("count", "@brief Method int QDomNamedNodeMap::count()\n", true, &_init_f_count_c0, &_call_f_count_c0);
}

// bool QDomNamedNodeMap::isEmpty()


static void _init_f_isEmpty_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isEmpty_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<bool > ((bool)((QDomNamedNodeMap *)cls)->isEmpty ());
}

static qt_gsi::GenericMethod *_create_f_isEmpty_c0 ()
{
  return new qt_gsi::GenericMethod ("isEmpty?", "@brief Method bool QDomNamedNodeMap::isEmpty()\n", true, &_init_f_isEmpty_c0, &_call_f_isEmpty_c0);
}

// QDomNode QDomNamedNodeMap::item(int index)


static void _init_f_item_c767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("index");
  decl->add_arg<int > (argspec_0);
  decl->set_return<QDomNode > ();
}

static void _call_f_item_c767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<QDomNode > ((QDomNode)((QDomNamedNodeMap *)cls)->item (arg1));
}

static qt_gsi::GenericMethod *_create_f_item_c767 ()
{
  return new qt_gsi::GenericMethod ("item", "@brief Method QDomNode QDomNamedNodeMap::item(int index)\n", true, &_init_f_item_c767, &_call_f_item_c767);
}

// unsigned int QDomNamedNodeMap::length()


static void _init_f_length_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<unsigned int > ();
}

static void _call_f_length_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<unsigned int > ((unsigned int)((QDomNamedNodeMap *)cls)->length ());
}

static qt_gsi::GenericMethod *_create_f_length_c0 ()
{
  return new qt_gsi::GenericMethod ("length", "@brief Method unsigned int QDomNamedNodeMap::length()\n", true, &_init_f_length_c0, &_call_f_length_c0);
}

// QDomNode QDomNamedNodeMap::namedItem(const QString &name)


static void _init_f_namedItem_c2025 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("name");
  decl->add_arg<const QString & > (argspec_0);
  decl->set_return<QDomNode > ();
}

static void _call_f_namedItem_c2025 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QString &arg1 = args.read<const QString & > ();
  ret.write<QDomNode > ((QDomNode)((QDomNamedNodeMap *)cls)->namedItem (arg1));
}

static qt_gsi::GenericMethod *_create_f_namedItem_c2025 ()
{
  return new qt_gsi::GenericMethod ("namedItem", "@brief Method QDomNode QDomNamedNodeMap::namedItem(const QString &name)\n", true, &_init_f_namedItem_c2025, &_call_f_namedItem_c2025);
}

// QDomNode QDomNamedNodeMap::namedItemNS(const QString &nsURI, const QString &localName)


static void _init_f_namedItemNS_c3942 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("nsURI");
  decl->add_arg<const QString & > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("localName");
  decl->add_arg<const QString & > (argspec_1);
  decl->set_return<QDomNode > ();
}

static void _call_f_namedItemNS_c3942 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QString &arg1 = args.read<const QString & > ();
  const QString &arg2 = args.read<const QString & > ();
  ret.write<QDomNode > ((QDomNode)((QDomNamedNodeMap *)cls)->namedItemNS (arg1, arg2));
}

static qt_gsi::GenericMethod *_create_f_namedItemNS_c3942 ()
{
  return new qt_gsi::GenericMethod ("namedItemNS", "@brief Method QDomNode QDomNamedNodeMap::namedItemNS(const QString &nsURI, const QString &localName)\n", true, &_init_f_namedItemNS_c3942, &_call_f_namedItemNS_c3942);
}

// bool QDomNamedNodeMap::operator!=(const QDomNamedNodeMap &)


static void _init_f_operator_excl__eq__c2843u1 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("arg1");
  decl->add_arg<const QDomNamedNodeMap & > (argspec_0);
  decl->set_return<bool > ();
}

static void _call_f_operator_excl__eq__c2843u1 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QDomNamedNodeMap &arg1 = args.read<const QDomNamedNodeMap & > ();
  ret.write<bool > ((bool)((QDomNamedNodeMap *)cls)->operator!= (arg1));
}

static qt_gsi::GenericMethod *_create_f_operator_excl__eq__c2843u1 ()
{
  return new qt_gsi::GenericMethod ("!=", "@brief Method bool QDomNamedNodeMap::operator!=(const QDomNamedNodeMap &)\n", true, &_init_f_operator_excl__eq__c2843u1, &_call_f_operator_excl__eq__c2843u1);
}

// QDomNamedNodeMap &QDomNamedNodeMap::operator=(const QDomNamedNodeMap &)


static void _init_f_operator_eq__2843 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("arg1");
  decl->add_arg<const QDomNamedNodeMap & > (argspec_0);
  decl->set_return<QDomNamedNodeMap & > ();
}

static void _call_f_operator_eq__2843 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QDomNamedNodeMap &arg1 = args.read<const QDomNamedNodeMap & > ();
  ret.write<QDomNamedNodeMap & > ((QDomNamedNodeMap &)((QDomNamedNodeMap *)cls)->operator= (arg1));
}

static qt_gsi::GenericMethod *_create_f_operator_eq__2843 ()
{
  return new qt_gsi::GenericMethod ("assign", "@brief Method QDomNamedNodeMap &QDomNamedNodeMap::operator=(const QDomNamedNodeMap &)\n", false, &_init_f_operator_eq__2843, &_call_f_operator_eq__2843);
}

// bool QDomNamedNodeMap::operator==(const QDomNamedNodeMap &)


static void _init_f_operator_eq__eq__c2843u1 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("arg1");
  decl->add_arg<const QDomNamedNodeMap & > (argspec_0);
  decl->set_return<bool > ();
}

static void _call_f_operator_eq__eq__c2843u1 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QDomNamedNodeMap &arg1 = args.read<const QDomNamedNodeMap & > ();
  ret.write<bool > ((bool)((QDomNamedNodeMap *)cls)->operator== (arg1));
}

static qt_gsi::GenericMethod *_create_f_operator_eq__eq__c2843u1 ()
{
  return new qt_gsi::GenericMethod ("==", "@brief Method bool QDomNamedNodeMap::operator==(const QDomNamedNodeMap &)\n", true, &_init_f_operator_eq__eq__c2843u1, &_call_f_operator_eq__eq__c2843u1);
}

// QDomNode QDomNamedNodeMap::removeNamedItem(const QString &name)


static void _init_f_removeNamedItem_2025 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("name");
  decl->add_arg<const QString & > (argspec_0);
  decl->set_return<QDomNode > ();
}

static void _call_f_removeNamedItem_2025 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QString &arg1 = args.read<const QString & > ();
  ret.write<QDomNode > ((QDomNode)((QDomNamedNodeMap *)cls)->removeNamedItem (arg1));
}

static qt_gsi::GenericMethod *_create_f_removeNamedItem_2025 ()
{
  return new qt_gsi::GenericMethod ("removeNamedItem", "@brief Method QDomNode QDomNamedNodeMap::removeNamedItem(const QString &name)\n", false, &_init_f_removeNamedItem_2025, &_call_f_removeNamedItem_2025);
}

// QDomNode QDomNamedNodeMap::removeNamedItemNS(const QString &nsURI, const QString &localName)


static void _init_f_removeNamedItemNS_3942 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("nsURI");
  decl->add_arg<const QString & > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("localName");
  decl->add_arg<const QString & > (argspec_1);
  decl->set_return<QDomNode > ();
}

static void _call_f_removeNamedItemNS_3942 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QString &arg1 = args.read<const QString & > ();
  const QString &arg2 = args.read<const QString & > ();
  ret.write<QDomNode > ((QDomNode)((QDomNamedNodeMap *)cls)->removeNamedItemNS (arg1, arg2));
}

static qt_gsi::GenericMethod *_create_f_removeNamedItemNS_3942 ()
{
  return new qt_gsi::GenericMethod ("removeNamedItemNS", "@brief Method QDomNode QDomNamedNodeMap::removeNamedItemNS(const QString &nsURI, const QString &localName)\n", false, &_init_f_removeNamedItemNS_3942, &_call_f_removeNamedItemNS_3942);
}

// QDomNode QDomNamedNodeMap::setNamedItem(const QDomNode &newNode)


static void _init_f_setNamedItem_2072 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("newNode");
  decl->add_arg<const QDomNode & > (argspec_0);
  decl->set_return<QDomNode > ();
}

static void _call_f_setNamedItem_2072 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QDomNode &arg1 = args.read<const QDomNode & > ();
  ret.write<QDomNode > ((QDomNode)((QDomNamedNodeMap *)cls)->setNamedItem (arg1));
}

static qt_gsi::GenericMethod *_create_f_setNamedItem_2072 ()
{
  return new qt_gsi::GenericMethod ("setNamedItem", "@brief Method QDomNode QDomNamedNodeMap::setNamedItem(const QDomNode &newNode)\n", false, &_init_f_setNamedItem_2072, &_call_f_setNamedItem_2072);
}

// QDomNode QDomNamedNodeMap::setNamedItemNS(const QDomNode &newNode)


static void _init_f_setNamedItemNS_2072 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("newNode");
  decl->add_arg<const QDomNode & > (argspec_0);
  decl->set_return<QDomNode > ();
}

static void _call_f_setNamedItemNS_2072 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QDomNode &arg1 = args.read<const QDomNode & > ();
  ret.write<QDomNode > ((QDomNode)((QDomNamedNodeMap *)cls)->setNamedItemNS (arg1));
}

static qt_gsi::GenericMethod *_create_f_setNamedItemNS_2072 ()
{
  return new qt_gsi::GenericMethod ("setNamedItemNS", "@brief Method QDomNode QDomNamedNodeMap::setNamedItemNS(const QDomNode &newNode)\n", false, &_init_f_setNamedItemNS_2072, &_call_f_setNamedItemNS_2072);
}

// int QDomNamedNodeMap::size()


static void _init_f_size_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<int > ();
}

static void _call_f_size_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<int > ((int)((QDomNamedNodeMap *)cls)->size ());
}

static qt_gsi::GenericMethod *_create_f_size_c0 ()
{
  return new qt_gsi::GenericMethod ("size", "@brief Method int QDomNamedNodeMap::size()\n", true, &_init_f_size_c0, &_call_f_size_c0);
}


namespace gsi
{
gsi::Class<QDomNamedNodeMap> decl_QDomNamedNodeMap ("QDomNamedNodeMap",
  gsi::Methods(_create_ctor_QDomNamedNodeMap_0 ()) +
  gsi::Methods(_create_ctor_QDomNamedNodeMap_2843 ()) +
  gsi::Methods(_create_f_contains_c2025 ()) +
  gsi::Methods(_create_f_count_c0 ()) +
  gsi::Methods(_create_f_isEmpty_c0 ()) +
  gsi::Methods(_create_f_item_c767 ()) +
  gsi::Methods(_create_f_length_c0 ()) +
  gsi::Methods(_create_f_namedItem_c2025 ()) +
  gsi::Methods(_create_f_namedItemNS_c3942 ()) +
  gsi::Methods(_create_f_operator_excl__eq__c2843u1 ()) +
  gsi::Methods(_create_f_operator_eq__2843 ()) +
  gsi::Methods(_create_f_operator_eq__eq__c2843u1 ()) +
  gsi::Methods(_create_f_removeNamedItem_2025 ()) +
  gsi::Methods(_create_f_removeNamedItemNS_3942 ()) +
  gsi::Methods(_create_f_setNamedItem_2072 ()) +
  gsi::Methods(_create_f_setNamedItemNS_2072 ()) +
  gsi::Methods(_create_f_size_c0 ()),
  "@qt\n@brief Binding of QDomNamedNodeMap");

}

