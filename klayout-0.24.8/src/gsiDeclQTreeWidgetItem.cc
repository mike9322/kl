
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file gsiDeclQTreeWidgetItem.cc 
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include "gsiQtGui.h"
#include "gsiDeclQtTypeTraits.h"
#include "gsiDeclQTreeWidgetItem_Enums.h"
#include <memory>

// -----------------------------------------------------------------------
// class QTreeWidgetItem

// void QTreeWidgetItem::addChild(QTreeWidgetItem *child)


static void _init_f_addChild_2114 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("child");
  decl->add_arg<QTreeWidgetItem * > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_addChild_2114 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QTreeWidgetItem *arg1 = args.read<QTreeWidgetItem * > ();
  qt_gsi::qt_keep (arg1);
  ((QTreeWidgetItem *)cls)->addChild (arg1);
}

static qt_gsi::GenericMethod *_create_f_addChild_2114 ()
{
  return new qt_gsi::GenericMethod ("addChild", "@brief Method void QTreeWidgetItem::addChild(QTreeWidgetItem *child)\n", false, &_init_f_addChild_2114, &_call_f_addChild_2114);
}

// void QTreeWidgetItem::addChildren(const QList<QTreeWidgetItem *> &children)


static void _init_f_addChildren_3606 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("children");
  decl->add_arg<const qt_gsi::Converter<QList<QTreeWidgetItem *> >::target_type & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_addChildren_3606 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const qt_gsi::Converter<QList<QTreeWidgetItem *> >::target_type & arg1 = args.read<const qt_gsi::Converter<QList<QTreeWidgetItem *> >::target_type & > ();
  qt_gsi::qt_keep (arg1);
  ((QTreeWidgetItem *)cls)->addChildren (qt_gsi::QtToCppAdaptor<QList<QTreeWidgetItem *> >(arg1).cref());
}

static qt_gsi::GenericMethod *_create_f_addChildren_3606 ()
{
  return new qt_gsi::GenericMethod ("addChildren", "@brief Method void QTreeWidgetItem::addChildren(const QList<QTreeWidgetItem *> &children)\n", false, &_init_f_addChildren_3606, &_call_f_addChildren_3606);
}

// QBrush QTreeWidgetItem::background(int column)


static void _init_f_background_c767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  decl->set_return<QBrush > ();
}

static void _call_f_background_c767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<QBrush > ((QBrush)((QTreeWidgetItem *)cls)->background (arg1));
}

static qt_gsi::GenericMethod *_create_f_background_c767 ()
{
  return new qt_gsi::GenericMethod ("background", "@brief Method QBrush QTreeWidgetItem::background(int column)\n", true, &_init_f_background_c767, &_call_f_background_c767);
}

// QColor QTreeWidgetItem::backgroundColor(int column)


static void _init_f_backgroundColor_c767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  decl->set_return<QColor > ();
}

static void _call_f_backgroundColor_c767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<QColor > ((QColor)((QTreeWidgetItem *)cls)->backgroundColor (arg1));
}

static qt_gsi::GenericMethod *_create_f_backgroundColor_c767 ()
{
  return new qt_gsi::GenericMethod ("backgroundColor", "@brief Method QColor QTreeWidgetItem::backgroundColor(int column)\n", true, &_init_f_backgroundColor_c767, &_call_f_backgroundColor_c767);
}

// Qt::CheckState QTreeWidgetItem::checkState(int column)


static void _init_f_checkState_c767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  decl->set_return<qt_gsi::Converter<Qt::CheckState>::target_type > ();
}

static void _call_f_checkState_c767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<qt_gsi::Converter<Qt::CheckState>::target_type > ((qt_gsi::Converter<Qt::CheckState>::target_type)qt_gsi::CppToQtAdaptor<Qt::CheckState>(((QTreeWidgetItem *)cls)->checkState (arg1)));
}

static qt_gsi::GenericMethod *_create_f_checkState_c767 ()
{
  return new qt_gsi::GenericMethod ("checkState", "@brief Method Qt::CheckState QTreeWidgetItem::checkState(int column)\n", true, &_init_f_checkState_c767, &_call_f_checkState_c767);
}

// QTreeWidgetItem *QTreeWidgetItem::child(int index)


static void _init_f_child_c767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("index");
  decl->add_arg<int > (argspec_0);
  decl->set_return<QTreeWidgetItem * > ();
}

static void _call_f_child_c767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<QTreeWidgetItem * > ((QTreeWidgetItem *)((QTreeWidgetItem *)cls)->child (arg1));
}

static qt_gsi::GenericMethod *_create_f_child_c767 ()
{
  return new qt_gsi::GenericMethod ("child", "@brief Method QTreeWidgetItem *QTreeWidgetItem::child(int index)\n", true, &_init_f_child_c767, &_call_f_child_c767);
}

// int QTreeWidgetItem::childCount()


static void _init_f_childCount_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<int > ();
}

static void _call_f_childCount_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<int > ((int)((QTreeWidgetItem *)cls)->childCount ());
}

static qt_gsi::GenericMethod *_create_f_childCount_c0 ()
{
  return new qt_gsi::GenericMethod ("childCount", "@brief Method int QTreeWidgetItem::childCount()\n", true, &_init_f_childCount_c0, &_call_f_childCount_c0);
}

// QTreeWidgetItem::ChildIndicatorPolicy QTreeWidgetItem::childIndicatorPolicy()


static void _init_f_childIndicatorPolicy_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qt_gsi::Converter<QTreeWidgetItem::ChildIndicatorPolicy>::target_type > ();
}

static void _call_f_childIndicatorPolicy_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<qt_gsi::Converter<QTreeWidgetItem::ChildIndicatorPolicy>::target_type > ((qt_gsi::Converter<QTreeWidgetItem::ChildIndicatorPolicy>::target_type)qt_gsi::CppToQtAdaptor<QTreeWidgetItem::ChildIndicatorPolicy>(((QTreeWidgetItem *)cls)->childIndicatorPolicy ()));
}

static qt_gsi::GenericMethod *_create_f_childIndicatorPolicy_c0 ()
{
  return new qt_gsi::GenericMethod (":childIndicatorPolicy", "@brief Method QTreeWidgetItem::ChildIndicatorPolicy QTreeWidgetItem::childIndicatorPolicy()\n", true, &_init_f_childIndicatorPolicy_c0, &_call_f_childIndicatorPolicy_c0);
}

// QTreeWidgetItem *QTreeWidgetItem::clone()


static void _init_f_clone_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QTreeWidgetItem * > ();
}

static void _call_f_clone_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QTreeWidgetItem * > ((QTreeWidgetItem *)((QTreeWidgetItem *)cls)->clone ());
}

static qt_gsi::GenericMethod *_create_f_clone_c0 ()
{
  return new qt_gsi::GenericMethod ("clone", "@brief Method QTreeWidgetItem *QTreeWidgetItem::clone()\n", true, &_init_f_clone_c0, &_call_f_clone_c0);
}

// int QTreeWidgetItem::columnCount()


static void _init_f_columnCount_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<int > ();
}

static void _call_f_columnCount_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<int > ((int)((QTreeWidgetItem *)cls)->columnCount ());
}

static qt_gsi::GenericMethod *_create_f_columnCount_c0 ()
{
  return new qt_gsi::GenericMethod ("columnCount", "@brief Method int QTreeWidgetItem::columnCount()\n", true, &_init_f_columnCount_c0, &_call_f_columnCount_c0);
}

// QVariant QTreeWidgetItem::data(int column, int role)


static void _init_f_data_c1426 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("role");
  decl->add_arg<int > (argspec_1);
  decl->set_return<QVariant > ();
}

static void _call_f_data_c1426 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  int arg2 = args.read<int > ();
  ret.write<QVariant > ((QVariant)((QTreeWidgetItem *)cls)->data (arg1, arg2));
}

static qt_gsi::GenericMethod *_create_f_data_c1426 ()
{
  return new qt_gsi::GenericMethod ("data", "@brief Method QVariant QTreeWidgetItem::data(int column, int role)\n", true, &_init_f_data_c1426, &_call_f_data_c1426);
}

// QFlags<Qt::ItemFlag> QTreeWidgetItem::flags()


static void _init_f_flags_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qt_gsi::Converter<QFlags<Qt::ItemFlag> >::target_type > ();
}

static void _call_f_flags_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<qt_gsi::Converter<QFlags<Qt::ItemFlag> >::target_type > ((qt_gsi::Converter<QFlags<Qt::ItemFlag> >::target_type)qt_gsi::CppToQtAdaptor<QFlags<Qt::ItemFlag> >(((QTreeWidgetItem *)cls)->flags ()));
}

static qt_gsi::GenericMethod *_create_f_flags_c0 ()
{
  return new qt_gsi::GenericMethod (":flags", "@brief Method QFlags<Qt::ItemFlag> QTreeWidgetItem::flags()\n", true, &_init_f_flags_c0, &_call_f_flags_c0);
}

// QFont QTreeWidgetItem::font(int column)


static void _init_f_font_c767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  decl->set_return<QFont > ();
}

static void _call_f_font_c767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<QFont > ((QFont)((QTreeWidgetItem *)cls)->font (arg1));
}

static qt_gsi::GenericMethod *_create_f_font_c767 ()
{
  return new qt_gsi::GenericMethod ("font", "@brief Method QFont QTreeWidgetItem::font(int column)\n", true, &_init_f_font_c767, &_call_f_font_c767);
}

// QBrush QTreeWidgetItem::foreground(int column)


static void _init_f_foreground_c767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  decl->set_return<QBrush > ();
}

static void _call_f_foreground_c767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<QBrush > ((QBrush)((QTreeWidgetItem *)cls)->foreground (arg1));
}

static qt_gsi::GenericMethod *_create_f_foreground_c767 ()
{
  return new qt_gsi::GenericMethod ("foreground", "@brief Method QBrush QTreeWidgetItem::foreground(int column)\n", true, &_init_f_foreground_c767, &_call_f_foreground_c767);
}

// QIcon QTreeWidgetItem::icon(int column)


static void _init_f_icon_c767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  decl->set_return<QIcon > ();
}

static void _call_f_icon_c767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<QIcon > ((QIcon)((QTreeWidgetItem *)cls)->icon (arg1));
}

static qt_gsi::GenericMethod *_create_f_icon_c767 ()
{
  return new qt_gsi::GenericMethod ("icon", "@brief Method QIcon QTreeWidgetItem::icon(int column)\n", true, &_init_f_icon_c767, &_call_f_icon_c767);
}

// int QTreeWidgetItem::indexOfChild(QTreeWidgetItem *child)


static void _init_f_indexOfChild_c2114 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("child");
  decl->add_arg<QTreeWidgetItem * > (argspec_0);
  decl->set_return<int > ();
}

static void _call_f_indexOfChild_c2114 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QTreeWidgetItem *arg1 = args.read<QTreeWidgetItem * > ();
  ret.write<int > ((int)((QTreeWidgetItem *)cls)->indexOfChild (arg1));
}

static qt_gsi::GenericMethod *_create_f_indexOfChild_c2114 ()
{
  return new qt_gsi::GenericMethod ("indexOfChild", "@brief Method int QTreeWidgetItem::indexOfChild(QTreeWidgetItem *child)\n", true, &_init_f_indexOfChild_c2114, &_call_f_indexOfChild_c2114);
}

// void QTreeWidgetItem::insertChild(int index, QTreeWidgetItem *child)


static void _init_f_insertChild_2773 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("index");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("child");
  decl->add_arg<QTreeWidgetItem * > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_insertChild_2773 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  QTreeWidgetItem *arg2 = args.read<QTreeWidgetItem * > ();
  qt_gsi::qt_keep (arg2);
  ((QTreeWidgetItem *)cls)->insertChild (arg1, arg2);
}

static qt_gsi::GenericMethod *_create_f_insertChild_2773 ()
{
  return new qt_gsi::GenericMethod ("insertChild", "@brief Method void QTreeWidgetItem::insertChild(int index, QTreeWidgetItem *child)\n", false, &_init_f_insertChild_2773, &_call_f_insertChild_2773);
}

// void QTreeWidgetItem::insertChildren(int index, const QList<QTreeWidgetItem *> &children)


static void _init_f_insertChildren_4265 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("index");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("children");
  decl->add_arg<const qt_gsi::Converter<QList<QTreeWidgetItem *> >::target_type & > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_insertChildren_4265 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  const qt_gsi::Converter<QList<QTreeWidgetItem *> >::target_type & arg2 = args.read<const qt_gsi::Converter<QList<QTreeWidgetItem *> >::target_type & > ();
  qt_gsi::qt_keep (arg2);
  ((QTreeWidgetItem *)cls)->insertChildren (arg1, qt_gsi::QtToCppAdaptor<QList<QTreeWidgetItem *> >(arg2).cref());
}

static qt_gsi::GenericMethod *_create_f_insertChildren_4265 ()
{
  return new qt_gsi::GenericMethod ("insertChildren", "@brief Method void QTreeWidgetItem::insertChildren(int index, const QList<QTreeWidgetItem *> &children)\n", false, &_init_f_insertChildren_4265, &_call_f_insertChildren_4265);
}

// bool QTreeWidgetItem::isDisabled()


static void _init_f_isDisabled_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isDisabled_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<bool > ((bool)((QTreeWidgetItem *)cls)->isDisabled ());
}

static qt_gsi::GenericMethod *_create_f_isDisabled_c0 ()
{
  return new qt_gsi::GenericMethod ("isDisabled?|:disabled", "@brief Method bool QTreeWidgetItem::isDisabled()\n", true, &_init_f_isDisabled_c0, &_call_f_isDisabled_c0);
}

// bool QTreeWidgetItem::isExpanded()


static void _init_f_isExpanded_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isExpanded_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<bool > ((bool)((QTreeWidgetItem *)cls)->isExpanded ());
}

static qt_gsi::GenericMethod *_create_f_isExpanded_c0 ()
{
  return new qt_gsi::GenericMethod ("isExpanded?|:expanded", "@brief Method bool QTreeWidgetItem::isExpanded()\n", true, &_init_f_isExpanded_c0, &_call_f_isExpanded_c0);
}

// bool QTreeWidgetItem::isFirstColumnSpanned()


static void _init_f_isFirstColumnSpanned_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isFirstColumnSpanned_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<bool > ((bool)((QTreeWidgetItem *)cls)->isFirstColumnSpanned ());
}

static qt_gsi::GenericMethod *_create_f_isFirstColumnSpanned_c0 ()
{
  return new qt_gsi::GenericMethod ("isFirstColumnSpanned?|:firstColumnSpanned", "@brief Method bool QTreeWidgetItem::isFirstColumnSpanned()\n", true, &_init_f_isFirstColumnSpanned_c0, &_call_f_isFirstColumnSpanned_c0);
}

// bool QTreeWidgetItem::isHidden()


static void _init_f_isHidden_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isHidden_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<bool > ((bool)((QTreeWidgetItem *)cls)->isHidden ());
}

static qt_gsi::GenericMethod *_create_f_isHidden_c0 ()
{
  return new qt_gsi::GenericMethod ("isHidden?|:hidden", "@brief Method bool QTreeWidgetItem::isHidden()\n", true, &_init_f_isHidden_c0, &_call_f_isHidden_c0);
}

// bool QTreeWidgetItem::isSelected()


static void _init_f_isSelected_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isSelected_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<bool > ((bool)((QTreeWidgetItem *)cls)->isSelected ());
}

static qt_gsi::GenericMethod *_create_f_isSelected_c0 ()
{
  return new qt_gsi::GenericMethod ("isSelected?|:selected", "@brief Method bool QTreeWidgetItem::isSelected()\n", true, &_init_f_isSelected_c0, &_call_f_isSelected_c0);
}

// bool QTreeWidgetItem::operator<(const QTreeWidgetItem &other)


static void _init_f_operator_lt__c2805 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QTreeWidgetItem & > (argspec_0);
  decl->set_return<bool > ();
}

static void _call_f_operator_lt__c2805 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QTreeWidgetItem &arg1 = args.read<const QTreeWidgetItem & > ();
  ret.write<bool > ((bool)((QTreeWidgetItem *)cls)->operator< (arg1));
}

static qt_gsi::GenericMethod *_create_f_operator_lt__c2805 ()
{
  return new qt_gsi::GenericMethod ("<", "@brief Method bool QTreeWidgetItem::operator<(const QTreeWidgetItem &other)\n", true, &_init_f_operator_lt__c2805, &_call_f_operator_lt__c2805);
}

// QTreeWidgetItem &QTreeWidgetItem::operator=(const QTreeWidgetItem &other)


static void _init_f_operator_eq__2805 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QTreeWidgetItem & > (argspec_0);
  decl->set_return<QTreeWidgetItem & > ();
}

static void _call_f_operator_eq__2805 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QTreeWidgetItem &arg1 = args.read<const QTreeWidgetItem & > ();
  ret.write<QTreeWidgetItem & > ((QTreeWidgetItem &)((QTreeWidgetItem *)cls)->operator= (arg1));
}

static qt_gsi::GenericMethod *_create_f_operator_eq__2805 ()
{
  return new qt_gsi::GenericMethod ("assign", "@brief Method QTreeWidgetItem &QTreeWidgetItem::operator=(const QTreeWidgetItem &other)\n", false, &_init_f_operator_eq__2805, &_call_f_operator_eq__2805);
}

// QTreeWidgetItem *QTreeWidgetItem::parent()


static void _init_f_parent_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QTreeWidgetItem * > ();
}

static void _call_f_parent_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QTreeWidgetItem * > ((QTreeWidgetItem *)((QTreeWidgetItem *)cls)->parent ());
}

static qt_gsi::GenericMethod *_create_f_parent_c0 ()
{
  return new qt_gsi::GenericMethod ("parent", "@brief Method QTreeWidgetItem *QTreeWidgetItem::parent()\n", true, &_init_f_parent_c0, &_call_f_parent_c0);
}

// void QTreeWidgetItem::read(QDataStream &in)


static void _init_f_read_1697 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("in");
  decl->add_arg<QDataStream & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_read_1697 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QDataStream &arg1 = args.read<QDataStream & > ();
  ((QTreeWidgetItem *)cls)->read (arg1);
}

static qt_gsi::GenericMethod *_create_f_read_1697 ()
{
  return new qt_gsi::GenericMethod ("read", "@brief Method void QTreeWidgetItem::read(QDataStream &in)\n", false, &_init_f_read_1697, &_call_f_read_1697);
}

// void QTreeWidgetItem::removeChild(QTreeWidgetItem *child)


static void _init_f_removeChild_2114 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("child");
  decl->add_arg<QTreeWidgetItem * > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_removeChild_2114 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QTreeWidgetItem *arg1 = args.read<QTreeWidgetItem * > ();
  ((QTreeWidgetItem *)cls)->removeChild (arg1);
}

static qt_gsi::GenericMethod *_create_f_removeChild_2114 ()
{
  return new qt_gsi::GenericMethod ("removeChild", "@brief Method void QTreeWidgetItem::removeChild(QTreeWidgetItem *child)\n", false, &_init_f_removeChild_2114, &_call_f_removeChild_2114);
}

// void QTreeWidgetItem::setBackground(int column, const QBrush &brush)


static void _init_f_setBackground_2569 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("brush");
  decl->add_arg<const QBrush & > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_setBackground_2569 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  const QBrush &arg2 = args.read<const QBrush & > ();
  ((QTreeWidgetItem *)cls)->setBackground (arg1, arg2);
}

static qt_gsi::GenericMethod *_create_f_setBackground_2569 ()
{
  return new qt_gsi::GenericMethod ("setBackground", "@brief Method void QTreeWidgetItem::setBackground(int column, const QBrush &brush)\n", false, &_init_f_setBackground_2569, &_call_f_setBackground_2569);
}

// void QTreeWidgetItem::setBackgroundColor(int column, const QColor &color)


static void _init_f_setBackgroundColor_2564 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("color");
  decl->add_arg<const QColor & > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_setBackgroundColor_2564 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  const QColor &arg2 = args.read<const QColor & > ();
  ((QTreeWidgetItem *)cls)->setBackgroundColor (arg1, arg2);
}

static qt_gsi::GenericMethod *_create_f_setBackgroundColor_2564 ()
{
  return new qt_gsi::GenericMethod ("setBackgroundColor", "@brief Method void QTreeWidgetItem::setBackgroundColor(int column, const QColor &color)\n", false, &_init_f_setBackgroundColor_2564, &_call_f_setBackgroundColor_2564);
}

// void QTreeWidgetItem::setCheckState(int column, Qt::CheckState state)


static void _init_f_setCheckState_2399 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("state");
  decl->add_arg<const qt_gsi::Converter<Qt::CheckState>::target_type & > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_setCheckState_2399 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  const qt_gsi::Converter<Qt::CheckState>::target_type & arg2 = args.read<const qt_gsi::Converter<Qt::CheckState>::target_type & > ();
  ((QTreeWidgetItem *)cls)->setCheckState (arg1, qt_gsi::QtToCppAdaptor<Qt::CheckState>(arg2).cref());
}

static qt_gsi::GenericMethod *_create_f_setCheckState_2399 ()
{
  return new qt_gsi::GenericMethod ("setCheckState", "@brief Method void QTreeWidgetItem::setCheckState(int column, Qt::CheckState state)\n", false, &_init_f_setCheckState_2399, &_call_f_setCheckState_2399);
}

// void QTreeWidgetItem::setChildIndicatorPolicy(QTreeWidgetItem::ChildIndicatorPolicy policy)


static void _init_f_setChildIndicatorPolicy_4077 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("policy");
  decl->add_arg<const qt_gsi::Converter<QTreeWidgetItem::ChildIndicatorPolicy>::target_type & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setChildIndicatorPolicy_4077 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const qt_gsi::Converter<QTreeWidgetItem::ChildIndicatorPolicy>::target_type & arg1 = args.read<const qt_gsi::Converter<QTreeWidgetItem::ChildIndicatorPolicy>::target_type & > ();
  ((QTreeWidgetItem *)cls)->setChildIndicatorPolicy (qt_gsi::QtToCppAdaptor<QTreeWidgetItem::ChildIndicatorPolicy>(arg1).cref());
}

static qt_gsi::GenericMethod *_create_f_setChildIndicatorPolicy_4077 ()
{
  return new qt_gsi::GenericMethod ("setChildIndicatorPolicy|childIndicatorPolicy=", "@brief Method void QTreeWidgetItem::setChildIndicatorPolicy(QTreeWidgetItem::ChildIndicatorPolicy policy)\n", false, &_init_f_setChildIndicatorPolicy_4077, &_call_f_setChildIndicatorPolicy_4077);
}

// void QTreeWidgetItem::setData(int column, int role, const QVariant &value)


static void _init_f_setData_3437 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("role");
  decl->add_arg<int > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("value");
  decl->add_arg<const QVariant & > (argspec_2);
  decl->set_return<void > ();
}

static void _call_f_setData_3437 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  int arg2 = args.read<int > ();
  const QVariant &arg3 = args.read<const QVariant & > ();
  ((QTreeWidgetItem *)cls)->setData (arg1, arg2, arg3);
}

static qt_gsi::GenericMethod *_create_f_setData_3437 ()
{
  return new qt_gsi::GenericMethod ("setData", "@brief Method void QTreeWidgetItem::setData(int column, int role, const QVariant &value)\n", false, &_init_f_setData_3437, &_call_f_setData_3437);
}

// void QTreeWidgetItem::setDisabled(bool disabled)


static void _init_f_setDisabled_864 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("disabled");
  decl->add_arg<bool > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setDisabled_864 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  bool arg1 = args.read<bool > ();
  ((QTreeWidgetItem *)cls)->setDisabled (arg1);
}

static qt_gsi::GenericMethod *_create_f_setDisabled_864 ()
{
  return new qt_gsi::GenericMethod ("setDisabled|disabled=", "@brief Method void QTreeWidgetItem::setDisabled(bool disabled)\n", false, &_init_f_setDisabled_864, &_call_f_setDisabled_864);
}

// void QTreeWidgetItem::setExpanded(bool expand)


static void _init_f_setExpanded_864 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("expand");
  decl->add_arg<bool > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setExpanded_864 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  bool arg1 = args.read<bool > ();
  ((QTreeWidgetItem *)cls)->setExpanded (arg1);
}

static qt_gsi::GenericMethod *_create_f_setExpanded_864 ()
{
  return new qt_gsi::GenericMethod ("setExpanded|expanded=", "@brief Method void QTreeWidgetItem::setExpanded(bool expand)\n", false, &_init_f_setExpanded_864, &_call_f_setExpanded_864);
}

// void QTreeWidgetItem::setFirstColumnSpanned(bool span)


static void _init_f_setFirstColumnSpanned_864 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("span");
  decl->add_arg<bool > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setFirstColumnSpanned_864 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  bool arg1 = args.read<bool > ();
  ((QTreeWidgetItem *)cls)->setFirstColumnSpanned (arg1);
}

static qt_gsi::GenericMethod *_create_f_setFirstColumnSpanned_864 ()
{
  return new qt_gsi::GenericMethod ("setFirstColumnSpanned|firstColumnSpanned=", "@brief Method void QTreeWidgetItem::setFirstColumnSpanned(bool span)\n", false, &_init_f_setFirstColumnSpanned_864, &_call_f_setFirstColumnSpanned_864);
}

// void QTreeWidgetItem::setFlags(QFlags<Qt::ItemFlag> flags)


static void _init_f_setFlags_2222 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("flags");
  decl->add_arg<const qt_gsi::Converter<QFlags<Qt::ItemFlag> >::target_type & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setFlags_2222 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const qt_gsi::Converter<QFlags<Qt::ItemFlag> >::target_type & arg1 = args.read<const qt_gsi::Converter<QFlags<Qt::ItemFlag> >::target_type & > ();
  ((QTreeWidgetItem *)cls)->setFlags (qt_gsi::QtToCppAdaptor<QFlags<Qt::ItemFlag> >(arg1).cref());
}

static qt_gsi::GenericMethod *_create_f_setFlags_2222 ()
{
  return new qt_gsi::GenericMethod ("setFlags|flags=", "@brief Method void QTreeWidgetItem::setFlags(QFlags<Qt::ItemFlag> flags)\n", false, &_init_f_setFlags_2222, &_call_f_setFlags_2222);
}

// void QTreeWidgetItem::setFont(int column, const QFont &font)


static void _init_f_setFont_2460 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("font");
  decl->add_arg<const QFont & > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_setFont_2460 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  const QFont &arg2 = args.read<const QFont & > ();
  ((QTreeWidgetItem *)cls)->setFont (arg1, arg2);
}

static qt_gsi::GenericMethod *_create_f_setFont_2460 ()
{
  return new qt_gsi::GenericMethod ("setFont", "@brief Method void QTreeWidgetItem::setFont(int column, const QFont &font)\n", false, &_init_f_setFont_2460, &_call_f_setFont_2460);
}

// void QTreeWidgetItem::setForeground(int column, const QBrush &brush)


static void _init_f_setForeground_2569 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("brush");
  decl->add_arg<const QBrush & > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_setForeground_2569 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  const QBrush &arg2 = args.read<const QBrush & > ();
  ((QTreeWidgetItem *)cls)->setForeground (arg1, arg2);
}

static qt_gsi::GenericMethod *_create_f_setForeground_2569 ()
{
  return new qt_gsi::GenericMethod ("setForeground", "@brief Method void QTreeWidgetItem::setForeground(int column, const QBrush &brush)\n", false, &_init_f_setForeground_2569, &_call_f_setForeground_2569);
}

// void QTreeWidgetItem::setHidden(bool hide)


static void _init_f_setHidden_864 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("hide");
  decl->add_arg<bool > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setHidden_864 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  bool arg1 = args.read<bool > ();
  ((QTreeWidgetItem *)cls)->setHidden (arg1);
}

static qt_gsi::GenericMethod *_create_f_setHidden_864 ()
{
  return new qt_gsi::GenericMethod ("setHidden|hidden=", "@brief Method void QTreeWidgetItem::setHidden(bool hide)\n", false, &_init_f_setHidden_864, &_call_f_setHidden_864);
}

// void QTreeWidgetItem::setIcon(int column, const QIcon &icon)


static void _init_f_setIcon_2446 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("icon");
  decl->add_arg<const QIcon & > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_setIcon_2446 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  const QIcon &arg2 = args.read<const QIcon & > ();
  ((QTreeWidgetItem *)cls)->setIcon (arg1, arg2);
}

static qt_gsi::GenericMethod *_create_f_setIcon_2446 ()
{
  return new qt_gsi::GenericMethod ("setIcon", "@brief Method void QTreeWidgetItem::setIcon(int column, const QIcon &icon)\n", false, &_init_f_setIcon_2446, &_call_f_setIcon_2446);
}

// void QTreeWidgetItem::setSelected(bool select)


static void _init_f_setSelected_864 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("select");
  decl->add_arg<bool > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setSelected_864 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  bool arg1 = args.read<bool > ();
  ((QTreeWidgetItem *)cls)->setSelected (arg1);
}

static qt_gsi::GenericMethod *_create_f_setSelected_864 ()
{
  return new qt_gsi::GenericMethod ("setSelected|selected=", "@brief Method void QTreeWidgetItem::setSelected(bool select)\n", false, &_init_f_setSelected_864, &_call_f_setSelected_864);
}

// void QTreeWidgetItem::setSizeHint(int column, const QSize &size)


static void _init_f_setSizeHint_2464 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("size");
  decl->add_arg<const QSize & > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_setSizeHint_2464 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  const QSize &arg2 = args.read<const QSize & > ();
  ((QTreeWidgetItem *)cls)->setSizeHint (arg1, arg2);
}

static qt_gsi::GenericMethod *_create_f_setSizeHint_2464 ()
{
  return new qt_gsi::GenericMethod ("setSizeHint", "@brief Method void QTreeWidgetItem::setSizeHint(int column, const QSize &size)\n", false, &_init_f_setSizeHint_2464, &_call_f_setSizeHint_2464);
}

// void QTreeWidgetItem::setStatusTip(int column, const QString &statusTip)


static void _init_f_setStatusTip_2684 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("statusTip");
  decl->add_arg<const QString & > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_setStatusTip_2684 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  const QString &arg2 = args.read<const QString & > ();
  ((QTreeWidgetItem *)cls)->setStatusTip (arg1, arg2);
}

static qt_gsi::GenericMethod *_create_f_setStatusTip_2684 ()
{
  return new qt_gsi::GenericMethod ("setStatusTip", "@brief Method void QTreeWidgetItem::setStatusTip(int column, const QString &statusTip)\n", false, &_init_f_setStatusTip_2684, &_call_f_setStatusTip_2684);
}

// void QTreeWidgetItem::setText(int column, const QString &text)


static void _init_f_setText_2684 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("text");
  decl->add_arg<const QString & > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_setText_2684 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  const QString &arg2 = args.read<const QString & > ();
  ((QTreeWidgetItem *)cls)->setText (arg1, arg2);
}

static qt_gsi::GenericMethod *_create_f_setText_2684 ()
{
  return new qt_gsi::GenericMethod ("setText", "@brief Method void QTreeWidgetItem::setText(int column, const QString &text)\n", false, &_init_f_setText_2684, &_call_f_setText_2684);
}

// void QTreeWidgetItem::setTextAlignment(int column, int alignment)


static void _init_f_setTextAlignment_1426 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("alignment");
  decl->add_arg<int > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_setTextAlignment_1426 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  int arg2 = args.read<int > ();
  ((QTreeWidgetItem *)cls)->setTextAlignment (arg1, arg2);
}

static qt_gsi::GenericMethod *_create_f_setTextAlignment_1426 ()
{
  return new qt_gsi::GenericMethod ("setTextAlignment", "@brief Method void QTreeWidgetItem::setTextAlignment(int column, int alignment)\n", false, &_init_f_setTextAlignment_1426, &_call_f_setTextAlignment_1426);
}

// void QTreeWidgetItem::setTextColor(int column, const QColor &color)


static void _init_f_setTextColor_2564 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("color");
  decl->add_arg<const QColor & > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_setTextColor_2564 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  const QColor &arg2 = args.read<const QColor & > ();
  ((QTreeWidgetItem *)cls)->setTextColor (arg1, arg2);
}

static qt_gsi::GenericMethod *_create_f_setTextColor_2564 ()
{
  return new qt_gsi::GenericMethod ("setTextColor", "@brief Method void QTreeWidgetItem::setTextColor(int column, const QColor &color)\n", false, &_init_f_setTextColor_2564, &_call_f_setTextColor_2564);
}

// void QTreeWidgetItem::setToolTip(int column, const QString &toolTip)


static void _init_f_setToolTip_2684 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("toolTip");
  decl->add_arg<const QString & > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_setToolTip_2684 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  const QString &arg2 = args.read<const QString & > ();
  ((QTreeWidgetItem *)cls)->setToolTip (arg1, arg2);
}

static qt_gsi::GenericMethod *_create_f_setToolTip_2684 ()
{
  return new qt_gsi::GenericMethod ("setToolTip", "@brief Method void QTreeWidgetItem::setToolTip(int column, const QString &toolTip)\n", false, &_init_f_setToolTip_2684, &_call_f_setToolTip_2684);
}

// void QTreeWidgetItem::setWhatsThis(int column, const QString &whatsThis)


static void _init_f_setWhatsThis_2684 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("whatsThis");
  decl->add_arg<const QString & > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_setWhatsThis_2684 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  const QString &arg2 = args.read<const QString & > ();
  ((QTreeWidgetItem *)cls)->setWhatsThis (arg1, arg2);
}

static qt_gsi::GenericMethod *_create_f_setWhatsThis_2684 ()
{
  return new qt_gsi::GenericMethod ("setWhatsThis", "@brief Method void QTreeWidgetItem::setWhatsThis(int column, const QString &whatsThis)\n", false, &_init_f_setWhatsThis_2684, &_call_f_setWhatsThis_2684);
}

// QSize QTreeWidgetItem::sizeHint(int column)


static void _init_f_sizeHint_c767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  decl->set_return<QSize > ();
}

static void _call_f_sizeHint_c767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<QSize > ((QSize)((QTreeWidgetItem *)cls)->sizeHint (arg1));
}

static qt_gsi::GenericMethod *_create_f_sizeHint_c767 ()
{
  return new qt_gsi::GenericMethod ("sizeHint", "@brief Method QSize QTreeWidgetItem::sizeHint(int column)\n", true, &_init_f_sizeHint_c767, &_call_f_sizeHint_c767);
}

// void QTreeWidgetItem::sortChildren(int column, Qt::SortOrder order)


static void _init_f_sortChildren_2340 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("order");
  decl->add_arg<const qt_gsi::Converter<Qt::SortOrder>::target_type & > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_sortChildren_2340 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  const qt_gsi::Converter<Qt::SortOrder>::target_type & arg2 = args.read<const qt_gsi::Converter<Qt::SortOrder>::target_type & > ();
  ((QTreeWidgetItem *)cls)->sortChildren (arg1, qt_gsi::QtToCppAdaptor<Qt::SortOrder>(arg2).cref());
}

static qt_gsi::GenericMethod *_create_f_sortChildren_2340 ()
{
  return new qt_gsi::GenericMethod ("sortChildren", "@brief Method void QTreeWidgetItem::sortChildren(int column, Qt::SortOrder order)\n", false, &_init_f_sortChildren_2340, &_call_f_sortChildren_2340);
}

// QString QTreeWidgetItem::statusTip(int column)


static void _init_f_statusTip_c767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  decl->set_return<QString > ();
}

static void _call_f_statusTip_c767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<QString > ((QString)((QTreeWidgetItem *)cls)->statusTip (arg1));
}

static qt_gsi::GenericMethod *_create_f_statusTip_c767 ()
{
  return new qt_gsi::GenericMethod ("statusTip", "@brief Method QString QTreeWidgetItem::statusTip(int column)\n", true, &_init_f_statusTip_c767, &_call_f_statusTip_c767);
}

// QTreeWidgetItem *QTreeWidgetItem::takeChild(int index)


static void _init_f_takeChild_767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("index");
  decl->add_arg<int > (argspec_0);
  decl->set_return_new<QTreeWidgetItem * > ();
}

static void _call_f_takeChild_767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<QTreeWidgetItem * > ((QTreeWidgetItem *)((QTreeWidgetItem *)cls)->takeChild (arg1));
}

static qt_gsi::GenericMethod *_create_f_takeChild_767 ()
{
  return new qt_gsi::GenericMethod ("takeChild", "@brief Method QTreeWidgetItem *QTreeWidgetItem::takeChild(int index)\n", false, &_init_f_takeChild_767, &_call_f_takeChild_767);
}

// QList<QTreeWidgetItem *> QTreeWidgetItem::takeChildren()


static void _init_f_takeChildren_0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return_new<qt_gsi::Converter<QList<QTreeWidgetItem *> >::target_type > ();
}

static void _call_f_takeChildren_0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<qt_gsi::Converter<QList<QTreeWidgetItem *> >::target_type > ((qt_gsi::Converter<QList<QTreeWidgetItem *> >::target_type)qt_gsi::CppToQtAdaptor<QList<QTreeWidgetItem *> >(((QTreeWidgetItem *)cls)->takeChildren ()));
}

static qt_gsi::GenericMethod *_create_f_takeChildren_0 ()
{
  return new qt_gsi::GenericMethod ("takeChildren", "@brief Method QList<QTreeWidgetItem *> QTreeWidgetItem::takeChildren()\n", false, &_init_f_takeChildren_0, &_call_f_takeChildren_0);
}

// QString QTreeWidgetItem::text(int column)


static void _init_f_text_c767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  decl->set_return<QString > ();
}

static void _call_f_text_c767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<QString > ((QString)((QTreeWidgetItem *)cls)->text (arg1));
}

static qt_gsi::GenericMethod *_create_f_text_c767 ()
{
  return new qt_gsi::GenericMethod ("text", "@brief Method QString QTreeWidgetItem::text(int column)\n", true, &_init_f_text_c767, &_call_f_text_c767);
}

// int QTreeWidgetItem::textAlignment(int column)


static void _init_f_textAlignment_c767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  decl->set_return<int > ();
}

static void _call_f_textAlignment_c767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<int > ((int)((QTreeWidgetItem *)cls)->textAlignment (arg1));
}

static qt_gsi::GenericMethod *_create_f_textAlignment_c767 ()
{
  return new qt_gsi::GenericMethod ("textAlignment", "@brief Method int QTreeWidgetItem::textAlignment(int column)\n", true, &_init_f_textAlignment_c767, &_call_f_textAlignment_c767);
}

// QColor QTreeWidgetItem::textColor(int column)


static void _init_f_textColor_c767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  decl->set_return<QColor > ();
}

static void _call_f_textColor_c767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<QColor > ((QColor)((QTreeWidgetItem *)cls)->textColor (arg1));
}

static qt_gsi::GenericMethod *_create_f_textColor_c767 ()
{
  return new qt_gsi::GenericMethod ("textColor", "@brief Method QColor QTreeWidgetItem::textColor(int column)\n", true, &_init_f_textColor_c767, &_call_f_textColor_c767);
}

// QString QTreeWidgetItem::toolTip(int column)


static void _init_f_toolTip_c767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  decl->set_return<QString > ();
}

static void _call_f_toolTip_c767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<QString > ((QString)((QTreeWidgetItem *)cls)->toolTip (arg1));
}

static qt_gsi::GenericMethod *_create_f_toolTip_c767 ()
{
  return new qt_gsi::GenericMethod ("toolTip", "@brief Method QString QTreeWidgetItem::toolTip(int column)\n", true, &_init_f_toolTip_c767, &_call_f_toolTip_c767);
}

// QTreeWidget *QTreeWidgetItem::treeWidget()


static void _init_f_treeWidget_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QTreeWidget * > ();
}

static void _call_f_treeWidget_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QTreeWidget * > ((QTreeWidget *)((QTreeWidgetItem *)cls)->treeWidget ());
}

static qt_gsi::GenericMethod *_create_f_treeWidget_c0 ()
{
  return new qt_gsi::GenericMethod ("treeWidget", "@brief Method QTreeWidget *QTreeWidgetItem::treeWidget()\n", true, &_init_f_treeWidget_c0, &_call_f_treeWidget_c0);
}

// int QTreeWidgetItem::type()


static void _init_f_type_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<int > ();
}

static void _call_f_type_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<int > ((int)((QTreeWidgetItem *)cls)->type ());
}

static qt_gsi::GenericMethod *_create_f_type_c0 ()
{
  return new qt_gsi::GenericMethod ("type", "@brief Method int QTreeWidgetItem::type()\n", true, &_init_f_type_c0, &_call_f_type_c0);
}

// QString QTreeWidgetItem::whatsThis(int column)


static void _init_f_whatsThis_c767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  decl->set_return<QString > ();
}

static void _call_f_whatsThis_c767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<QString > ((QString)((QTreeWidgetItem *)cls)->whatsThis (arg1));
}

static qt_gsi::GenericMethod *_create_f_whatsThis_c767 ()
{
  return new qt_gsi::GenericMethod ("whatsThis", "@brief Method QString QTreeWidgetItem::whatsThis(int column)\n", true, &_init_f_whatsThis_c767, &_call_f_whatsThis_c767);
}

// void QTreeWidgetItem::write(QDataStream &out)


static void _init_f_write_c1697 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("out");
  decl->add_arg<QDataStream & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_write_c1697 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QDataStream &arg1 = args.read<QDataStream & > ();
  ((QTreeWidgetItem *)cls)->write (arg1);
}

static qt_gsi::GenericMethod *_create_f_write_c1697 ()
{
  return new qt_gsi::GenericMethod ("write", "@brief Method void QTreeWidgetItem::write(QDataStream &out)\n", true, &_init_f_write_c1697, &_call_f_write_c1697);
}

namespace gsi
{
gsi::Class<QTreeWidgetItem> decl_QTreeWidgetItem ("QTreeWidgetItem_Native",
  gsi::Methods(_create_f_addChild_2114 ()) +
  gsi::Methods(_create_f_addChildren_3606 ()) +
  gsi::Methods(_create_f_background_c767 ()) +
  gsi::Methods(_create_f_backgroundColor_c767 ()) +
  gsi::Methods(_create_f_checkState_c767 ()) +
  gsi::Methods(_create_f_child_c767 ()) +
  gsi::Methods(_create_f_childCount_c0 ()) +
  gsi::Methods(_create_f_childIndicatorPolicy_c0 ()) +
  gsi::Methods(_create_f_clone_c0 ()) +
  gsi::Methods(_create_f_columnCount_c0 ()) +
  gsi::Methods(_create_f_data_c1426 ()) +
  gsi::Methods(_create_f_flags_c0 ()) +
  gsi::Methods(_create_f_font_c767 ()) +
  gsi::Methods(_create_f_foreground_c767 ()) +
  gsi::Methods(_create_f_icon_c767 ()) +
  gsi::Methods(_create_f_indexOfChild_c2114 ()) +
  gsi::Methods(_create_f_insertChild_2773 ()) +
  gsi::Methods(_create_f_insertChildren_4265 ()) +
  gsi::Methods(_create_f_isDisabled_c0 ()) +
  gsi::Methods(_create_f_isExpanded_c0 ()) +
  gsi::Methods(_create_f_isFirstColumnSpanned_c0 ()) +
  gsi::Methods(_create_f_isHidden_c0 ()) +
  gsi::Methods(_create_f_isSelected_c0 ()) +
  gsi::Methods(_create_f_operator_lt__c2805 ()) +
  gsi::Methods(_create_f_operator_eq__2805 ()) +
  gsi::Methods(_create_f_parent_c0 ()) +
  gsi::Methods(_create_f_read_1697 ()) +
  gsi::Methods(_create_f_removeChild_2114 ()) +
  gsi::Methods(_create_f_setBackground_2569 ()) +
  gsi::Methods(_create_f_setBackgroundColor_2564 ()) +
  gsi::Methods(_create_f_setCheckState_2399 ()) +
  gsi::Methods(_create_f_setChildIndicatorPolicy_4077 ()) +
  gsi::Methods(_create_f_setData_3437 ()) +
  gsi::Methods(_create_f_setDisabled_864 ()) +
  gsi::Methods(_create_f_setExpanded_864 ()) +
  gsi::Methods(_create_f_setFirstColumnSpanned_864 ()) +
  gsi::Methods(_create_f_setFlags_2222 ()) +
  gsi::Methods(_create_f_setFont_2460 ()) +
  gsi::Methods(_create_f_setForeground_2569 ()) +
  gsi::Methods(_create_f_setHidden_864 ()) +
  gsi::Methods(_create_f_setIcon_2446 ()) +
  gsi::Methods(_create_f_setSelected_864 ()) +
  gsi::Methods(_create_f_setSizeHint_2464 ()) +
  gsi::Methods(_create_f_setStatusTip_2684 ()) +
  gsi::Methods(_create_f_setText_2684 ()) +
  gsi::Methods(_create_f_setTextAlignment_1426 ()) +
  gsi::Methods(_create_f_setTextColor_2564 ()) +
  gsi::Methods(_create_f_setToolTip_2684 ()) +
  gsi::Methods(_create_f_setWhatsThis_2684 ()) +
  gsi::Methods(_create_f_sizeHint_c767 ()) +
  gsi::Methods(_create_f_sortChildren_2340 ()) +
  gsi::Methods(_create_f_statusTip_c767 ()) +
  gsi::Methods(_create_f_takeChild_767 ()) +
  gsi::Methods(_create_f_takeChildren_0 ()) +
  gsi::Methods(_create_f_text_c767 ()) +
  gsi::Methods(_create_f_textAlignment_c767 ()) +
  gsi::Methods(_create_f_textColor_c767 ()) +
  gsi::Methods(_create_f_toolTip_c767 ()) +
  gsi::Methods(_create_f_treeWidget_c0 ()) +
  gsi::Methods(_create_f_type_c0 ()) +
  gsi::Methods(_create_f_whatsThis_c767 ()) +
  gsi::Methods(_create_f_write_c1697 ()),
  "@hide\n@alias QTreeWidgetItem");
}


class QTreeWidgetItem_Adaptor : public QTreeWidgetItem, public qt_gsi::QtObjectBase
{
public:

  virtual ~QTreeWidgetItem_Adaptor();

  //  [adaptor ctor] QTreeWidgetItem::QTreeWidgetItem(int type)
  QTreeWidgetItem_Adaptor() : QTreeWidgetItem()
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTreeWidgetItem::QTreeWidgetItem(int type)
  QTreeWidgetItem_Adaptor(int type) : QTreeWidgetItem(type)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTreeWidgetItem::QTreeWidgetItem(const QStringList &strings, int type)
  QTreeWidgetItem_Adaptor(const QStringList &strings) : QTreeWidgetItem(strings)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTreeWidgetItem::QTreeWidgetItem(const QStringList &strings, int type)
  QTreeWidgetItem_Adaptor(const QStringList &strings, int type) : QTreeWidgetItem(strings, type)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTreeWidgetItem::QTreeWidgetItem(QTreeWidget *view, int type)
  QTreeWidgetItem_Adaptor(QTreeWidget *view) : QTreeWidgetItem(view)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTreeWidgetItem::QTreeWidgetItem(QTreeWidget *view, int type)
  QTreeWidgetItem_Adaptor(QTreeWidget *view, int type) : QTreeWidgetItem(view, type)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTreeWidgetItem::QTreeWidgetItem(QTreeWidget *view, const QStringList &strings, int type)
  QTreeWidgetItem_Adaptor(QTreeWidget *view, const QStringList &strings) : QTreeWidgetItem(view, strings)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTreeWidgetItem::QTreeWidgetItem(QTreeWidget *view, const QStringList &strings, int type)
  QTreeWidgetItem_Adaptor(QTreeWidget *view, const QStringList &strings, int type) : QTreeWidgetItem(view, strings, type)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTreeWidgetItem::QTreeWidgetItem(QTreeWidget *view, QTreeWidgetItem *after, int type)
  QTreeWidgetItem_Adaptor(QTreeWidget *view, QTreeWidgetItem *after) : QTreeWidgetItem(view, after)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTreeWidgetItem::QTreeWidgetItem(QTreeWidget *view, QTreeWidgetItem *after, int type)
  QTreeWidgetItem_Adaptor(QTreeWidget *view, QTreeWidgetItem *after, int type) : QTreeWidgetItem(view, after, type)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTreeWidgetItem::QTreeWidgetItem(QTreeWidgetItem *parent, int type)
  QTreeWidgetItem_Adaptor(QTreeWidgetItem *parent) : QTreeWidgetItem(parent)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTreeWidgetItem::QTreeWidgetItem(QTreeWidgetItem *parent, int type)
  QTreeWidgetItem_Adaptor(QTreeWidgetItem *parent, int type) : QTreeWidgetItem(parent, type)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTreeWidgetItem::QTreeWidgetItem(QTreeWidgetItem *parent, const QStringList &strings, int type)
  QTreeWidgetItem_Adaptor(QTreeWidgetItem *parent, const QStringList &strings) : QTreeWidgetItem(parent, strings)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTreeWidgetItem::QTreeWidgetItem(QTreeWidgetItem *parent, const QStringList &strings, int type)
  QTreeWidgetItem_Adaptor(QTreeWidgetItem *parent, const QStringList &strings, int type) : QTreeWidgetItem(parent, strings, type)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTreeWidgetItem::QTreeWidgetItem(QTreeWidgetItem *parent, QTreeWidgetItem *after, int type)
  QTreeWidgetItem_Adaptor(QTreeWidgetItem *parent, QTreeWidgetItem *after) : QTreeWidgetItem(parent, after)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTreeWidgetItem::QTreeWidgetItem(QTreeWidgetItem *parent, QTreeWidgetItem *after, int type)
  QTreeWidgetItem_Adaptor(QTreeWidgetItem *parent, QTreeWidgetItem *after, int type) : QTreeWidgetItem(parent, after, type)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  void QTreeWidgetItem::emitDataChanged()
  void fp_QTreeWidgetItem_emitDataChanged_0 () {
    QTreeWidgetItem::emitDataChanged();
  }

  //  [adaptor impl] QTreeWidgetItem *QTreeWidgetItem::clone()
  QTreeWidgetItem * cbs_clone_c0_0() const
  {
    return QTreeWidgetItem::clone();
  }

  virtual QTreeWidgetItem * clone() const
  {
    if (cb_clone_c0_0.can_issue()) {
      return cb_clone_c0_0.issue<QTreeWidgetItem_Adaptor, QTreeWidgetItem *>(&QTreeWidgetItem_Adaptor::cbs_clone_c0_0);
    } else {
      return QTreeWidgetItem::clone();
    }
  }

  //  [adaptor impl] QVariant QTreeWidgetItem::data(int column, int role)
  QVariant cbs_data_c1426_0(int column, int role) const
  {
    return QTreeWidgetItem::data(column, role);
  }

  virtual QVariant data(int column, int role) const
  {
    if (cb_data_c1426_0.can_issue()) {
      return cb_data_c1426_0.issue<QTreeWidgetItem_Adaptor, QVariant, int, int>(&QTreeWidgetItem_Adaptor::cbs_data_c1426_0, column, role);
    } else {
      return QTreeWidgetItem::data(column, role);
    }
  }

  //  [adaptor impl] bool QTreeWidgetItem::operator<(const QTreeWidgetItem &other)
  bool cbs_operator_lt__c2805_0(const QTreeWidgetItem &other) const
  {
    return QTreeWidgetItem::operator<(other);
  }

  virtual bool operator<(const QTreeWidgetItem &other) const
  {
    if (cb_operator_lt__c2805_0.can_issue()) {
      return cb_operator_lt__c2805_0.issue<QTreeWidgetItem_Adaptor, bool, const QTreeWidgetItem &>(&QTreeWidgetItem_Adaptor::cbs_operator_lt__c2805_0, other);
    } else {
      return QTreeWidgetItem::operator<(other);
    }
  }

  //  [adaptor impl] void QTreeWidgetItem::read(QDataStream &in)
  void cbs_read_1697_0(QDataStream &in)
  {
    QTreeWidgetItem::read(in);
  }

  virtual void read(QDataStream &in)
  {
    if (cb_read_1697_0.can_issue()) {
      cb_read_1697_0.issue<QTreeWidgetItem_Adaptor, QDataStream &>(&QTreeWidgetItem_Adaptor::cbs_read_1697_0, in);
    } else {
      QTreeWidgetItem::read(in);
    }
  }

  //  [adaptor impl] void QTreeWidgetItem::setData(int column, int role, const QVariant &value)
  void cbs_setData_3437_0(int column, int role, const QVariant &value)
  {
    QTreeWidgetItem::setData(column, role, value);
  }

  virtual void setData(int column, int role, const QVariant &value)
  {
    if (cb_setData_3437_0.can_issue()) {
      cb_setData_3437_0.issue<QTreeWidgetItem_Adaptor, int, int, const QVariant &>(&QTreeWidgetItem_Adaptor::cbs_setData_3437_0, column, role, value);
    } else {
      QTreeWidgetItem::setData(column, role, value);
    }
  }

  //  [adaptor impl] void QTreeWidgetItem::write(QDataStream &out)
  void cbs_write_c1697_0(QDataStream &out) const
  {
    QTreeWidgetItem::write(out);
  }

  virtual void write(QDataStream &out) const
  {
    if (cb_write_c1697_0.can_issue()) {
      cb_write_c1697_0.issue<QTreeWidgetItem_Adaptor, QDataStream &>(&QTreeWidgetItem_Adaptor::cbs_write_c1697_0, out);
    } else {
      QTreeWidgetItem::write(out);
    }
  }

  gsi::Callback cb_clone_c0_0;
  gsi::Callback cb_data_c1426_0;
  gsi::Callback cb_operator_lt__c2805_0;
  gsi::Callback cb_read_1697_0;
  gsi::Callback cb_setData_3437_0;
  gsi::Callback cb_write_c1697_0;
};

QTreeWidgetItem_Adaptor::~QTreeWidgetItem_Adaptor() { }

//  Constructor QTreeWidgetItem::QTreeWidgetItem(int type) (adaptor class)

static void _init_ctor_QTreeWidgetItem_Adaptor_767 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("type", true, "QTreeWidgetItem::Type");
  decl->add_arg<int > (argspec_0);
  decl->set_return_new<QTreeWidgetItem_Adaptor *> ();
}

static void _call_ctor_QTreeWidgetItem_Adaptor_767 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args ? args.read<int > () : (int)(QTreeWidgetItem::Type);
  ret.write<QTreeWidgetItem_Adaptor *> (new QTreeWidgetItem_Adaptor (arg1));
}

static qt_gsi::GenericStaticMethod *_create_ctor_QTreeWidgetItem_Adaptor_767 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QTreeWidgetItem::QTreeWidgetItem(int type)\nThis method creates an object of class QTreeWidgetItem.", &_init_ctor_QTreeWidgetItem_Adaptor_767, &_call_ctor_QTreeWidgetItem_Adaptor_767);
}

//  Constructor QTreeWidgetItem::QTreeWidgetItem(const QStringList &strings, int type) (adaptor class)

static void _init_ctor_QTreeWidgetItem_Adaptor_3096 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("strings");
  decl->add_arg<const qt_gsi::Converter<QStringList>::target_type & > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("type", true, "QTreeWidgetItem::Type");
  decl->add_arg<int > (argspec_1);
  decl->set_return_new<QTreeWidgetItem_Adaptor *> ();
}

static void _call_ctor_QTreeWidgetItem_Adaptor_3096 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const qt_gsi::Converter<QStringList>::target_type & arg1 = args.read<const qt_gsi::Converter<QStringList>::target_type & > ();
  int arg2 = args ? args.read<int > () : (int)(QTreeWidgetItem::Type);
  ret.write<QTreeWidgetItem_Adaptor *> (new QTreeWidgetItem_Adaptor (qt_gsi::QtToCppAdaptor<QStringList>(arg1).cref(), arg2));
}

static qt_gsi::GenericStaticMethod *_create_ctor_QTreeWidgetItem_Adaptor_3096 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QTreeWidgetItem::QTreeWidgetItem(const QStringList &strings, int type)\nThis method creates an object of class QTreeWidgetItem.", &_init_ctor_QTreeWidgetItem_Adaptor_3096, &_call_ctor_QTreeWidgetItem_Adaptor_3096);
}

//  Constructor QTreeWidgetItem::QTreeWidgetItem(QTreeWidget *view, int type) (adaptor class)

static void _init_ctor_QTreeWidgetItem_Adaptor_2374 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("view");
  decl->add_arg<QTreeWidget * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("type", true, "QTreeWidgetItem::Type");
  decl->add_arg<int > (argspec_1);
  decl->set_return_new<QTreeWidgetItem_Adaptor *> ();
}

static void _call_ctor_QTreeWidgetItem_Adaptor_2374 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QTreeWidget *arg1 = args.read<QTreeWidget * > ();
  int arg2 = args ? args.read<int > () : (int)(QTreeWidgetItem::Type);
  QTreeWidgetItem_Adaptor *obj = new QTreeWidgetItem_Adaptor (arg1, arg2);
  if (arg1) {
    qt_gsi::qt_keep (obj);
  }
  ret.write<QTreeWidgetItem_Adaptor *> (obj);
}

static qt_gsi::GenericStaticMethod *_create_ctor_QTreeWidgetItem_Adaptor_2374 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QTreeWidgetItem::QTreeWidgetItem(QTreeWidget *view, int type)\nThis method creates an object of class QTreeWidgetItem.", &_init_ctor_QTreeWidgetItem_Adaptor_2374, &_call_ctor_QTreeWidgetItem_Adaptor_2374);
}

//  Constructor QTreeWidgetItem::QTreeWidgetItem(QTreeWidget *view, const QStringList &strings, int type) (adaptor class)

static void _init_ctor_QTreeWidgetItem_Adaptor_4703 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("view");
  decl->add_arg<QTreeWidget * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("strings");
  decl->add_arg<const qt_gsi::Converter<QStringList>::target_type & > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("type", true, "QTreeWidgetItem::Type");
  decl->add_arg<int > (argspec_2);
  decl->set_return_new<QTreeWidgetItem_Adaptor *> ();
}

static void _call_ctor_QTreeWidgetItem_Adaptor_4703 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QTreeWidget *arg1 = args.read<QTreeWidget * > ();
  const qt_gsi::Converter<QStringList>::target_type & arg2 = args.read<const qt_gsi::Converter<QStringList>::target_type & > ();
  int arg3 = args ? args.read<int > () : (int)(QTreeWidgetItem::Type);
  QTreeWidgetItem_Adaptor *obj = new QTreeWidgetItem_Adaptor (arg1, qt_gsi::QtToCppAdaptor<QStringList>(arg2).cref(), arg3);
  if (arg1) {
    qt_gsi::qt_keep (obj);
  }
  ret.write<QTreeWidgetItem_Adaptor *> (obj);
}

static qt_gsi::GenericStaticMethod *_create_ctor_QTreeWidgetItem_Adaptor_4703 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QTreeWidgetItem::QTreeWidgetItem(QTreeWidget *view, const QStringList &strings, int type)\nThis method creates an object of class QTreeWidgetItem.", &_init_ctor_QTreeWidgetItem_Adaptor_4703, &_call_ctor_QTreeWidgetItem_Adaptor_4703);
}

//  Constructor QTreeWidgetItem::QTreeWidgetItem(QTreeWidget *view, QTreeWidgetItem *after, int type) (adaptor class)

static void _init_ctor_QTreeWidgetItem_Adaptor_4380 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("view");
  decl->add_arg<QTreeWidget * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("after");
  decl->add_arg<QTreeWidgetItem * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("type", true, "QTreeWidgetItem::Type");
  decl->add_arg<int > (argspec_2);
  decl->set_return_new<QTreeWidgetItem_Adaptor *> ();
}

static void _call_ctor_QTreeWidgetItem_Adaptor_4380 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QTreeWidget *arg1 = args.read<QTreeWidget * > ();
  QTreeWidgetItem *arg2 = args.read<QTreeWidgetItem * > ();
  int arg3 = args ? args.read<int > () : (int)(QTreeWidgetItem::Type);
  QTreeWidgetItem_Adaptor *obj = new QTreeWidgetItem_Adaptor (arg1, arg2, arg3);
  if (arg1) {
    qt_gsi::qt_keep (obj);
  }
  ret.write<QTreeWidgetItem_Adaptor *> (obj);
}

static qt_gsi::GenericStaticMethod *_create_ctor_QTreeWidgetItem_Adaptor_4380 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QTreeWidgetItem::QTreeWidgetItem(QTreeWidget *view, QTreeWidgetItem *after, int type)\nThis method creates an object of class QTreeWidgetItem.", &_init_ctor_QTreeWidgetItem_Adaptor_4380, &_call_ctor_QTreeWidgetItem_Adaptor_4380);
}

//  Constructor QTreeWidgetItem::QTreeWidgetItem(QTreeWidgetItem *parent, int type) (adaptor class)

static void _init_ctor_QTreeWidgetItem_Adaptor_2773 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("parent");
  decl->add_arg<QTreeWidgetItem * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("type", true, "QTreeWidgetItem::Type");
  decl->add_arg<int > (argspec_1);
  decl->set_return_new<QTreeWidgetItem_Adaptor *> ();
}

static void _call_ctor_QTreeWidgetItem_Adaptor_2773 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QTreeWidgetItem *arg1 = args.read<QTreeWidgetItem * > ();
  int arg2 = args ? args.read<int > () : (int)(QTreeWidgetItem::Type);
  QTreeWidgetItem_Adaptor *obj = new QTreeWidgetItem_Adaptor (arg1, arg2);
  if (arg1) {
    qt_gsi::qt_keep (obj);
  }
  ret.write<QTreeWidgetItem_Adaptor *> (obj);
}

static qt_gsi::GenericStaticMethod *_create_ctor_QTreeWidgetItem_Adaptor_2773 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QTreeWidgetItem::QTreeWidgetItem(QTreeWidgetItem *parent, int type)\nThis method creates an object of class QTreeWidgetItem.", &_init_ctor_QTreeWidgetItem_Adaptor_2773, &_call_ctor_QTreeWidgetItem_Adaptor_2773);
}

//  Constructor QTreeWidgetItem::QTreeWidgetItem(QTreeWidgetItem *parent, const QStringList &strings, int type) (adaptor class)

static void _init_ctor_QTreeWidgetItem_Adaptor_5102 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("parent");
  decl->add_arg<QTreeWidgetItem * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("strings");
  decl->add_arg<const qt_gsi::Converter<QStringList>::target_type & > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("type", true, "QTreeWidgetItem::Type");
  decl->add_arg<int > (argspec_2);
  decl->set_return_new<QTreeWidgetItem_Adaptor *> ();
}

static void _call_ctor_QTreeWidgetItem_Adaptor_5102 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QTreeWidgetItem *arg1 = args.read<QTreeWidgetItem * > ();
  const qt_gsi::Converter<QStringList>::target_type & arg2 = args.read<const qt_gsi::Converter<QStringList>::target_type & > ();
  int arg3 = args ? args.read<int > () : (int)(QTreeWidgetItem::Type);
  QTreeWidgetItem_Adaptor *obj = new QTreeWidgetItem_Adaptor (arg1, qt_gsi::QtToCppAdaptor<QStringList>(arg2).cref(), arg3);
  if (arg1) {
    qt_gsi::qt_keep (obj);
  }
  ret.write<QTreeWidgetItem_Adaptor *> (obj);
}

static qt_gsi::GenericStaticMethod *_create_ctor_QTreeWidgetItem_Adaptor_5102 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QTreeWidgetItem::QTreeWidgetItem(QTreeWidgetItem *parent, const QStringList &strings, int type)\nThis method creates an object of class QTreeWidgetItem.", &_init_ctor_QTreeWidgetItem_Adaptor_5102, &_call_ctor_QTreeWidgetItem_Adaptor_5102);
}

//  Constructor QTreeWidgetItem::QTreeWidgetItem(QTreeWidgetItem *parent, QTreeWidgetItem *after, int type) (adaptor class)

static void _init_ctor_QTreeWidgetItem_Adaptor_4779 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("parent");
  decl->add_arg<QTreeWidgetItem * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("after");
  decl->add_arg<QTreeWidgetItem * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("type", true, "QTreeWidgetItem::Type");
  decl->add_arg<int > (argspec_2);
  decl->set_return_new<QTreeWidgetItem_Adaptor *> ();
}

static void _call_ctor_QTreeWidgetItem_Adaptor_4779 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QTreeWidgetItem *arg1 = args.read<QTreeWidgetItem * > ();
  QTreeWidgetItem *arg2 = args.read<QTreeWidgetItem * > ();
  int arg3 = args ? args.read<int > () : (int)(QTreeWidgetItem::Type);
  QTreeWidgetItem_Adaptor *obj = new QTreeWidgetItem_Adaptor (arg1, arg2, arg3);
  if (arg1) {
    qt_gsi::qt_keep (obj);
  }
  ret.write<QTreeWidgetItem_Adaptor *> (obj);
}

static qt_gsi::GenericStaticMethod *_create_ctor_QTreeWidgetItem_Adaptor_4779 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QTreeWidgetItem::QTreeWidgetItem(QTreeWidgetItem *parent, QTreeWidgetItem *after, int type)\nThis method creates an object of class QTreeWidgetItem.", &_init_ctor_QTreeWidgetItem_Adaptor_4779, &_call_ctor_QTreeWidgetItem_Adaptor_4779);
}

// void QTreeWidgetItem::emitDataChanged()

static void _init_fp_emitDataChanged_0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<void > ();
}

static void _call_fp_emitDataChanged_0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ((QTreeWidgetItem_Adaptor *)cls)->fp_QTreeWidgetItem_emitDataChanged_0 ();
}

static qt_gsi::GenericMethod*_create_fp_emitDataChanged_0 ()
{
  return new qt_gsi::GenericMethod("*emitDataChanged", "@brief Method void QTreeWidgetItem::emitDataChanged()\nThis method is protected and can only be called from inside a derived class.", false, &_init_fp_emitDataChanged_0, &_call_fp_emitDataChanged_0);
}


// QTreeWidgetItem *QTreeWidgetItem::clone()

static void _init_cbs_clone_c0_0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QTreeWidgetItem * > ();
}

static void _call_cbs_clone_c0_0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QTreeWidgetItem * > ((QTreeWidgetItem *)((QTreeWidgetItem_Adaptor *)cls)->cbs_clone_c0_0 ());
}

static void _set_callback_cbs_clone_c0_0 (void *cls, const gsi::Callback &cb)
{
  ((QTreeWidgetItem_Adaptor *)cls)->cb_clone_c0_0 = cb;
}

static qt_gsi::GenericMethod *_create_cbs_clone_c0_0 ()
{
  return new qt_gsi::GenericMethod ("clone", "@hide", true, &_init_cbs_clone_c0_0, &_call_cbs_clone_c0_0);
}

static qt_gsi::GenericMethod *_create_callback_cbs_clone_c0_0 ()
{
  return new qt_gsi::GenericMethod ("clone", "@brief Virtual method QTreeWidgetItem *QTreeWidgetItem::clone()\nThis method can be reimplemented in a derived class.", true, &_init_cbs_clone_c0_0, &_call_cbs_clone_c0_0, &_set_callback_cbs_clone_c0_0);
}


// QVariant QTreeWidgetItem::data(int column, int role)

static void _init_cbs_data_c1426_0 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("role");
  decl->add_arg<int > (argspec_1);
  decl->set_return<QVariant > ();
}

static void _call_cbs_data_c1426_0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  int arg2 = args.read<int > ();
  ret.write<QVariant > ((QVariant)((QTreeWidgetItem_Adaptor *)cls)->cbs_data_c1426_0 (arg1, arg2));
}

static void _set_callback_cbs_data_c1426_0 (void *cls, const gsi::Callback &cb)
{
  ((QTreeWidgetItem_Adaptor *)cls)->cb_data_c1426_0 = cb;
}

static qt_gsi::GenericMethod *_create_cbs_data_c1426_0 ()
{
  return new qt_gsi::GenericMethod ("data", "@hide", true, &_init_cbs_data_c1426_0, &_call_cbs_data_c1426_0);
}

static qt_gsi::GenericMethod *_create_callback_cbs_data_c1426_0 ()
{
  return new qt_gsi::GenericMethod ("data", "@brief Virtual method QVariant QTreeWidgetItem::data(int column, int role)\nThis method can be reimplemented in a derived class.", true, &_init_cbs_data_c1426_0, &_call_cbs_data_c1426_0, &_set_callback_cbs_data_c1426_0);
}


// bool QTreeWidgetItem::operator<(const QTreeWidgetItem &other)

static void _init_cbs_operator_lt__c2805_0 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QTreeWidgetItem & > (argspec_0);
  decl->set_return<bool > ();
}

static void _call_cbs_operator_lt__c2805_0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QTreeWidgetItem &arg1 = args.read<const QTreeWidgetItem & > ();
  ret.write<bool > ((bool)((QTreeWidgetItem_Adaptor *)cls)->cbs_operator_lt__c2805_0 (arg1));
}

static void _set_callback_cbs_operator_lt__c2805_0 (void *cls, const gsi::Callback &cb)
{
  ((QTreeWidgetItem_Adaptor *)cls)->cb_operator_lt__c2805_0 = cb;
}

static qt_gsi::GenericMethod *_create_cbs_operator_lt__c2805_0 ()
{
  return new qt_gsi::GenericMethod ("<", "@hide", true, &_init_cbs_operator_lt__c2805_0, &_call_cbs_operator_lt__c2805_0);
}

static qt_gsi::GenericMethod *_create_callback_cbs_operator_lt__c2805_0 ()
{
  return new qt_gsi::GenericMethod ("<", "@brief Virtual method bool QTreeWidgetItem::operator<(const QTreeWidgetItem &other)\nThis method can be reimplemented in a derived class.", true, &_init_cbs_operator_lt__c2805_0, &_call_cbs_operator_lt__c2805_0, &_set_callback_cbs_operator_lt__c2805_0);
}


// void QTreeWidgetItem::read(QDataStream &in)

static void _init_cbs_read_1697_0 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("in");
  decl->add_arg<QDataStream & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_cbs_read_1697_0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QDataStream &arg1 = args.read<QDataStream & > ();
  ((QTreeWidgetItem_Adaptor *)cls)->cbs_read_1697_0 (arg1);
}

static void _set_callback_cbs_read_1697_0 (void *cls, const gsi::Callback &cb)
{
  ((QTreeWidgetItem_Adaptor *)cls)->cb_read_1697_0 = cb;
}

static qt_gsi::GenericMethod *_create_cbs_read_1697_0 ()
{
  return new qt_gsi::GenericMethod ("read", "@hide", false, &_init_cbs_read_1697_0, &_call_cbs_read_1697_0);
}

static qt_gsi::GenericMethod *_create_callback_cbs_read_1697_0 ()
{
  return new qt_gsi::GenericMethod ("read", "@brief Virtual method void QTreeWidgetItem::read(QDataStream &in)\nThis method can be reimplemented in a derived class.", false, &_init_cbs_read_1697_0, &_call_cbs_read_1697_0, &_set_callback_cbs_read_1697_0);
}


// void QTreeWidgetItem::setData(int column, int role, const QVariant &value)

static void _init_cbs_setData_3437_0 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("column");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("role");
  decl->add_arg<int > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("value");
  decl->add_arg<const QVariant & > (argspec_2);
  decl->set_return<void > ();
}

static void _call_cbs_setData_3437_0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  int arg2 = args.read<int > ();
  const QVariant &arg3 = args.read<const QVariant & > ();
  ((QTreeWidgetItem_Adaptor *)cls)->cbs_setData_3437_0 (arg1, arg2, arg3);
}

static void _set_callback_cbs_setData_3437_0 (void *cls, const gsi::Callback &cb)
{
  ((QTreeWidgetItem_Adaptor *)cls)->cb_setData_3437_0 = cb;
}

static qt_gsi::GenericMethod *_create_cbs_setData_3437_0 ()
{
  return new qt_gsi::GenericMethod ("setData", "@hide", false, &_init_cbs_setData_3437_0, &_call_cbs_setData_3437_0);
}

static qt_gsi::GenericMethod *_create_callback_cbs_setData_3437_0 ()
{
  return new qt_gsi::GenericMethod ("setData", "@brief Virtual method void QTreeWidgetItem::setData(int column, int role, const QVariant &value)\nThis method can be reimplemented in a derived class.", false, &_init_cbs_setData_3437_0, &_call_cbs_setData_3437_0, &_set_callback_cbs_setData_3437_0);
}


// void QTreeWidgetItem::write(QDataStream &out)

static void _init_cbs_write_c1697_0 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("out");
  decl->add_arg<QDataStream & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_cbs_write_c1697_0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QDataStream &arg1 = args.read<QDataStream & > ();
  ((QTreeWidgetItem_Adaptor *)cls)->cbs_write_c1697_0 (arg1);
}

static void _set_callback_cbs_write_c1697_0 (void *cls, const gsi::Callback &cb)
{
  ((QTreeWidgetItem_Adaptor *)cls)->cb_write_c1697_0 = cb;
}

static qt_gsi::GenericMethod *_create_cbs_write_c1697_0 ()
{
  return new qt_gsi::GenericMethod ("write", "@hide", true, &_init_cbs_write_c1697_0, &_call_cbs_write_c1697_0);
}

static qt_gsi::GenericMethod *_create_callback_cbs_write_c1697_0 ()
{
  return new qt_gsi::GenericMethod ("write", "@brief Virtual method void QTreeWidgetItem::write(QDataStream &out)\nThis method can be reimplemented in a derived class.", true, &_init_cbs_write_c1697_0, &_call_cbs_write_c1697_0, &_set_callback_cbs_write_c1697_0);
}


namespace gsi
{

extern gsi::Class<QTreeWidgetItem> decl_QTreeWidgetItem;

gsi::Class<QTreeWidgetItem_Adaptor> decl_QTreeWidgetItem_Adaptor (decl_QTreeWidgetItem, "QTreeWidgetItem",
  gsi::Methods(_create_fp_emitDataChanged_0 ()) +
  gsi::Methods(_create_cbs_clone_c0_0 ()) +
  gsi::Methods(_create_callback_cbs_clone_c0_0 ()) +
  gsi::Methods(_create_cbs_data_c1426_0 ()) +
  gsi::Methods(_create_callback_cbs_data_c1426_0 ()) +
  gsi::Methods(_create_cbs_operator_lt__c2805_0 ()) +
  gsi::Methods(_create_callback_cbs_operator_lt__c2805_0 ()) +
  gsi::Methods(_create_cbs_read_1697_0 ()) +
  gsi::Methods(_create_callback_cbs_read_1697_0 ()) +
  gsi::Methods(_create_cbs_setData_3437_0 ()) +
  gsi::Methods(_create_callback_cbs_setData_3437_0 ()) +
  gsi::Methods(_create_cbs_write_c1697_0 ()) +
  gsi::Methods(_create_callback_cbs_write_c1697_0 ()) +
  gsi::Methods(_create_ctor_QTreeWidgetItem_Adaptor_767 ()) +
  gsi::Methods(_create_ctor_QTreeWidgetItem_Adaptor_3096 ()) +
  gsi::Methods(_create_ctor_QTreeWidgetItem_Adaptor_2374 ()) +
  gsi::Methods(_create_ctor_QTreeWidgetItem_Adaptor_4703 ()) +
  gsi::Methods(_create_ctor_QTreeWidgetItem_Adaptor_4380 ()) +
  gsi::Methods(_create_ctor_QTreeWidgetItem_Adaptor_2773 ()) +
  gsi::Methods(_create_ctor_QTreeWidgetItem_Adaptor_5102 ()) +
  gsi::Methods(_create_ctor_QTreeWidgetItem_Adaptor_4779 ()),
  "@qt\n@brief Binding of QTreeWidgetItem");

}


//  Implementation of the enum wrapper class for QTreeWidgetItem::ChildIndicatorPolicy
namespace qt_gsi
{

static QTreeWidgetItem_ChildIndicatorPolicy_Enum *c_1_QTreeWidgetItem_ChildIndicatorPolicy_Enum () { return new QTreeWidgetItem_ChildIndicatorPolicy_Enum (QTreeWidgetItem::ShowIndicator); }
static QTreeWidgetItem_ChildIndicatorPolicy_Enum *c_2_QTreeWidgetItem_ChildIndicatorPolicy_Enum () { return new QTreeWidgetItem_ChildIndicatorPolicy_Enum (QTreeWidgetItem::DontShowIndicator); }
static QTreeWidgetItem_ChildIndicatorPolicy_Enum *c_3_QTreeWidgetItem_ChildIndicatorPolicy_Enum () { return new QTreeWidgetItem_ChildIndicatorPolicy_Enum (QTreeWidgetItem::DontShowIndicatorWhenChildless); }

static gsi::Methods mkdefs_QTreeWidgetItem_ChildIndicatorPolicy () {
  return
    gsi::constant ("ShowIndicator", &qt_gsi::c_1_QTreeWidgetItem_ChildIndicatorPolicy_Enum, "@brief Enum constant QTreeWidgetItem::ShowIndicator") +
    gsi::constant ("DontShowIndicator", &qt_gsi::c_2_QTreeWidgetItem_ChildIndicatorPolicy_Enum, "@brief Enum constant QTreeWidgetItem::DontShowIndicator") +
    gsi::constant ("DontShowIndicatorWhenChildless", &qt_gsi::c_3_QTreeWidgetItem_ChildIndicatorPolicy_Enum, "@brief Enum constant QTreeWidgetItem::DontShowIndicatorWhenChildless");
}

static std::string to_s_QTreeWidgetItem_ChildIndicatorPolicy_Enum (const QTreeWidgetItem_ChildIndicatorPolicy_Enum *e)
{
  if (e->value () == QTreeWidgetItem::ShowIndicator) { return tl::sprintf ("ShowIndicator (%u)", (unsigned int) e->value ()); }
  if (e->value () == QTreeWidgetItem::DontShowIndicator) { return tl::sprintf ("DontShowIndicator (%u)", (unsigned int) e->value ()); }
  if (e->value () == QTreeWidgetItem::DontShowIndicatorWhenChildless) { return tl::sprintf ("DontShowIndicatorWhenChildless (%u)", (unsigned int) e->value ()); }
  return std::string ("(not a valid enum evalue)");
}

static unsigned int to_i_QTreeWidgetItem_ChildIndicatorPolicy_Enum (const QTreeWidgetItem_ChildIndicatorPolicy_Enum *e)
{
  return (unsigned int) e->value ();
}

static QTreeWidgetItem_ChildIndicatorPolicy_Enum *from_i_QTreeWidgetItem_ChildIndicatorPolicy_Enum (unsigned int i)
{
  return new QTreeWidgetItem_ChildIndicatorPolicy_Enum ((QTreeWidgetItem::ChildIndicatorPolicy) i);
}

static bool equalQTreeWidgetItem_ChildIndicatorPolicy_Enum (const QTreeWidgetItem_ChildIndicatorPolicy_Enum *e, QTreeWidgetItem_ChildIndicatorPolicy_Enum d)
{
  return e->value () == d.value ();
}

static bool equal2QTreeWidgetItem_ChildIndicatorPolicy_Enum (const QTreeWidgetItem_ChildIndicatorPolicy_Enum *e, unsigned int i)
{
  return (unsigned int) e->value () == i;
}

static QTreeWidgetItem_ChildIndicatorPolicy_Enums oropQTreeWidgetItem_ChildIndicatorPolicy_Enums (const QTreeWidgetItem_ChildIndicatorPolicy_Enums *e, const QTreeWidgetItem_ChildIndicatorPolicy_Enums &d)
{
  return e->flags () | d.flags ();
}

static QTreeWidgetItem_ChildIndicatorPolicy_Enums andopQTreeWidgetItem_ChildIndicatorPolicy_Enums (const QTreeWidgetItem_ChildIndicatorPolicy_Enums *e, const QTreeWidgetItem_ChildIndicatorPolicy_Enums &d)
{
  return e->flags () & d.flags ();
}

static QTreeWidgetItem_ChildIndicatorPolicy_Enums xoropQTreeWidgetItem_ChildIndicatorPolicy_Enums (const QTreeWidgetItem_ChildIndicatorPolicy_Enums *e, const QTreeWidgetItem_ChildIndicatorPolicy_Enums &d)
{
  return e->flags () ^ d.flags ();
}

static std::string to_s_QTreeWidgetItem_ChildIndicatorPolicy_Enums (const QTreeWidgetItem_ChildIndicatorPolicy_Enums *e)
{
  std::string l;
  if (e->testFlag (QTreeWidgetItem::ShowIndicator)) { if (!l.empty ()) l += "|"; l += "ShowIndicator"; }
  if (e->testFlag (QTreeWidgetItem::DontShowIndicator)) { if (!l.empty ()) l += "|"; l += "DontShowIndicator"; }
  if (e->testFlag (QTreeWidgetItem::DontShowIndicatorWhenChildless)) { if (!l.empty ()) l += "|"; l += "DontShowIndicatorWhenChildless"; }
  return tl::sprintf ("%u (%s)", (unsigned int) (e->flags ()), l);
}

static int to_i_QTreeWidgetItem_ChildIndicatorPolicy_Enums (const QTreeWidgetItem_ChildIndicatorPolicy_Enums *e)
{
  return int (e->flags ());
}

static bool testFlag_QTreeWidgetItem_ChildIndicatorPolicy_Enums (const QTreeWidgetItem_ChildIndicatorPolicy_Enums *e, const QTreeWidgetItem_ChildIndicatorPolicy_Enum &d)
{
  return e->flags ().testFlag (d.value ());
}

}

namespace gsi
{

//  Declarations for QFlags<enum> wrapper class
gsi::Class<qt_gsi::QTreeWidgetItem_ChildIndicatorPolicy_Enums> decl_QTreeWidgetItem_ChildIndicatorPolicy_Enums ("QTreeWidgetItem_QFlags_ChildIndicatorPolicy",
  gsi::method_ext ("|", &qt_gsi::oropQTreeWidgetItem_ChildIndicatorPolicy_Enums, gsi::arg ("other"), "@brief 'or' operator between two flag sets") +
  gsi::method_ext ("&", &qt_gsi::andopQTreeWidgetItem_ChildIndicatorPolicy_Enums, gsi::arg ("other"), "@brief 'and' operator between two flag sets") +
  gsi::method_ext ("^", &qt_gsi::xoropQTreeWidgetItem_ChildIndicatorPolicy_Enums, gsi::arg ("other"), "@brief 'xor' operator between two flag sets") +
  gsi::method_ext ("to_s|inspect", &qt_gsi::to_s_QTreeWidgetItem_ChildIndicatorPolicy_Enums, "@brief Converts the flag set to a string") +
  gsi::method_ext ("to_i", &qt_gsi::to_i_QTreeWidgetItem_ChildIndicatorPolicy_Enums, "@brief Returns the integer value encoding the flag set") +
  gsi::method_ext ("testFlag", &qt_gsi::testFlag_QTreeWidgetItem_ChildIndicatorPolicy_Enums, gsi::arg ("flag"), "@brief Tests whether the flag is contained in the flag set"),
  "@qt\n@brief This class represents the QFlags<QTreeWidgetItem::ChildIndicatorPolicy> flag set");

//  Declarations for enum wrapper class
gsi::Class<qt_gsi::QTreeWidgetItem_ChildIndicatorPolicy_Enum> decl_QTreeWidgetItem_ChildIndicatorPolicy_Enum (decl_QTreeWidgetItem_ChildIndicatorPolicy_Enums, "QTreeWidgetItem_ChildIndicatorPolicy",
  qt_gsi::mkdefs_QTreeWidgetItem_ChildIndicatorPolicy () +
  gsi::method_ext ("to_s|inspect", &qt_gsi::to_s_QTreeWidgetItem_ChildIndicatorPolicy_Enum, "@brief Converts the enum class to a string") +
  gsi::method_ext ("to_i", &qt_gsi::to_i_QTreeWidgetItem_ChildIndicatorPolicy_Enum, "@brief Converts the enum class to an integer") +
  gsi::method_ext ("==", &qt_gsi::equalQTreeWidgetItem_ChildIndicatorPolicy_Enum, gsi::arg ("other"), "@brief Compares the enum class against an enum of it's own type") +
  gsi::method_ext ("==", &qt_gsi::equal2QTreeWidgetItem_ChildIndicatorPolicy_Enum, gsi::arg ("other"), "@brief Compares the enum class against an integer") +
  gsi::constructor ("new", &qt_gsi::from_i_QTreeWidgetItem_ChildIndicatorPolicy_Enum, gsi::arg ("value"), "@brief Creates the enum object from an integer"),
  "@qt\n@brief This class represents the QTreeWidgetItem::ChildIndicatorPolicy enum");

//  Inject the declarations into the parent
static gsi::ClassExt<QTreeWidgetItem> inject_QTreeWidgetItem_ChildIndicatorPolicy_Enum_in_parent (qt_gsi::mkdefs_QTreeWidgetItem_ChildIndicatorPolicy ());
static gsi::ClassExt<QTreeWidgetItem> decl_QTreeWidgetItem_ChildIndicatorPolicy_Enum_as_child (decl_QTreeWidgetItem_ChildIndicatorPolicy_Enum, "ChildIndicatorPolicy");

}

