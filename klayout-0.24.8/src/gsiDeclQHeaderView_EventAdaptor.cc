
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file generated/gsiDeclQHeaderView_EventAdaptor.cc
*  @brief Event adaptor implementations for QHeaderView
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include "gsiQtGui.h"
#include "gsiDeclQHeaderView_EventAdaptor.h"

// -----------------------------------------------------------------------
// class QHeaderView_EventAdaptor

QHeaderView_EventAdaptor::QHeaderView_EventAdaptor (QObject *host)
  : QObject ()
{
  connect (host, SIGNAL(activated(const QModelIndex &)), this, SLOT(activated(const QModelIndex &)));
  connect (host, SIGNAL(clicked(const QModelIndex &)), this, SLOT(clicked(const QModelIndex &)));
  connect (host, SIGNAL(customContextMenuRequested(const QPoint &)), this, SLOT(customContextMenuRequested(const QPoint &)));
  connect (host, SIGNAL(destroyed(QObject *)), this, SLOT(destroyed(QObject *)));
  connect (host, SIGNAL(doubleClicked(const QModelIndex &)), this, SLOT(doubleClicked(const QModelIndex &)));
  connect (host, SIGNAL(entered(const QModelIndex &)), this, SLOT(entered(const QModelIndex &)));
  connect (host, SIGNAL(geometriesChanged()), this, SLOT(geometriesChanged()));
  connect (host, SIGNAL(pressed(const QModelIndex &)), this, SLOT(pressed(const QModelIndex &)));
  connect (host, SIGNAL(sectionAutoResize(int, QHeaderView::ResizeMode)), this, SLOT(sectionAutoResize(int, QHeaderView::ResizeMode)));
  connect (host, SIGNAL(sectionClicked(int)), this, SLOT(sectionClicked(int)));
  connect (host, SIGNAL(sectionCountChanged(int, int)), this, SLOT(sectionCountChanged(int, int)));
  connect (host, SIGNAL(sectionDoubleClicked(int)), this, SLOT(sectionDoubleClicked(int)));
  connect (host, SIGNAL(sectionEntered(int)), this, SLOT(sectionEntered(int)));
  connect (host, SIGNAL(sectionHandleDoubleClicked(int)), this, SLOT(sectionHandleDoubleClicked(int)));
  connect (host, SIGNAL(sectionMoved(int, int, int)), this, SLOT(sectionMoved(int, int, int)));
  connect (host, SIGNAL(sectionPressed(int)), this, SLOT(sectionPressed(int)));
  connect (host, SIGNAL(sectionResized(int, int, int)), this, SLOT(sectionResized(int, int, int)));
  connect (host, SIGNAL(sortIndicatorChanged(int, Qt::SortOrder)), this, SLOT(sortIndicatorChanged(int, Qt::SortOrder)));
  connect (host, SIGNAL(viewportEntered()), this, SLOT(viewportEntered()));
}

//  Event QHeaderView::activated(const QModelIndex &index)
void QHeaderView_EventAdaptor::activated(const QModelIndex &index) {
BEGIN_PROTECTED
  activated_e_2395(index);
END_PROTECTED
}

//  Event QHeaderView::clicked(const QModelIndex &index)
void QHeaderView_EventAdaptor::clicked(const QModelIndex &index) {
BEGIN_PROTECTED
  clicked_e_2395(index);
END_PROTECTED
}

//  Event QHeaderView::customContextMenuRequested(const QPoint &pos)
void QHeaderView_EventAdaptor::customContextMenuRequested(const QPoint &pos) {
BEGIN_PROTECTED
  customContextMenuRequested_e_1916(pos);
END_PROTECTED
}

//  Event QHeaderView::destroyed(QObject *arg1)
void QHeaderView_EventAdaptor::destroyed(QObject *arg1) {
BEGIN_PROTECTED
  destroyed_e_1302(arg1);
END_PROTECTED
}

//  Event QHeaderView::doubleClicked(const QModelIndex &index)
void QHeaderView_EventAdaptor::doubleClicked(const QModelIndex &index) {
BEGIN_PROTECTED
  doubleClicked_e_2395(index);
END_PROTECTED
}

//  Event QHeaderView::entered(const QModelIndex &index)
void QHeaderView_EventAdaptor::entered(const QModelIndex &index) {
BEGIN_PROTECTED
  entered_e_2395(index);
END_PROTECTED
}

//  Event QHeaderView::geometriesChanged()
void QHeaderView_EventAdaptor::geometriesChanged() {
BEGIN_PROTECTED
  geometriesChanged_e_0();
END_PROTECTED
}

//  Event QHeaderView::pressed(const QModelIndex &index)
void QHeaderView_EventAdaptor::pressed(const QModelIndex &index) {
BEGIN_PROTECTED
  pressed_e_2395(index);
END_PROTECTED
}

//  Event QHeaderView::sectionAutoResize(int logicalIndex, QHeaderView::ResizeMode mode)
void QHeaderView_EventAdaptor::sectionAutoResize(int logicalIndex, QHeaderView::ResizeMode mode) {
BEGIN_PROTECTED
  sectionAutoResize_e_3303(logicalIndex, qt_gsi::CppToQtAdaptor<QHeaderView::ResizeMode>(mode));
END_PROTECTED
}

//  Event QHeaderView::sectionClicked(int logicalIndex)
void QHeaderView_EventAdaptor::sectionClicked(int logicalIndex) {
BEGIN_PROTECTED
  sectionClicked_e_767(logicalIndex);
END_PROTECTED
}

//  Event QHeaderView::sectionCountChanged(int oldCount, int newCount)
void QHeaderView_EventAdaptor::sectionCountChanged(int oldCount, int newCount) {
BEGIN_PROTECTED
  sectionCountChanged_e_1426(oldCount, newCount);
END_PROTECTED
}

//  Event QHeaderView::sectionDoubleClicked(int logicalIndex)
void QHeaderView_EventAdaptor::sectionDoubleClicked(int logicalIndex) {
BEGIN_PROTECTED
  sectionDoubleClicked_e_767(logicalIndex);
END_PROTECTED
}

//  Event QHeaderView::sectionEntered(int logicalIndex)
void QHeaderView_EventAdaptor::sectionEntered(int logicalIndex) {
BEGIN_PROTECTED
  sectionEntered_e_767(logicalIndex);
END_PROTECTED
}

//  Event QHeaderView::sectionHandleDoubleClicked(int logicalIndex)
void QHeaderView_EventAdaptor::sectionHandleDoubleClicked(int logicalIndex) {
BEGIN_PROTECTED
  sectionHandleDoubleClicked_e_767(logicalIndex);
END_PROTECTED
}

//  Event QHeaderView::sectionMoved(int logicalIndex, int oldVisualIndex, int newVisualIndex)
void QHeaderView_EventAdaptor::sectionMoved(int logicalIndex, int oldVisualIndex, int newVisualIndex) {
BEGIN_PROTECTED
  sectionMoved_e_2085(logicalIndex, oldVisualIndex, newVisualIndex);
END_PROTECTED
}

//  Event QHeaderView::sectionPressed(int logicalIndex)
void QHeaderView_EventAdaptor::sectionPressed(int logicalIndex) {
BEGIN_PROTECTED
  sectionPressed_e_767(logicalIndex);
END_PROTECTED
}

//  Event QHeaderView::sectionResized(int logicalIndex, int oldSize, int newSize)
void QHeaderView_EventAdaptor::sectionResized(int logicalIndex, int oldSize, int newSize) {
BEGIN_PROTECTED
  sectionResized_e_2085(logicalIndex, oldSize, newSize);
END_PROTECTED
}

//  Event QHeaderView::sortIndicatorChanged(int logicalIndex, Qt::SortOrder order)
void QHeaderView_EventAdaptor::sortIndicatorChanged(int logicalIndex, Qt::SortOrder order) {
BEGIN_PROTECTED
  sortIndicatorChanged_e_2340(logicalIndex, qt_gsi::CppToQtAdaptor<Qt::SortOrder>(order));
END_PROTECTED
}

//  Event QHeaderView::viewportEntered()
void QHeaderView_EventAdaptor::viewportEntered() {
BEGIN_PROTECTED
  viewportEntered_e_0();
END_PROTECTED
}
