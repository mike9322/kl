
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file generated/gsiDeclQClipboard_EventAdaptor.cc
*  @brief Event adaptor implementations for QClipboard
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include "gsiQtGui.h"
#include "gsiDeclQClipboard_EventAdaptor.h"

// -----------------------------------------------------------------------
// class QClipboard_EventAdaptor

QClipboard_EventAdaptor::QClipboard_EventAdaptor (QObject *host)
  : QObject ()
{
  connect (host, SIGNAL(changed(QClipboard::Mode)), this, SLOT(changed(QClipboard::Mode)));
  connect (host, SIGNAL(dataChanged()), this, SLOT(dataChanged()));
  connect (host, SIGNAL(destroyed(QObject *)), this, SLOT(destroyed(QObject *)));
  connect (host, SIGNAL(findBufferChanged()), this, SLOT(findBufferChanged()));
  connect (host, SIGNAL(selectionChanged()), this, SLOT(selectionChanged()));
}

//  Event QClipboard::changed(QClipboard::Mode mode)
void QClipboard_EventAdaptor::changed(QClipboard::Mode mode) {
BEGIN_PROTECTED
  changed_e_1934(qt_gsi::CppToQtAdaptor<QClipboard::Mode>(mode));
END_PROTECTED
}

//  Event QClipboard::dataChanged()
void QClipboard_EventAdaptor::dataChanged() {
BEGIN_PROTECTED
  dataChanged_e_0();
END_PROTECTED
}

//  Event QClipboard::destroyed(QObject *arg1)
void QClipboard_EventAdaptor::destroyed(QObject *arg1) {
BEGIN_PROTECTED
  destroyed_e_1302(arg1);
END_PROTECTED
}

//  Event QClipboard::findBufferChanged()
void QClipboard_EventAdaptor::findBufferChanged() {
BEGIN_PROTECTED
  findBufferChanged_e_0();
END_PROTECTED
}

//  Event QClipboard::selectionChanged()
void QClipboard_EventAdaptor::selectionChanged() {
BEGIN_PROTECTED
  selectionChanged_e_0();
END_PROTECTED
}
