
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file generated/gsiDeclQLocalSocket_EventAdaptor.h
*  @brief Event adaptor implementations for QLocalSocket
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#ifndef _HDR_gsiDeclQLocalSocket_EventAdaptor
#define _HDR_gsiDeclQLocalSocket_EventAdaptor

#include "gsiDecl.h"
#include "gsiQtEvents.h"
#include "gsiQtNetwork.h"
#include "gsiDeclQLocalSocket_Enums.h"

#include "layExceptions.h"

#include <QtCore/QObject>

// -----------------------------------------------------------------------
// class QLocalSocket_EventAdaptor

class QLocalSocket_EventAdaptor
  : public QObject, public qt_gsi::EventAdaptorBase, public gsi::ObjectBase
{
Q_OBJECT

public:
  QLocalSocket_EventAdaptor (QObject *host);

public slots:
  void aboutToClose();
  void bytesWritten(qint64);
  void connected();
  void destroyed(QObject *);
  void disconnected();
  void error(QLocalSocket::LocalSocketError);
  void readChannelFinished();
  void readyRead();
  void stateChanged(QLocalSocket::LocalSocketState);

public:
  gsi::event<> aboutToClose_e_0;
  gsi::event<qint64> bytesWritten_e_986;
  gsi::event<> connected_e_0;
  gsi::event<QObject *> destroyed_e_1302;
  gsi::event<> disconnected_e_0;
  gsi::event<const qt_gsi::Converter<QLocalSocket::LocalSocketError>::target_type &> error_e_3371;
  gsi::event<> readChannelFinished_e_0;
  gsi::event<> readyRead_e_0;
  gsi::event<const qt_gsi::Converter<QLocalSocket::LocalSocketState>::target_type &> stateChanged_e_3362;
};

#endif
