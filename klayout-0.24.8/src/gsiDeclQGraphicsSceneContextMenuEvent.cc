
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file gsiDeclQGraphicsSceneContextMenuEvent.cc 
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include "gsiQtGui.h"
#include "gsiDeclQtTypeTraits.h"
#include "gsiDeclQGraphicsSceneContextMenuEvent_Enums.h"
#include <memory>

// -----------------------------------------------------------------------
// class QGraphicsSceneContextMenuEvent

// QFlags<Qt::KeyboardModifier> QGraphicsSceneContextMenuEvent::modifiers()


static void _init_f_modifiers_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qt_gsi::Converter<QFlags<Qt::KeyboardModifier> >::target_type > ();
}

static void _call_f_modifiers_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<qt_gsi::Converter<QFlags<Qt::KeyboardModifier> >::target_type > ((qt_gsi::Converter<QFlags<Qt::KeyboardModifier> >::target_type)qt_gsi::CppToQtAdaptor<QFlags<Qt::KeyboardModifier> >(((QGraphicsSceneContextMenuEvent *)cls)->modifiers ()));
}

static qt_gsi::GenericMethod *_create_f_modifiers_c0 ()
{
  return new qt_gsi::GenericMethod (":modifiers", "@brief Method QFlags<Qt::KeyboardModifier> QGraphicsSceneContextMenuEvent::modifiers()\n", true, &_init_f_modifiers_c0, &_call_f_modifiers_c0);
}

// QPointF QGraphicsSceneContextMenuEvent::pos()


static void _init_f_pos_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QPointF > ();
}

static void _call_f_pos_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QPointF > ((QPointF)((QGraphicsSceneContextMenuEvent *)cls)->pos ());
}

static qt_gsi::GenericMethod *_create_f_pos_c0 ()
{
  return new qt_gsi::GenericMethod (":pos", "@brief Method QPointF QGraphicsSceneContextMenuEvent::pos()\n", true, &_init_f_pos_c0, &_call_f_pos_c0);
}

// QGraphicsSceneContextMenuEvent::Reason QGraphicsSceneContextMenuEvent::reason()


static void _init_f_reason_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qt_gsi::Converter<QGraphicsSceneContextMenuEvent::Reason>::target_type > ();
}

static void _call_f_reason_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<qt_gsi::Converter<QGraphicsSceneContextMenuEvent::Reason>::target_type > ((qt_gsi::Converter<QGraphicsSceneContextMenuEvent::Reason>::target_type)qt_gsi::CppToQtAdaptor<QGraphicsSceneContextMenuEvent::Reason>(((QGraphicsSceneContextMenuEvent *)cls)->reason ()));
}

static qt_gsi::GenericMethod *_create_f_reason_c0 ()
{
  return new qt_gsi::GenericMethod (":reason", "@brief Method QGraphicsSceneContextMenuEvent::Reason QGraphicsSceneContextMenuEvent::reason()\n", true, &_init_f_reason_c0, &_call_f_reason_c0);
}

// QPointF QGraphicsSceneContextMenuEvent::scenePos()


static void _init_f_scenePos_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QPointF > ();
}

static void _call_f_scenePos_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QPointF > ((QPointF)((QGraphicsSceneContextMenuEvent *)cls)->scenePos ());
}

static qt_gsi::GenericMethod *_create_f_scenePos_c0 ()
{
  return new qt_gsi::GenericMethod (":scenePos", "@brief Method QPointF QGraphicsSceneContextMenuEvent::scenePos()\n", true, &_init_f_scenePos_c0, &_call_f_scenePos_c0);
}

// QPoint QGraphicsSceneContextMenuEvent::screenPos()


static void _init_f_screenPos_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QPoint > ();
}

static void _call_f_screenPos_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QPoint > ((QPoint)((QGraphicsSceneContextMenuEvent *)cls)->screenPos ());
}

static qt_gsi::GenericMethod *_create_f_screenPos_c0 ()
{
  return new qt_gsi::GenericMethod (":screenPos", "@brief Method QPoint QGraphicsSceneContextMenuEvent::screenPos()\n", true, &_init_f_screenPos_c0, &_call_f_screenPos_c0);
}

// void QGraphicsSceneContextMenuEvent::setModifiers(QFlags<Qt::KeyboardModifier> modifiers)


static void _init_f_setModifiers_3077 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("modifiers");
  decl->add_arg<const qt_gsi::Converter<QFlags<Qt::KeyboardModifier> >::target_type & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setModifiers_3077 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const qt_gsi::Converter<QFlags<Qt::KeyboardModifier> >::target_type & arg1 = args.read<const qt_gsi::Converter<QFlags<Qt::KeyboardModifier> >::target_type & > ();
  ((QGraphicsSceneContextMenuEvent *)cls)->setModifiers (qt_gsi::QtToCppAdaptor<QFlags<Qt::KeyboardModifier> >(arg1).cref());
}

static qt_gsi::GenericMethod *_create_f_setModifiers_3077 ()
{
  return new qt_gsi::GenericMethod ("setModifiers|modifiers=", "@brief Method void QGraphicsSceneContextMenuEvent::setModifiers(QFlags<Qt::KeyboardModifier> modifiers)\n", false, &_init_f_setModifiers_3077, &_call_f_setModifiers_3077);
}

// void QGraphicsSceneContextMenuEvent::setPos(const QPointF &pos)


static void _init_f_setPos_1986 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("pos");
  decl->add_arg<const QPointF & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setPos_1986 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QPointF &arg1 = args.read<const QPointF & > ();
  ((QGraphicsSceneContextMenuEvent *)cls)->setPos (arg1);
}

static qt_gsi::GenericMethod *_create_f_setPos_1986 ()
{
  return new qt_gsi::GenericMethod ("setPos|pos=", "@brief Method void QGraphicsSceneContextMenuEvent::setPos(const QPointF &pos)\n", false, &_init_f_setPos_1986, &_call_f_setPos_1986);
}

// void QGraphicsSceneContextMenuEvent::setReason(QGraphicsSceneContextMenuEvent::Reason reason)


static void _init_f_setReason_4220 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("reason");
  decl->add_arg<const qt_gsi::Converter<QGraphicsSceneContextMenuEvent::Reason>::target_type & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setReason_4220 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const qt_gsi::Converter<QGraphicsSceneContextMenuEvent::Reason>::target_type & arg1 = args.read<const qt_gsi::Converter<QGraphicsSceneContextMenuEvent::Reason>::target_type & > ();
  ((QGraphicsSceneContextMenuEvent *)cls)->setReason (qt_gsi::QtToCppAdaptor<QGraphicsSceneContextMenuEvent::Reason>(arg1).cref());
}

static qt_gsi::GenericMethod *_create_f_setReason_4220 ()
{
  return new qt_gsi::GenericMethod ("setReason|reason=", "@brief Method void QGraphicsSceneContextMenuEvent::setReason(QGraphicsSceneContextMenuEvent::Reason reason)\n", false, &_init_f_setReason_4220, &_call_f_setReason_4220);
}

// void QGraphicsSceneContextMenuEvent::setScenePos(const QPointF &pos)


static void _init_f_setScenePos_1986 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("pos");
  decl->add_arg<const QPointF & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setScenePos_1986 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QPointF &arg1 = args.read<const QPointF & > ();
  ((QGraphicsSceneContextMenuEvent *)cls)->setScenePos (arg1);
}

static qt_gsi::GenericMethod *_create_f_setScenePos_1986 ()
{
  return new qt_gsi::GenericMethod ("setScenePos|scenePos=", "@brief Method void QGraphicsSceneContextMenuEvent::setScenePos(const QPointF &pos)\n", false, &_init_f_setScenePos_1986, &_call_f_setScenePos_1986);
}

// void QGraphicsSceneContextMenuEvent::setScreenPos(const QPoint &pos)


static void _init_f_setScreenPos_1916 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("pos");
  decl->add_arg<const QPoint & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setScreenPos_1916 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QPoint &arg1 = args.read<const QPoint & > ();
  ((QGraphicsSceneContextMenuEvent *)cls)->setScreenPos (arg1);
}

static qt_gsi::GenericMethod *_create_f_setScreenPos_1916 ()
{
  return new qt_gsi::GenericMethod ("setScreenPos|screenPos=", "@brief Method void QGraphicsSceneContextMenuEvent::setScreenPos(const QPoint &pos)\n", false, &_init_f_setScreenPos_1916, &_call_f_setScreenPos_1916);
}

namespace gsi
{
extern gsi::Class<QGraphicsSceneEvent> decl_QGraphicsSceneEvent;

gsi::Class<QGraphicsSceneContextMenuEvent> decl_QGraphicsSceneContextMenuEvent (decl_QGraphicsSceneEvent, "QGraphicsSceneContextMenuEvent_Native",
  gsi::Methods(_create_f_modifiers_c0 ()) +
  gsi::Methods(_create_f_pos_c0 ()) +
  gsi::Methods(_create_f_reason_c0 ()) +
  gsi::Methods(_create_f_scenePos_c0 ()) +
  gsi::Methods(_create_f_screenPos_c0 ()) +
  gsi::Methods(_create_f_setModifiers_3077 ()) +
  gsi::Methods(_create_f_setPos_1986 ()) +
  gsi::Methods(_create_f_setReason_4220 ()) +
  gsi::Methods(_create_f_setScenePos_1986 ()) +
  gsi::Methods(_create_f_setScreenPos_1916 ()),
  "@hide\n@alias QGraphicsSceneContextMenuEvent");
}


class QGraphicsSceneContextMenuEvent_Adaptor : public QGraphicsSceneContextMenuEvent, public qt_gsi::QtObjectBase
{
public:

  virtual ~QGraphicsSceneContextMenuEvent_Adaptor();

  //  [adaptor ctor] QGraphicsSceneContextMenuEvent::QGraphicsSceneContextMenuEvent(QEvent::Type type)
  QGraphicsSceneContextMenuEvent_Adaptor() : QGraphicsSceneContextMenuEvent()
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QGraphicsSceneContextMenuEvent::QGraphicsSceneContextMenuEvent(QEvent::Type type)
  QGraphicsSceneContextMenuEvent_Adaptor(QEvent::Type type) : QGraphicsSceneContextMenuEvent(type)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  
};

QGraphicsSceneContextMenuEvent_Adaptor::~QGraphicsSceneContextMenuEvent_Adaptor() { }

//  Constructor QGraphicsSceneContextMenuEvent::QGraphicsSceneContextMenuEvent(QEvent::Type type) (adaptor class)

static void _init_ctor_QGraphicsSceneContextMenuEvent_Adaptor_1565 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("type", true, "QEvent::None");
  decl->add_arg<const qt_gsi::Converter<QEvent::Type>::target_type & > (argspec_0);
  decl->set_return_new<QGraphicsSceneContextMenuEvent_Adaptor *> ();
}

static void _call_ctor_QGraphicsSceneContextMenuEvent_Adaptor_1565 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  tl::Heap heap;
  const qt_gsi::Converter<QEvent::Type>::target_type & arg1 = args ? args.read<const qt_gsi::Converter<QEvent::Type>::target_type & > () : (const qt_gsi::Converter<QEvent::Type>::target_type &)(qt_gsi::CppToQtReadAdaptor<QEvent::Type>(heap, QEvent::None));
  ret.write<QGraphicsSceneContextMenuEvent_Adaptor *> (new QGraphicsSceneContextMenuEvent_Adaptor (qt_gsi::QtToCppAdaptor<QEvent::Type>(arg1).cref()));
}

static qt_gsi::GenericStaticMethod *_create_ctor_QGraphicsSceneContextMenuEvent_Adaptor_1565 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QGraphicsSceneContextMenuEvent::QGraphicsSceneContextMenuEvent(QEvent::Type type)\nThis method creates an object of class QGraphicsSceneContextMenuEvent.", &_init_ctor_QGraphicsSceneContextMenuEvent_Adaptor_1565, &_call_ctor_QGraphicsSceneContextMenuEvent_Adaptor_1565);
}

namespace gsi
{

extern gsi::Class<QGraphicsSceneContextMenuEvent> decl_QGraphicsSceneContextMenuEvent;

gsi::Class<QGraphicsSceneContextMenuEvent_Adaptor> decl_QGraphicsSceneContextMenuEvent_Adaptor (decl_QGraphicsSceneContextMenuEvent, "QGraphicsSceneContextMenuEvent",
  gsi::Methods(_create_ctor_QGraphicsSceneContextMenuEvent_Adaptor_1565 ()),
  "@qt\n@brief Binding of QGraphicsSceneContextMenuEvent");

}


//  Implementation of the enum wrapper class for QGraphicsSceneContextMenuEvent::Reason
namespace qt_gsi
{

static QGraphicsSceneContextMenuEvent_Reason_Enum *c_1_QGraphicsSceneContextMenuEvent_Reason_Enum () { return new QGraphicsSceneContextMenuEvent_Reason_Enum (QGraphicsSceneContextMenuEvent::Mouse); }
static QGraphicsSceneContextMenuEvent_Reason_Enum *c_2_QGraphicsSceneContextMenuEvent_Reason_Enum () { return new QGraphicsSceneContextMenuEvent_Reason_Enum (QGraphicsSceneContextMenuEvent::Keyboard); }
static QGraphicsSceneContextMenuEvent_Reason_Enum *c_3_QGraphicsSceneContextMenuEvent_Reason_Enum () { return new QGraphicsSceneContextMenuEvent_Reason_Enum (QGraphicsSceneContextMenuEvent::Other); }

static gsi::Methods mkdefs_QGraphicsSceneContextMenuEvent_Reason () {
  return
    gsi::constant ("Mouse", &qt_gsi::c_1_QGraphicsSceneContextMenuEvent_Reason_Enum, "@brief Enum constant QGraphicsSceneContextMenuEvent::Mouse") +
    gsi::constant ("Keyboard", &qt_gsi::c_2_QGraphicsSceneContextMenuEvent_Reason_Enum, "@brief Enum constant QGraphicsSceneContextMenuEvent::Keyboard") +
    gsi::constant ("Other", &qt_gsi::c_3_QGraphicsSceneContextMenuEvent_Reason_Enum, "@brief Enum constant QGraphicsSceneContextMenuEvent::Other");
}

static std::string to_s_QGraphicsSceneContextMenuEvent_Reason_Enum (const QGraphicsSceneContextMenuEvent_Reason_Enum *e)
{
  if (e->value () == QGraphicsSceneContextMenuEvent::Mouse) { return tl::sprintf ("Mouse (%u)", (unsigned int) e->value ()); }
  if (e->value () == QGraphicsSceneContextMenuEvent::Keyboard) { return tl::sprintf ("Keyboard (%u)", (unsigned int) e->value ()); }
  if (e->value () == QGraphicsSceneContextMenuEvent::Other) { return tl::sprintf ("Other (%u)", (unsigned int) e->value ()); }
  return std::string ("(not a valid enum evalue)");
}

static unsigned int to_i_QGraphicsSceneContextMenuEvent_Reason_Enum (const QGraphicsSceneContextMenuEvent_Reason_Enum *e)
{
  return (unsigned int) e->value ();
}

static QGraphicsSceneContextMenuEvent_Reason_Enum *from_i_QGraphicsSceneContextMenuEvent_Reason_Enum (unsigned int i)
{
  return new QGraphicsSceneContextMenuEvent_Reason_Enum ((QGraphicsSceneContextMenuEvent::Reason) i);
}

static bool equalQGraphicsSceneContextMenuEvent_Reason_Enum (const QGraphicsSceneContextMenuEvent_Reason_Enum *e, QGraphicsSceneContextMenuEvent_Reason_Enum d)
{
  return e->value () == d.value ();
}

static bool equal2QGraphicsSceneContextMenuEvent_Reason_Enum (const QGraphicsSceneContextMenuEvent_Reason_Enum *e, unsigned int i)
{
  return (unsigned int) e->value () == i;
}

static QGraphicsSceneContextMenuEvent_Reason_Enums oropQGraphicsSceneContextMenuEvent_Reason_Enums (const QGraphicsSceneContextMenuEvent_Reason_Enums *e, const QGraphicsSceneContextMenuEvent_Reason_Enums &d)
{
  return e->flags () | d.flags ();
}

static QGraphicsSceneContextMenuEvent_Reason_Enums andopQGraphicsSceneContextMenuEvent_Reason_Enums (const QGraphicsSceneContextMenuEvent_Reason_Enums *e, const QGraphicsSceneContextMenuEvent_Reason_Enums &d)
{
  return e->flags () & d.flags ();
}

static QGraphicsSceneContextMenuEvent_Reason_Enums xoropQGraphicsSceneContextMenuEvent_Reason_Enums (const QGraphicsSceneContextMenuEvent_Reason_Enums *e, const QGraphicsSceneContextMenuEvent_Reason_Enums &d)
{
  return e->flags () ^ d.flags ();
}

static std::string to_s_QGraphicsSceneContextMenuEvent_Reason_Enums (const QGraphicsSceneContextMenuEvent_Reason_Enums *e)
{
  std::string l;
  if (e->testFlag (QGraphicsSceneContextMenuEvent::Mouse)) { if (!l.empty ()) l += "|"; l += "Mouse"; }
  if (e->testFlag (QGraphicsSceneContextMenuEvent::Keyboard)) { if (!l.empty ()) l += "|"; l += "Keyboard"; }
  if (e->testFlag (QGraphicsSceneContextMenuEvent::Other)) { if (!l.empty ()) l += "|"; l += "Other"; }
  return tl::sprintf ("%u (%s)", (unsigned int) (e->flags ()), l);
}

static int to_i_QGraphicsSceneContextMenuEvent_Reason_Enums (const QGraphicsSceneContextMenuEvent_Reason_Enums *e)
{
  return int (e->flags ());
}

static bool testFlag_QGraphicsSceneContextMenuEvent_Reason_Enums (const QGraphicsSceneContextMenuEvent_Reason_Enums *e, const QGraphicsSceneContextMenuEvent_Reason_Enum &d)
{
  return e->flags ().testFlag (d.value ());
}

}

namespace gsi
{

//  Declarations for QFlags<enum> wrapper class
gsi::Class<qt_gsi::QGraphicsSceneContextMenuEvent_Reason_Enums> decl_QGraphicsSceneContextMenuEvent_Reason_Enums ("QGraphicsSceneContextMenuEvent_QFlags_Reason",
  gsi::method_ext ("|", &qt_gsi::oropQGraphicsSceneContextMenuEvent_Reason_Enums, gsi::arg ("other"), "@brief 'or' operator between two flag sets") +
  gsi::method_ext ("&", &qt_gsi::andopQGraphicsSceneContextMenuEvent_Reason_Enums, gsi::arg ("other"), "@brief 'and' operator between two flag sets") +
  gsi::method_ext ("^", &qt_gsi::xoropQGraphicsSceneContextMenuEvent_Reason_Enums, gsi::arg ("other"), "@brief 'xor' operator between two flag sets") +
  gsi::method_ext ("to_s|inspect", &qt_gsi::to_s_QGraphicsSceneContextMenuEvent_Reason_Enums, "@brief Converts the flag set to a string") +
  gsi::method_ext ("to_i", &qt_gsi::to_i_QGraphicsSceneContextMenuEvent_Reason_Enums, "@brief Returns the integer value encoding the flag set") +
  gsi::method_ext ("testFlag", &qt_gsi::testFlag_QGraphicsSceneContextMenuEvent_Reason_Enums, gsi::arg ("flag"), "@brief Tests whether the flag is contained in the flag set"),
  "@qt\n@brief This class represents the QFlags<QGraphicsSceneContextMenuEvent::Reason> flag set");

//  Declarations for enum wrapper class
gsi::Class<qt_gsi::QGraphicsSceneContextMenuEvent_Reason_Enum> decl_QGraphicsSceneContextMenuEvent_Reason_Enum (decl_QGraphicsSceneContextMenuEvent_Reason_Enums, "QGraphicsSceneContextMenuEvent_Reason",
  qt_gsi::mkdefs_QGraphicsSceneContextMenuEvent_Reason () +
  gsi::method_ext ("to_s|inspect", &qt_gsi::to_s_QGraphicsSceneContextMenuEvent_Reason_Enum, "@brief Converts the enum class to a string") +
  gsi::method_ext ("to_i", &qt_gsi::to_i_QGraphicsSceneContextMenuEvent_Reason_Enum, "@brief Converts the enum class to an integer") +
  gsi::method_ext ("==", &qt_gsi::equalQGraphicsSceneContextMenuEvent_Reason_Enum, gsi::arg ("other"), "@brief Compares the enum class against an enum of it's own type") +
  gsi::method_ext ("==", &qt_gsi::equal2QGraphicsSceneContextMenuEvent_Reason_Enum, gsi::arg ("other"), "@brief Compares the enum class against an integer") +
  gsi::constructor ("new", &qt_gsi::from_i_QGraphicsSceneContextMenuEvent_Reason_Enum, gsi::arg ("value"), "@brief Creates the enum object from an integer"),
  "@qt\n@brief This class represents the QGraphicsSceneContextMenuEvent::Reason enum");

//  Inject the declarations into the parent
static gsi::ClassExt<QGraphicsSceneContextMenuEvent> inject_QGraphicsSceneContextMenuEvent_Reason_Enum_in_parent (qt_gsi::mkdefs_QGraphicsSceneContextMenuEvent_Reason ());
static gsi::ClassExt<QGraphicsSceneContextMenuEvent> decl_QGraphicsSceneContextMenuEvent_Reason_Enum_as_child (decl_QGraphicsSceneContextMenuEvent_Reason_Enum, "Reason");

}

