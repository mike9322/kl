
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file generated/gsiDeclQTreeWidget_EventAdaptor.cc
*  @brief Event adaptor implementations for QTreeWidget
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include "gsiQtGui.h"
#include "gsiDeclQTreeWidget_EventAdaptor.h"

// -----------------------------------------------------------------------
// class QTreeWidget_EventAdaptor

QTreeWidget_EventAdaptor::QTreeWidget_EventAdaptor (QObject *host)
  : QObject ()
{
  connect (host, SIGNAL(activated(const QModelIndex &)), this, SLOT(activated(const QModelIndex &)));
  connect (host, SIGNAL(clicked(const QModelIndex &)), this, SLOT(clicked(const QModelIndex &)));
  connect (host, SIGNAL(collapsed(const QModelIndex &)), this, SLOT(collapsed(const QModelIndex &)));
  connect (host, SIGNAL(currentItemChanged(QTreeWidgetItem *, QTreeWidgetItem *)), this, SLOT(currentItemChanged(QTreeWidgetItem *, QTreeWidgetItem *)));
  connect (host, SIGNAL(customContextMenuRequested(const QPoint &)), this, SLOT(customContextMenuRequested(const QPoint &)));
  connect (host, SIGNAL(destroyed(QObject *)), this, SLOT(destroyed(QObject *)));
  connect (host, SIGNAL(doubleClicked(const QModelIndex &)), this, SLOT(doubleClicked(const QModelIndex &)));
  connect (host, SIGNAL(entered(const QModelIndex &)), this, SLOT(entered(const QModelIndex &)));
  connect (host, SIGNAL(expanded(const QModelIndex &)), this, SLOT(expanded(const QModelIndex &)));
  connect (host, SIGNAL(itemActivated(QTreeWidgetItem *, int)), this, SLOT(itemActivated(QTreeWidgetItem *, int)));
  connect (host, SIGNAL(itemChanged(QTreeWidgetItem *, int)), this, SLOT(itemChanged(QTreeWidgetItem *, int)));
  connect (host, SIGNAL(itemClicked(QTreeWidgetItem *, int)), this, SLOT(itemClicked(QTreeWidgetItem *, int)));
  connect (host, SIGNAL(itemCollapsed(QTreeWidgetItem *)), this, SLOT(itemCollapsed(QTreeWidgetItem *)));
  connect (host, SIGNAL(itemDoubleClicked(QTreeWidgetItem *, int)), this, SLOT(itemDoubleClicked(QTreeWidgetItem *, int)));
  connect (host, SIGNAL(itemEntered(QTreeWidgetItem *, int)), this, SLOT(itemEntered(QTreeWidgetItem *, int)));
  connect (host, SIGNAL(itemExpanded(QTreeWidgetItem *)), this, SLOT(itemExpanded(QTreeWidgetItem *)));
  connect (host, SIGNAL(itemPressed(QTreeWidgetItem *, int)), this, SLOT(itemPressed(QTreeWidgetItem *, int)));
  connect (host, SIGNAL(itemSelectionChanged()), this, SLOT(itemSelectionChanged()));
  connect (host, SIGNAL(pressed(const QModelIndex &)), this, SLOT(pressed(const QModelIndex &)));
  connect (host, SIGNAL(viewportEntered()), this, SLOT(viewportEntered()));
}

//  Event QTreeWidget::activated(const QModelIndex &index)
void QTreeWidget_EventAdaptor::activated(const QModelIndex &index) {
BEGIN_PROTECTED
  activated_e_2395(index);
END_PROTECTED
}

//  Event QTreeWidget::clicked(const QModelIndex &index)
void QTreeWidget_EventAdaptor::clicked(const QModelIndex &index) {
BEGIN_PROTECTED
  clicked_e_2395(index);
END_PROTECTED
}

//  Event QTreeWidget::collapsed(const QModelIndex &index)
void QTreeWidget_EventAdaptor::collapsed(const QModelIndex &index) {
BEGIN_PROTECTED
  collapsed_e_2395(index);
END_PROTECTED
}

//  Event QTreeWidget::currentItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *previous)
void QTreeWidget_EventAdaptor::currentItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *previous) {
BEGIN_PROTECTED
  currentItemChanged_e_4120(current, previous);
END_PROTECTED
}

//  Event QTreeWidget::customContextMenuRequested(const QPoint &pos)
void QTreeWidget_EventAdaptor::customContextMenuRequested(const QPoint &pos) {
BEGIN_PROTECTED
  customContextMenuRequested_e_1916(pos);
END_PROTECTED
}

//  Event QTreeWidget::destroyed(QObject *arg1)
void QTreeWidget_EventAdaptor::destroyed(QObject *arg1) {
BEGIN_PROTECTED
  destroyed_e_1302(arg1);
END_PROTECTED
}

//  Event QTreeWidget::doubleClicked(const QModelIndex &index)
void QTreeWidget_EventAdaptor::doubleClicked(const QModelIndex &index) {
BEGIN_PROTECTED
  doubleClicked_e_2395(index);
END_PROTECTED
}

//  Event QTreeWidget::entered(const QModelIndex &index)
void QTreeWidget_EventAdaptor::entered(const QModelIndex &index) {
BEGIN_PROTECTED
  entered_e_2395(index);
END_PROTECTED
}

//  Event QTreeWidget::expanded(const QModelIndex &index)
void QTreeWidget_EventAdaptor::expanded(const QModelIndex &index) {
BEGIN_PROTECTED
  expanded_e_2395(index);
END_PROTECTED
}

//  Event QTreeWidget::itemActivated(QTreeWidgetItem *item, int column)
void QTreeWidget_EventAdaptor::itemActivated(QTreeWidgetItem *item, int column) {
BEGIN_PROTECTED
  itemActivated_e_2773(item, column);
END_PROTECTED
}

//  Event QTreeWidget::itemChanged(QTreeWidgetItem *item, int column)
void QTreeWidget_EventAdaptor::itemChanged(QTreeWidgetItem *item, int column) {
BEGIN_PROTECTED
  itemChanged_e_2773(item, column);
END_PROTECTED
}

//  Event QTreeWidget::itemClicked(QTreeWidgetItem *item, int column)
void QTreeWidget_EventAdaptor::itemClicked(QTreeWidgetItem *item, int column) {
BEGIN_PROTECTED
  itemClicked_e_2773(item, column);
END_PROTECTED
}

//  Event QTreeWidget::itemCollapsed(QTreeWidgetItem *item)
void QTreeWidget_EventAdaptor::itemCollapsed(QTreeWidgetItem *item) {
BEGIN_PROTECTED
  itemCollapsed_e_2114(item);
END_PROTECTED
}

//  Event QTreeWidget::itemDoubleClicked(QTreeWidgetItem *item, int column)
void QTreeWidget_EventAdaptor::itemDoubleClicked(QTreeWidgetItem *item, int column) {
BEGIN_PROTECTED
  itemDoubleClicked_e_2773(item, column);
END_PROTECTED
}

//  Event QTreeWidget::itemEntered(QTreeWidgetItem *item, int column)
void QTreeWidget_EventAdaptor::itemEntered(QTreeWidgetItem *item, int column) {
BEGIN_PROTECTED
  itemEntered_e_2773(item, column);
END_PROTECTED
}

//  Event QTreeWidget::itemExpanded(QTreeWidgetItem *item)
void QTreeWidget_EventAdaptor::itemExpanded(QTreeWidgetItem *item) {
BEGIN_PROTECTED
  itemExpanded_e_2114(item);
END_PROTECTED
}

//  Event QTreeWidget::itemPressed(QTreeWidgetItem *item, int column)
void QTreeWidget_EventAdaptor::itemPressed(QTreeWidgetItem *item, int column) {
BEGIN_PROTECTED
  itemPressed_e_2773(item, column);
END_PROTECTED
}

//  Event QTreeWidget::itemSelectionChanged()
void QTreeWidget_EventAdaptor::itemSelectionChanged() {
BEGIN_PROTECTED
  itemSelectionChanged_e_0();
END_PROTECTED
}

//  Event QTreeWidget::pressed(const QModelIndex &index)
void QTreeWidget_EventAdaptor::pressed(const QModelIndex &index) {
BEGIN_PROTECTED
  pressed_e_2395(index);
END_PROTECTED
}

//  Event QTreeWidget::viewportEntered()
void QTreeWidget_EventAdaptor::viewportEntered() {
BEGIN_PROTECTED
  viewportEntered_e_0();
END_PROTECTED
}
