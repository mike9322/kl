
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file gsiDeclQNetworkCacheMetaData.cc 
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include "gsiQtNetwork.h"
#include "gsiDeclQtTypeTraits.h"
#include "gsiDeclQNetworkCacheMetaData_Enums.h"
#include <memory>

// -----------------------------------------------------------------------
// class QNetworkCacheMetaData

//  Constructor QNetworkCacheMetaData::QNetworkCacheMetaData()


static void _init_ctor_QNetworkCacheMetaData_0 (qt_gsi::GenericStaticMethod *decl)
{
  decl->set_return_new<QNetworkCacheMetaData *> ();
}

static void _call_ctor_QNetworkCacheMetaData_0 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QNetworkCacheMetaData *> (new QNetworkCacheMetaData ());
}

static qt_gsi::GenericStaticMethod *_create_ctor_QNetworkCacheMetaData_0 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QNetworkCacheMetaData::QNetworkCacheMetaData()\nThis method creates an object of class QNetworkCacheMetaData.", &_init_ctor_QNetworkCacheMetaData_0, &_call_ctor_QNetworkCacheMetaData_0);
}

//  Constructor QNetworkCacheMetaData::QNetworkCacheMetaData(const QNetworkCacheMetaData &other)


static void _init_ctor_QNetworkCacheMetaData_3377 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QNetworkCacheMetaData & > (argspec_0);
  decl->set_return_new<QNetworkCacheMetaData *> ();
}

static void _call_ctor_QNetworkCacheMetaData_3377 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QNetworkCacheMetaData &arg1 = args.read<const QNetworkCacheMetaData & > ();
  ret.write<QNetworkCacheMetaData *> (new QNetworkCacheMetaData (arg1));
}

static qt_gsi::GenericStaticMethod *_create_ctor_QNetworkCacheMetaData_3377 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QNetworkCacheMetaData::QNetworkCacheMetaData(const QNetworkCacheMetaData &other)\nThis method creates an object of class QNetworkCacheMetaData.", &_init_ctor_QNetworkCacheMetaData_3377, &_call_ctor_QNetworkCacheMetaData_3377);
}

// QDateTime QNetworkCacheMetaData::expirationDate()


static void _init_f_expirationDate_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QDateTime > ();
}

static void _call_f_expirationDate_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QDateTime > ((QDateTime)((QNetworkCacheMetaData *)cls)->expirationDate ());
}

static qt_gsi::GenericMethod *_create_f_expirationDate_c0 ()
{
  return new qt_gsi::GenericMethod (":expirationDate", "@brief Method QDateTime QNetworkCacheMetaData::expirationDate()\n", true, &_init_f_expirationDate_c0, &_call_f_expirationDate_c0);
}

// bool QNetworkCacheMetaData::isValid()


static void _init_f_isValid_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isValid_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<bool > ((bool)((QNetworkCacheMetaData *)cls)->isValid ());
}

static qt_gsi::GenericMethod *_create_f_isValid_c0 ()
{
  return new qt_gsi::GenericMethod ("isValid?", "@brief Method bool QNetworkCacheMetaData::isValid()\n", true, &_init_f_isValid_c0, &_call_f_isValid_c0);
}

// QDateTime QNetworkCacheMetaData::lastModified()


static void _init_f_lastModified_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QDateTime > ();
}

static void _call_f_lastModified_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QDateTime > ((QDateTime)((QNetworkCacheMetaData *)cls)->lastModified ());
}

static qt_gsi::GenericMethod *_create_f_lastModified_c0 ()
{
  return new qt_gsi::GenericMethod (":lastModified", "@brief Method QDateTime QNetworkCacheMetaData::lastModified()\n", true, &_init_f_lastModified_c0, &_call_f_lastModified_c0);
}

// bool QNetworkCacheMetaData::operator!=(const QNetworkCacheMetaData &other)


static void _init_f_operator_excl__eq__c3377 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QNetworkCacheMetaData & > (argspec_0);
  decl->set_return<bool > ();
}

static void _call_f_operator_excl__eq__c3377 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QNetworkCacheMetaData &arg1 = args.read<const QNetworkCacheMetaData & > ();
  ret.write<bool > ((bool)((QNetworkCacheMetaData *)cls)->operator!= (arg1));
}

static qt_gsi::GenericMethod *_create_f_operator_excl__eq__c3377 ()
{
  return new qt_gsi::GenericMethod ("!=", "@brief Method bool QNetworkCacheMetaData::operator!=(const QNetworkCacheMetaData &other)\n", true, &_init_f_operator_excl__eq__c3377, &_call_f_operator_excl__eq__c3377);
}

// QNetworkCacheMetaData &QNetworkCacheMetaData::operator=(const QNetworkCacheMetaData &other)


static void _init_f_operator_eq__3377 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QNetworkCacheMetaData & > (argspec_0);
  decl->set_return<QNetworkCacheMetaData & > ();
}

static void _call_f_operator_eq__3377 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QNetworkCacheMetaData &arg1 = args.read<const QNetworkCacheMetaData & > ();
  ret.write<QNetworkCacheMetaData & > ((QNetworkCacheMetaData &)((QNetworkCacheMetaData *)cls)->operator= (arg1));
}

static qt_gsi::GenericMethod *_create_f_operator_eq__3377 ()
{
  return new qt_gsi::GenericMethod ("assign", "@brief Method QNetworkCacheMetaData &QNetworkCacheMetaData::operator=(const QNetworkCacheMetaData &other)\n", false, &_init_f_operator_eq__3377, &_call_f_operator_eq__3377);
}

// bool QNetworkCacheMetaData::operator==(const QNetworkCacheMetaData &other)


static void _init_f_operator_eq__eq__c3377 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QNetworkCacheMetaData & > (argspec_0);
  decl->set_return<bool > ();
}

static void _call_f_operator_eq__eq__c3377 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QNetworkCacheMetaData &arg1 = args.read<const QNetworkCacheMetaData & > ();
  ret.write<bool > ((bool)((QNetworkCacheMetaData *)cls)->operator== (arg1));
}

static qt_gsi::GenericMethod *_create_f_operator_eq__eq__c3377 ()
{
  return new qt_gsi::GenericMethod ("==", "@brief Method bool QNetworkCacheMetaData::operator==(const QNetworkCacheMetaData &other)\n", true, &_init_f_operator_eq__eq__c3377, &_call_f_operator_eq__eq__c3377);
}

// QList<QPair<QByteArray, QByteArray> > QNetworkCacheMetaData::rawHeaders()


static void _init_f_rawHeaders_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qt_gsi::Converter<QList<QPair<QByteArray, QByteArray> > >::target_type > ();
}

static void _call_f_rawHeaders_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<qt_gsi::Converter<QList<QPair<QByteArray, QByteArray> > >::target_type > ((qt_gsi::Converter<QList<QPair<QByteArray, QByteArray> > >::target_type)qt_gsi::CppToQtAdaptor<QList<QPair<QByteArray, QByteArray> > >(((QNetworkCacheMetaData *)cls)->rawHeaders ()));
}

static qt_gsi::GenericMethod *_create_f_rawHeaders_c0 ()
{
  return new qt_gsi::GenericMethod (":rawHeaders", "@brief Method QList<QPair<QByteArray, QByteArray> > QNetworkCacheMetaData::rawHeaders()\n", true, &_init_f_rawHeaders_c0, &_call_f_rawHeaders_c0);
}

// bool QNetworkCacheMetaData::saveToDisk()


static void _init_f_saveToDisk_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_saveToDisk_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<bool > ((bool)((QNetworkCacheMetaData *)cls)->saveToDisk ());
}

static qt_gsi::GenericMethod *_create_f_saveToDisk_c0 ()
{
  return new qt_gsi::GenericMethod (":saveToDisk", "@brief Method bool QNetworkCacheMetaData::saveToDisk()\n", true, &_init_f_saveToDisk_c0, &_call_f_saveToDisk_c0);
}

// void QNetworkCacheMetaData::setExpirationDate(const QDateTime &dateTime)


static void _init_f_setExpirationDate_2175 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("dateTime");
  decl->add_arg<const QDateTime & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setExpirationDate_2175 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QDateTime &arg1 = args.read<const QDateTime & > ();
  ((QNetworkCacheMetaData *)cls)->setExpirationDate (arg1);
}

static qt_gsi::GenericMethod *_create_f_setExpirationDate_2175 ()
{
  return new qt_gsi::GenericMethod ("setExpirationDate|expirationDate=", "@brief Method void QNetworkCacheMetaData::setExpirationDate(const QDateTime &dateTime)\n", false, &_init_f_setExpirationDate_2175, &_call_f_setExpirationDate_2175);
}

// void QNetworkCacheMetaData::setLastModified(const QDateTime &dateTime)


static void _init_f_setLastModified_2175 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("dateTime");
  decl->add_arg<const QDateTime & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setLastModified_2175 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QDateTime &arg1 = args.read<const QDateTime & > ();
  ((QNetworkCacheMetaData *)cls)->setLastModified (arg1);
}

static qt_gsi::GenericMethod *_create_f_setLastModified_2175 ()
{
  return new qt_gsi::GenericMethod ("setLastModified|lastModified=", "@brief Method void QNetworkCacheMetaData::setLastModified(const QDateTime &dateTime)\n", false, &_init_f_setLastModified_2175, &_call_f_setLastModified_2175);
}

// void QNetworkCacheMetaData::setRawHeaders(const QList<QPair<QByteArray, QByteArray> > &headers)


static void _init_f_setRawHeaders_4851 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("headers");
  decl->add_arg<const qt_gsi::Converter<QList<QPair<QByteArray, QByteArray> > >::target_type & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setRawHeaders_4851 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const qt_gsi::Converter<QList<QPair<QByteArray, QByteArray> > >::target_type & arg1 = args.read<const qt_gsi::Converter<QList<QPair<QByteArray, QByteArray> > >::target_type & > ();
  ((QNetworkCacheMetaData *)cls)->setRawHeaders (qt_gsi::QtToCppAdaptor<QList<QPair<QByteArray, QByteArray> > >(arg1).cref());
}

static qt_gsi::GenericMethod *_create_f_setRawHeaders_4851 ()
{
  return new qt_gsi::GenericMethod ("setRawHeaders|rawHeaders=", "@brief Method void QNetworkCacheMetaData::setRawHeaders(const QList<QPair<QByteArray, QByteArray> > &headers)\n", false, &_init_f_setRawHeaders_4851, &_call_f_setRawHeaders_4851);
}

// void QNetworkCacheMetaData::setSaveToDisk(bool allow)


static void _init_f_setSaveToDisk_864 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("allow");
  decl->add_arg<bool > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setSaveToDisk_864 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  bool arg1 = args.read<bool > ();
  ((QNetworkCacheMetaData *)cls)->setSaveToDisk (arg1);
}

static qt_gsi::GenericMethod *_create_f_setSaveToDisk_864 ()
{
  return new qt_gsi::GenericMethod ("setSaveToDisk|saveToDisk=", "@brief Method void QNetworkCacheMetaData::setSaveToDisk(bool allow)\n", false, &_init_f_setSaveToDisk_864, &_call_f_setSaveToDisk_864);
}

// void QNetworkCacheMetaData::setUrl(const QUrl &url)


static void _init_f_setUrl_1701 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("url");
  decl->add_arg<const QUrl & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setUrl_1701 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QUrl &arg1 = args.read<const QUrl & > ();
  ((QNetworkCacheMetaData *)cls)->setUrl (arg1);
}

static qt_gsi::GenericMethod *_create_f_setUrl_1701 ()
{
  return new qt_gsi::GenericMethod ("setUrl|url=", "@brief Method void QNetworkCacheMetaData::setUrl(const QUrl &url)\n", false, &_init_f_setUrl_1701, &_call_f_setUrl_1701);
}

// QUrl QNetworkCacheMetaData::url()


static void _init_f_url_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QUrl > ();
}

static void _call_f_url_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QUrl > ((QUrl)((QNetworkCacheMetaData *)cls)->url ());
}

static qt_gsi::GenericMethod *_create_f_url_c0 ()
{
  return new qt_gsi::GenericMethod (":url", "@brief Method QUrl QNetworkCacheMetaData::url()\n", true, &_init_f_url_c0, &_call_f_url_c0);
}


namespace gsi
{
gsi::Class<QNetworkCacheMetaData> decl_QNetworkCacheMetaData ("QNetworkCacheMetaData",
  gsi::Methods(_create_ctor_QNetworkCacheMetaData_0 ()) +
  gsi::Methods(_create_ctor_QNetworkCacheMetaData_3377 ()) +
  gsi::Methods(_create_f_expirationDate_c0 ()) +
  gsi::Methods(_create_f_isValid_c0 ()) +
  gsi::Methods(_create_f_lastModified_c0 ()) +
  gsi::Methods(_create_f_operator_excl__eq__c3377 ()) +
  gsi::Methods(_create_f_operator_eq__3377 ()) +
  gsi::Methods(_create_f_operator_eq__eq__c3377 ()) +
  gsi::Methods(_create_f_rawHeaders_c0 ()) +
  gsi::Methods(_create_f_saveToDisk_c0 ()) +
  gsi::Methods(_create_f_setExpirationDate_2175 ()) +
  gsi::Methods(_create_f_setLastModified_2175 ()) +
  gsi::Methods(_create_f_setRawHeaders_4851 ()) +
  gsi::Methods(_create_f_setSaveToDisk_864 ()) +
  gsi::Methods(_create_f_setUrl_1701 ()) +
  gsi::Methods(_create_f_url_c0 ()),
  "@qt\n@brief Binding of QNetworkCacheMetaData");

}

