
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file gsiDeclQWhatsThisClickedEvent.cc 
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include "gsiQtGui.h"
#include "gsiDeclQtTypeTraits.h"
#include "gsiDeclQWhatsThisClickedEvent_Enums.h"
#include <memory>

// -----------------------------------------------------------------------
// class QWhatsThisClickedEvent

// QString QWhatsThisClickedEvent::href()


static void _init_f_href_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QString > ();
}

static void _call_f_href_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QString > ((QString)((QWhatsThisClickedEvent *)cls)->href ());
}

static qt_gsi::GenericMethod *_create_f_href_c0 ()
{
  return new qt_gsi::GenericMethod ("href", "@brief Method QString QWhatsThisClickedEvent::href()\n", true, &_init_f_href_c0, &_call_f_href_c0);
}

namespace gsi
{
extern gsi::Class<QEvent> decl_QEvent;

gsi::Class<QWhatsThisClickedEvent> decl_QWhatsThisClickedEvent (decl_QEvent, "QWhatsThisClickedEvent_Native",
  gsi::Methods(_create_f_href_c0 ()),
  "@hide\n@alias QWhatsThisClickedEvent");
}


class QWhatsThisClickedEvent_Adaptor : public QWhatsThisClickedEvent, public qt_gsi::QtObjectBase
{
public:

  virtual ~QWhatsThisClickedEvent_Adaptor();

  //  [adaptor ctor] QWhatsThisClickedEvent::QWhatsThisClickedEvent(const QString &href)
  QWhatsThisClickedEvent_Adaptor(const QString &href) : QWhatsThisClickedEvent(href)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  
};

QWhatsThisClickedEvent_Adaptor::~QWhatsThisClickedEvent_Adaptor() { }

//  Constructor QWhatsThisClickedEvent::QWhatsThisClickedEvent(const QString &href) (adaptor class)

static void _init_ctor_QWhatsThisClickedEvent_Adaptor_2025 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("href");
  decl->add_arg<const QString & > (argspec_0);
  decl->set_return_new<QWhatsThisClickedEvent_Adaptor *> ();
}

static void _call_ctor_QWhatsThisClickedEvent_Adaptor_2025 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QString &arg1 = args.read<const QString & > ();
  ret.write<QWhatsThisClickedEvent_Adaptor *> (new QWhatsThisClickedEvent_Adaptor (arg1));
}

static qt_gsi::GenericStaticMethod *_create_ctor_QWhatsThisClickedEvent_Adaptor_2025 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QWhatsThisClickedEvent::QWhatsThisClickedEvent(const QString &href)\nThis method creates an object of class QWhatsThisClickedEvent.", &_init_ctor_QWhatsThisClickedEvent_Adaptor_2025, &_call_ctor_QWhatsThisClickedEvent_Adaptor_2025);
}

namespace gsi
{

extern gsi::Class<QWhatsThisClickedEvent> decl_QWhatsThisClickedEvent;

gsi::Class<QWhatsThisClickedEvent_Adaptor> decl_QWhatsThisClickedEvent_Adaptor (decl_QWhatsThisClickedEvent, "QWhatsThisClickedEvent",
  gsi::Methods(_create_ctor_QWhatsThisClickedEvent_Adaptor_2025 ()),
  "@qt\n@brief Binding of QWhatsThisClickedEvent");

}

