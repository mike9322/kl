
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file generated/gsiDeclQInputDialog_EventAdaptor.cc
*  @brief Event adaptor implementations for QInputDialog
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include "gsiQtGui.h"
#include "gsiDeclQInputDialog_EventAdaptor.h"

// -----------------------------------------------------------------------
// class QInputDialog_EventAdaptor

QInputDialog_EventAdaptor::QInputDialog_EventAdaptor (QObject *host)
  : QObject ()
{
  connect (host, SIGNAL(accepted()), this, SLOT(accepted()));
  connect (host, SIGNAL(customContextMenuRequested(const QPoint &)), this, SLOT(customContextMenuRequested(const QPoint &)));
  connect (host, SIGNAL(destroyed(QObject *)), this, SLOT(destroyed(QObject *)));
  connect (host, SIGNAL(doubleValueChanged(double)), this, SLOT(doubleValueChanged(double)));
  connect (host, SIGNAL(doubleValueSelected(double)), this, SLOT(doubleValueSelected(double)));
  connect (host, SIGNAL(finished(int)), this, SLOT(finished(int)));
  connect (host, SIGNAL(intValueChanged(int)), this, SLOT(intValueChanged(int)));
  connect (host, SIGNAL(intValueSelected(int)), this, SLOT(intValueSelected(int)));
  connect (host, SIGNAL(rejected()), this, SLOT(rejected()));
  connect (host, SIGNAL(textValueChanged(const QString &)), this, SLOT(textValueChanged(const QString &)));
  connect (host, SIGNAL(textValueSelected(const QString &)), this, SLOT(textValueSelected(const QString &)));
}

//  Event QInputDialog::accepted()
void QInputDialog_EventAdaptor::accepted() {
BEGIN_PROTECTED
  accepted_e_0();
END_PROTECTED
}

//  Event QInputDialog::customContextMenuRequested(const QPoint &pos)
void QInputDialog_EventAdaptor::customContextMenuRequested(const QPoint &pos) {
BEGIN_PROTECTED
  customContextMenuRequested_e_1916(pos);
END_PROTECTED
}

//  Event QInputDialog::destroyed(QObject *arg1)
void QInputDialog_EventAdaptor::destroyed(QObject *arg1) {
BEGIN_PROTECTED
  destroyed_e_1302(arg1);
END_PROTECTED
}

//  Event QInputDialog::doubleValueChanged(double value)
void QInputDialog_EventAdaptor::doubleValueChanged(double value) {
BEGIN_PROTECTED
  doubleValueChanged_e_1071(value);
END_PROTECTED
}

//  Event QInputDialog::doubleValueSelected(double value)
void QInputDialog_EventAdaptor::doubleValueSelected(double value) {
BEGIN_PROTECTED
  doubleValueSelected_e_1071(value);
END_PROTECTED
}

//  Event QInputDialog::finished(int result)
void QInputDialog_EventAdaptor::finished(int result) {
BEGIN_PROTECTED
  finished_e_767(result);
END_PROTECTED
}

//  Event QInputDialog::intValueChanged(int value)
void QInputDialog_EventAdaptor::intValueChanged(int value) {
BEGIN_PROTECTED
  intValueChanged_e_767(value);
END_PROTECTED
}

//  Event QInputDialog::intValueSelected(int value)
void QInputDialog_EventAdaptor::intValueSelected(int value) {
BEGIN_PROTECTED
  intValueSelected_e_767(value);
END_PROTECTED
}

//  Event QInputDialog::rejected()
void QInputDialog_EventAdaptor::rejected() {
BEGIN_PROTECTED
  rejected_e_0();
END_PROTECTED
}

//  Event QInputDialog::textValueChanged(const QString &text)
void QInputDialog_EventAdaptor::textValueChanged(const QString &text) {
BEGIN_PROTECTED
  textValueChanged_e_2025(text);
END_PROTECTED
}

//  Event QInputDialog::textValueSelected(const QString &text)
void QInputDialog_EventAdaptor::textValueSelected(const QString &text) {
BEGIN_PROTECTED
  textValueSelected_e_2025(text);
END_PROTECTED
}
