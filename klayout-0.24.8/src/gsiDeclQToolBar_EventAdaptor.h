
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file generated/gsiDeclQToolBar_EventAdaptor.h
*  @brief Event adaptor implementations for QToolBar
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#ifndef _HDR_gsiDeclQToolBar_EventAdaptor
#define _HDR_gsiDeclQToolBar_EventAdaptor

#include "gsiDecl.h"
#include "gsiQtEvents.h"
#include "gsiQtGui.h"
#include "gsiDeclQToolBar_Enums.h"

#include "layExceptions.h"

#include <QtCore/QObject>

// -----------------------------------------------------------------------
// class QToolBar_EventAdaptor

class QToolBar_EventAdaptor
  : public QObject, public qt_gsi::EventAdaptorBase, public gsi::ObjectBase
{
Q_OBJECT

public:
  QToolBar_EventAdaptor (QObject *host);

public slots:
  void actionTriggered(QAction *);
  void allowedAreasChanged(QFlags<Qt::ToolBarArea>);
  void customContextMenuRequested(const QPoint &);
  void destroyed(QObject *);
  void iconSizeChanged(const QSize &);
  void movableChanged(bool);
  void orientationChanged(Qt::Orientation);
  void toolButtonStyleChanged(Qt::ToolButtonStyle);
  void topLevelChanged(bool);

public:
  gsi::event<QAction *> actionTriggered_e_1309;
  gsi::event<const qt_gsi::Converter<QFlags<Qt::ToolBarArea> >::target_type &> allowedAreasChanged_e_2513;
  gsi::event<const QPoint &> customContextMenuRequested_e_1916;
  gsi::event<QObject *> destroyed_e_1302;
  gsi::event<const QSize &> iconSizeChanged_e_1805;
  gsi::event<bool> movableChanged_e_864;
  gsi::event<const qt_gsi::Converter<Qt::Orientation>::target_type &> orientationChanged_e_1913;
  gsi::event<const qt_gsi::Converter<Qt::ToolButtonStyle>::target_type &> toolButtonStyleChanged_e_2328;
  gsi::event<bool> topLevelChanged_e_864;
};

#endif
