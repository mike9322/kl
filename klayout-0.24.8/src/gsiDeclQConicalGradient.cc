
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file gsiDeclQConicalGradient.cc 
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include "gsiQtGui.h"
#include "gsiDeclQtTypeTraits.h"
#include "gsiDeclQConicalGradient_Enums.h"
#include <memory>

// -----------------------------------------------------------------------
// class QConicalGradient

//  Constructor QConicalGradient::QConicalGradient()


static void _init_ctor_QConicalGradient_0 (qt_gsi::GenericStaticMethod *decl)
{
  decl->set_return_new<QConicalGradient *> ();
}

static void _call_ctor_QConicalGradient_0 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QConicalGradient *> (new QConicalGradient ());
}

static qt_gsi::GenericStaticMethod *_create_ctor_QConicalGradient_0 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QConicalGradient::QConicalGradient()\nThis method creates an object of class QConicalGradient.", &_init_ctor_QConicalGradient_0, &_call_ctor_QConicalGradient_0);
}

//  Constructor QConicalGradient::QConicalGradient(const QPointF &center, double startAngle)


static void _init_ctor_QConicalGradient_2949 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("center");
  decl->add_arg<const QPointF & > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("startAngle");
  decl->add_arg<double > (argspec_1);
  decl->set_return_new<QConicalGradient *> ();
}

static void _call_ctor_QConicalGradient_2949 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QPointF &arg1 = args.read<const QPointF & > ();
  double arg2 = args.read<double > ();
  ret.write<QConicalGradient *> (new QConicalGradient (arg1, arg2));
}

static qt_gsi::GenericStaticMethod *_create_ctor_QConicalGradient_2949 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QConicalGradient::QConicalGradient(const QPointF &center, double startAngle)\nThis method creates an object of class QConicalGradient.", &_init_ctor_QConicalGradient_2949, &_call_ctor_QConicalGradient_2949);
}

//  Constructor QConicalGradient::QConicalGradient(double cx, double cy, double startAngle)


static void _init_ctor_QConicalGradient_2997 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("cx");
  decl->add_arg<double > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("cy");
  decl->add_arg<double > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("startAngle");
  decl->add_arg<double > (argspec_2);
  decl->set_return_new<QConicalGradient *> ();
}

static void _call_ctor_QConicalGradient_2997 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  double arg1 = args.read<double > ();
  double arg2 = args.read<double > ();
  double arg3 = args.read<double > ();
  ret.write<QConicalGradient *> (new QConicalGradient (arg1, arg2, arg3));
}

static qt_gsi::GenericStaticMethod *_create_ctor_QConicalGradient_2997 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QConicalGradient::QConicalGradient(double cx, double cy, double startAngle)\nThis method creates an object of class QConicalGradient.", &_init_ctor_QConicalGradient_2997, &_call_ctor_QConicalGradient_2997);
}

// double QConicalGradient::angle()


static void _init_f_angle_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<double > ();
}

static void _call_f_angle_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<double > ((double)((QConicalGradient *)cls)->angle ());
}

static qt_gsi::GenericMethod *_create_f_angle_c0 ()
{
  return new qt_gsi::GenericMethod (":angle", "@brief Method double QConicalGradient::angle()\n", true, &_init_f_angle_c0, &_call_f_angle_c0);
}

// QPointF QConicalGradient::center()


static void _init_f_center_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QPointF > ();
}

static void _call_f_center_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QPointF > ((QPointF)((QConicalGradient *)cls)->center ());
}

static qt_gsi::GenericMethod *_create_f_center_c0 ()
{
  return new qt_gsi::GenericMethod (":center", "@brief Method QPointF QConicalGradient::center()\n", true, &_init_f_center_c0, &_call_f_center_c0);
}

// void QConicalGradient::setAngle(double angle)


static void _init_f_setAngle_1071 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("angle");
  decl->add_arg<double > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setAngle_1071 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  double arg1 = args.read<double > ();
  ((QConicalGradient *)cls)->setAngle (arg1);
}

static qt_gsi::GenericMethod *_create_f_setAngle_1071 ()
{
  return new qt_gsi::GenericMethod ("setAngle|angle=", "@brief Method void QConicalGradient::setAngle(double angle)\n", false, &_init_f_setAngle_1071, &_call_f_setAngle_1071);
}

// void QConicalGradient::setCenter(const QPointF &center)


static void _init_f_setCenter_1986 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("center");
  decl->add_arg<const QPointF & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setCenter_1986 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QPointF &arg1 = args.read<const QPointF & > ();
  ((QConicalGradient *)cls)->setCenter (arg1);
}

static qt_gsi::GenericMethod *_create_f_setCenter_1986 ()
{
  return new qt_gsi::GenericMethod ("setCenter|center=", "@brief Method void QConicalGradient::setCenter(const QPointF &center)\n", false, &_init_f_setCenter_1986, &_call_f_setCenter_1986);
}

// void QConicalGradient::setCenter(double x, double y)


static void _init_f_setCenter_2034 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("x");
  decl->add_arg<double > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("y");
  decl->add_arg<double > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_setCenter_2034 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  double arg1 = args.read<double > ();
  double arg2 = args.read<double > ();
  ((QConicalGradient *)cls)->setCenter (arg1, arg2);
}

static qt_gsi::GenericMethod *_create_f_setCenter_2034 ()
{
  return new qt_gsi::GenericMethod ("setCenter", "@brief Method void QConicalGradient::setCenter(double x, double y)\n", false, &_init_f_setCenter_2034, &_call_f_setCenter_2034);
}


namespace gsi
{
extern gsi::Class<QGradient> decl_QGradient;

gsi::Class<QConicalGradient> decl_QConicalGradient (decl_QGradient, "QConicalGradient",
  gsi::Methods(_create_ctor_QConicalGradient_0 ()) +
  gsi::Methods(_create_ctor_QConicalGradient_2949 ()) +
  gsi::Methods(_create_ctor_QConicalGradient_2997 ()) +
  gsi::Methods(_create_f_angle_c0 ()) +
  gsi::Methods(_create_f_center_c0 ()) +
  gsi::Methods(_create_f_setAngle_1071 ()) +
  gsi::Methods(_create_f_setCenter_1986 ()) +
  gsi::Methods(_create_f_setCenter_2034 ()),
  "@qt\n@brief Binding of QConicalGradient");

}

