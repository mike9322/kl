
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file gsiDeclQTableWidgetItem.cc 
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include "gsiQtGui.h"
#include "gsiDeclQtTypeTraits.h"
#include "gsiDeclQTableWidgetItem_Enums.h"
#include <memory>

// -----------------------------------------------------------------------
// class QTableWidgetItem

// QBrush QTableWidgetItem::background()


static void _init_f_background_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QBrush > ();
}

static void _call_f_background_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QBrush > ((QBrush)((QTableWidgetItem *)cls)->background ());
}

static qt_gsi::GenericMethod *_create_f_background_c0 ()
{
  return new qt_gsi::GenericMethod (":background", "@brief Method QBrush QTableWidgetItem::background()\n", true, &_init_f_background_c0, &_call_f_background_c0);
}

// QColor QTableWidgetItem::backgroundColor()


static void _init_f_backgroundColor_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QColor > ();
}

static void _call_f_backgroundColor_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QColor > ((QColor)((QTableWidgetItem *)cls)->backgroundColor ());
}

static qt_gsi::GenericMethod *_create_f_backgroundColor_c0 ()
{
  return new qt_gsi::GenericMethod (":backgroundColor", "@brief Method QColor QTableWidgetItem::backgroundColor()\n", true, &_init_f_backgroundColor_c0, &_call_f_backgroundColor_c0);
}

// Qt::CheckState QTableWidgetItem::checkState()


static void _init_f_checkState_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qt_gsi::Converter<Qt::CheckState>::target_type > ();
}

static void _call_f_checkState_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<qt_gsi::Converter<Qt::CheckState>::target_type > ((qt_gsi::Converter<Qt::CheckState>::target_type)qt_gsi::CppToQtAdaptor<Qt::CheckState>(((QTableWidgetItem *)cls)->checkState ()));
}

static qt_gsi::GenericMethod *_create_f_checkState_c0 ()
{
  return new qt_gsi::GenericMethod (":checkState", "@brief Method Qt::CheckState QTableWidgetItem::checkState()\n", true, &_init_f_checkState_c0, &_call_f_checkState_c0);
}

// QTableWidgetItem *QTableWidgetItem::clone()


static void _init_f_clone_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QTableWidgetItem * > ();
}

static void _call_f_clone_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QTableWidgetItem * > ((QTableWidgetItem *)((QTableWidgetItem *)cls)->clone ());
}

static qt_gsi::GenericMethod *_create_f_clone_c0 ()
{
  return new qt_gsi::GenericMethod ("clone", "@brief Method QTableWidgetItem *QTableWidgetItem::clone()\n", true, &_init_f_clone_c0, &_call_f_clone_c0);
}

// int QTableWidgetItem::column()


static void _init_f_column_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<int > ();
}

static void _call_f_column_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<int > ((int)((QTableWidgetItem *)cls)->column ());
}

static qt_gsi::GenericMethod *_create_f_column_c0 ()
{
  return new qt_gsi::GenericMethod ("column", "@brief Method int QTableWidgetItem::column()\n", true, &_init_f_column_c0, &_call_f_column_c0);
}

// QVariant QTableWidgetItem::data(int role)


static void _init_f_data_c767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("role");
  decl->add_arg<int > (argspec_0);
  decl->set_return<QVariant > ();
}

static void _call_f_data_c767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<QVariant > ((QVariant)((QTableWidgetItem *)cls)->data (arg1));
}

static qt_gsi::GenericMethod *_create_f_data_c767 ()
{
  return new qt_gsi::GenericMethod ("data", "@brief Method QVariant QTableWidgetItem::data(int role)\n", true, &_init_f_data_c767, &_call_f_data_c767);
}

// QFlags<Qt::ItemFlag> QTableWidgetItem::flags()


static void _init_f_flags_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qt_gsi::Converter<QFlags<Qt::ItemFlag> >::target_type > ();
}

static void _call_f_flags_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<qt_gsi::Converter<QFlags<Qt::ItemFlag> >::target_type > ((qt_gsi::Converter<QFlags<Qt::ItemFlag> >::target_type)qt_gsi::CppToQtAdaptor<QFlags<Qt::ItemFlag> >(((QTableWidgetItem *)cls)->flags ()));
}

static qt_gsi::GenericMethod *_create_f_flags_c0 ()
{
  return new qt_gsi::GenericMethod (":flags", "@brief Method QFlags<Qt::ItemFlag> QTableWidgetItem::flags()\n", true, &_init_f_flags_c0, &_call_f_flags_c0);
}

// QFont QTableWidgetItem::font()


static void _init_f_font_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QFont > ();
}

static void _call_f_font_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QFont > ((QFont)((QTableWidgetItem *)cls)->font ());
}

static qt_gsi::GenericMethod *_create_f_font_c0 ()
{
  return new qt_gsi::GenericMethod (":font", "@brief Method QFont QTableWidgetItem::font()\n", true, &_init_f_font_c0, &_call_f_font_c0);
}

// QBrush QTableWidgetItem::foreground()


static void _init_f_foreground_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QBrush > ();
}

static void _call_f_foreground_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QBrush > ((QBrush)((QTableWidgetItem *)cls)->foreground ());
}

static qt_gsi::GenericMethod *_create_f_foreground_c0 ()
{
  return new qt_gsi::GenericMethod (":foreground", "@brief Method QBrush QTableWidgetItem::foreground()\n", true, &_init_f_foreground_c0, &_call_f_foreground_c0);
}

// QIcon QTableWidgetItem::icon()


static void _init_f_icon_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QIcon > ();
}

static void _call_f_icon_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QIcon > ((QIcon)((QTableWidgetItem *)cls)->icon ());
}

static qt_gsi::GenericMethod *_create_f_icon_c0 ()
{
  return new qt_gsi::GenericMethod (":icon", "@brief Method QIcon QTableWidgetItem::icon()\n", true, &_init_f_icon_c0, &_call_f_icon_c0);
}

// bool QTableWidgetItem::isSelected()


static void _init_f_isSelected_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isSelected_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<bool > ((bool)((QTableWidgetItem *)cls)->isSelected ());
}

static qt_gsi::GenericMethod *_create_f_isSelected_c0 ()
{
  return new qt_gsi::GenericMethod ("isSelected?|:selected", "@brief Method bool QTableWidgetItem::isSelected()\n", true, &_init_f_isSelected_c0, &_call_f_isSelected_c0);
}

// bool QTableWidgetItem::operator<(const QTableWidgetItem &other)


static void _init_f_operator_lt__c2893 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QTableWidgetItem & > (argspec_0);
  decl->set_return<bool > ();
}

static void _call_f_operator_lt__c2893 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QTableWidgetItem &arg1 = args.read<const QTableWidgetItem & > ();
  ret.write<bool > ((bool)((QTableWidgetItem *)cls)->operator< (arg1));
}

static qt_gsi::GenericMethod *_create_f_operator_lt__c2893 ()
{
  return new qt_gsi::GenericMethod ("<", "@brief Method bool QTableWidgetItem::operator<(const QTableWidgetItem &other)\n", true, &_init_f_operator_lt__c2893, &_call_f_operator_lt__c2893);
}

// QTableWidgetItem &QTableWidgetItem::operator=(const QTableWidgetItem &other)


static void _init_f_operator_eq__2893 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QTableWidgetItem & > (argspec_0);
  decl->set_return<QTableWidgetItem & > ();
}

static void _call_f_operator_eq__2893 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QTableWidgetItem &arg1 = args.read<const QTableWidgetItem & > ();
  ret.write<QTableWidgetItem & > ((QTableWidgetItem &)((QTableWidgetItem *)cls)->operator= (arg1));
}

static qt_gsi::GenericMethod *_create_f_operator_eq__2893 ()
{
  return new qt_gsi::GenericMethod ("assign", "@brief Method QTableWidgetItem &QTableWidgetItem::operator=(const QTableWidgetItem &other)\n", false, &_init_f_operator_eq__2893, &_call_f_operator_eq__2893);
}

// void QTableWidgetItem::read(QDataStream &in)


static void _init_f_read_1697 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("in");
  decl->add_arg<QDataStream & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_read_1697 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QDataStream &arg1 = args.read<QDataStream & > ();
  ((QTableWidgetItem *)cls)->read (arg1);
}

static qt_gsi::GenericMethod *_create_f_read_1697 ()
{
  return new qt_gsi::GenericMethod ("read", "@brief Method void QTableWidgetItem::read(QDataStream &in)\n", false, &_init_f_read_1697, &_call_f_read_1697);
}

// int QTableWidgetItem::row()


static void _init_f_row_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<int > ();
}

static void _call_f_row_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<int > ((int)((QTableWidgetItem *)cls)->row ());
}

static qt_gsi::GenericMethod *_create_f_row_c0 ()
{
  return new qt_gsi::GenericMethod ("row", "@brief Method int QTableWidgetItem::row()\n", true, &_init_f_row_c0, &_call_f_row_c0);
}

// void QTableWidgetItem::setBackground(const QBrush &brush)


static void _init_f_setBackground_1910 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("brush");
  decl->add_arg<const QBrush & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setBackground_1910 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QBrush &arg1 = args.read<const QBrush & > ();
  ((QTableWidgetItem *)cls)->setBackground (arg1);
}

static qt_gsi::GenericMethod *_create_f_setBackground_1910 ()
{
  return new qt_gsi::GenericMethod ("setBackground|background=", "@brief Method void QTableWidgetItem::setBackground(const QBrush &brush)\n", false, &_init_f_setBackground_1910, &_call_f_setBackground_1910);
}

// void QTableWidgetItem::setBackgroundColor(const QColor &color)


static void _init_f_setBackgroundColor_1905 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("color");
  decl->add_arg<const QColor & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setBackgroundColor_1905 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QColor &arg1 = args.read<const QColor & > ();
  ((QTableWidgetItem *)cls)->setBackgroundColor (arg1);
}

static qt_gsi::GenericMethod *_create_f_setBackgroundColor_1905 ()
{
  return new qt_gsi::GenericMethod ("setBackgroundColor|backgroundColor=", "@brief Method void QTableWidgetItem::setBackgroundColor(const QColor &color)\n", false, &_init_f_setBackgroundColor_1905, &_call_f_setBackgroundColor_1905);
}

// void QTableWidgetItem::setCheckState(Qt::CheckState state)


static void _init_f_setCheckState_1740 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("state");
  decl->add_arg<const qt_gsi::Converter<Qt::CheckState>::target_type & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setCheckState_1740 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const qt_gsi::Converter<Qt::CheckState>::target_type & arg1 = args.read<const qt_gsi::Converter<Qt::CheckState>::target_type & > ();
  ((QTableWidgetItem *)cls)->setCheckState (qt_gsi::QtToCppAdaptor<Qt::CheckState>(arg1).cref());
}

static qt_gsi::GenericMethod *_create_f_setCheckState_1740 ()
{
  return new qt_gsi::GenericMethod ("setCheckState|checkState=", "@brief Method void QTableWidgetItem::setCheckState(Qt::CheckState state)\n", false, &_init_f_setCheckState_1740, &_call_f_setCheckState_1740);
}

// void QTableWidgetItem::setData(int role, const QVariant &value)


static void _init_f_setData_2778 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("role");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("value");
  decl->add_arg<const QVariant & > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_setData_2778 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  const QVariant &arg2 = args.read<const QVariant & > ();
  ((QTableWidgetItem *)cls)->setData (arg1, arg2);
}

static qt_gsi::GenericMethod *_create_f_setData_2778 ()
{
  return new qt_gsi::GenericMethod ("setData", "@brief Method void QTableWidgetItem::setData(int role, const QVariant &value)\n", false, &_init_f_setData_2778, &_call_f_setData_2778);
}

// void QTableWidgetItem::setFlags(QFlags<Qt::ItemFlag> flags)


static void _init_f_setFlags_2222 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("flags");
  decl->add_arg<const qt_gsi::Converter<QFlags<Qt::ItemFlag> >::target_type & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setFlags_2222 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const qt_gsi::Converter<QFlags<Qt::ItemFlag> >::target_type & arg1 = args.read<const qt_gsi::Converter<QFlags<Qt::ItemFlag> >::target_type & > ();
  ((QTableWidgetItem *)cls)->setFlags (qt_gsi::QtToCppAdaptor<QFlags<Qt::ItemFlag> >(arg1).cref());
}

static qt_gsi::GenericMethod *_create_f_setFlags_2222 ()
{
  return new qt_gsi::GenericMethod ("setFlags|flags=", "@brief Method void QTableWidgetItem::setFlags(QFlags<Qt::ItemFlag> flags)\n", false, &_init_f_setFlags_2222, &_call_f_setFlags_2222);
}

// void QTableWidgetItem::setFont(const QFont &font)


static void _init_f_setFont_1801 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("font");
  decl->add_arg<const QFont & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setFont_1801 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QFont &arg1 = args.read<const QFont & > ();
  ((QTableWidgetItem *)cls)->setFont (arg1);
}

static qt_gsi::GenericMethod *_create_f_setFont_1801 ()
{
  return new qt_gsi::GenericMethod ("setFont|font=", "@brief Method void QTableWidgetItem::setFont(const QFont &font)\n", false, &_init_f_setFont_1801, &_call_f_setFont_1801);
}

// void QTableWidgetItem::setForeground(const QBrush &brush)


static void _init_f_setForeground_1910 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("brush");
  decl->add_arg<const QBrush & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setForeground_1910 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QBrush &arg1 = args.read<const QBrush & > ();
  ((QTableWidgetItem *)cls)->setForeground (arg1);
}

static qt_gsi::GenericMethod *_create_f_setForeground_1910 ()
{
  return new qt_gsi::GenericMethod ("setForeground|foreground=", "@brief Method void QTableWidgetItem::setForeground(const QBrush &brush)\n", false, &_init_f_setForeground_1910, &_call_f_setForeground_1910);
}

// void QTableWidgetItem::setIcon(const QIcon &icon)


static void _init_f_setIcon_1787 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("icon");
  decl->add_arg<const QIcon & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setIcon_1787 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QIcon &arg1 = args.read<const QIcon & > ();
  ((QTableWidgetItem *)cls)->setIcon (arg1);
}

static qt_gsi::GenericMethod *_create_f_setIcon_1787 ()
{
  return new qt_gsi::GenericMethod ("setIcon|icon=", "@brief Method void QTableWidgetItem::setIcon(const QIcon &icon)\n", false, &_init_f_setIcon_1787, &_call_f_setIcon_1787);
}

// void QTableWidgetItem::setSelected(bool select)


static void _init_f_setSelected_864 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("select");
  decl->add_arg<bool > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setSelected_864 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  bool arg1 = args.read<bool > ();
  ((QTableWidgetItem *)cls)->setSelected (arg1);
}

static qt_gsi::GenericMethod *_create_f_setSelected_864 ()
{
  return new qt_gsi::GenericMethod ("setSelected|selected=", "@brief Method void QTableWidgetItem::setSelected(bool select)\n", false, &_init_f_setSelected_864, &_call_f_setSelected_864);
}

// void QTableWidgetItem::setSizeHint(const QSize &size)


static void _init_f_setSizeHint_1805 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("size");
  decl->add_arg<const QSize & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setSizeHint_1805 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QSize &arg1 = args.read<const QSize & > ();
  ((QTableWidgetItem *)cls)->setSizeHint (arg1);
}

static qt_gsi::GenericMethod *_create_f_setSizeHint_1805 ()
{
  return new qt_gsi::GenericMethod ("setSizeHint|sizeHint=", "@brief Method void QTableWidgetItem::setSizeHint(const QSize &size)\n", false, &_init_f_setSizeHint_1805, &_call_f_setSizeHint_1805);
}

// void QTableWidgetItem::setStatusTip(const QString &statusTip)


static void _init_f_setStatusTip_2025 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("statusTip");
  decl->add_arg<const QString & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setStatusTip_2025 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QString &arg1 = args.read<const QString & > ();
  ((QTableWidgetItem *)cls)->setStatusTip (arg1);
}

static qt_gsi::GenericMethod *_create_f_setStatusTip_2025 ()
{
  return new qt_gsi::GenericMethod ("setStatusTip|statusTip=", "@brief Method void QTableWidgetItem::setStatusTip(const QString &statusTip)\n", false, &_init_f_setStatusTip_2025, &_call_f_setStatusTip_2025);
}

// void QTableWidgetItem::setText(const QString &text)


static void _init_f_setText_2025 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("text");
  decl->add_arg<const QString & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setText_2025 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QString &arg1 = args.read<const QString & > ();
  ((QTableWidgetItem *)cls)->setText (arg1);
}

static qt_gsi::GenericMethod *_create_f_setText_2025 ()
{
  return new qt_gsi::GenericMethod ("setText|text=", "@brief Method void QTableWidgetItem::setText(const QString &text)\n", false, &_init_f_setText_2025, &_call_f_setText_2025);
}

// void QTableWidgetItem::setTextAlignment(int alignment)


static void _init_f_setTextAlignment_767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("alignment");
  decl->add_arg<int > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setTextAlignment_767 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ((QTableWidgetItem *)cls)->setTextAlignment (arg1);
}

static qt_gsi::GenericMethod *_create_f_setTextAlignment_767 ()
{
  return new qt_gsi::GenericMethod ("setTextAlignment|textAlignment=", "@brief Method void QTableWidgetItem::setTextAlignment(int alignment)\n", false, &_init_f_setTextAlignment_767, &_call_f_setTextAlignment_767);
}

// void QTableWidgetItem::setTextColor(const QColor &color)


static void _init_f_setTextColor_1905 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("color");
  decl->add_arg<const QColor & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setTextColor_1905 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QColor &arg1 = args.read<const QColor & > ();
  ((QTableWidgetItem *)cls)->setTextColor (arg1);
}

static qt_gsi::GenericMethod *_create_f_setTextColor_1905 ()
{
  return new qt_gsi::GenericMethod ("setTextColor|textColor=", "@brief Method void QTableWidgetItem::setTextColor(const QColor &color)\n", false, &_init_f_setTextColor_1905, &_call_f_setTextColor_1905);
}

// void QTableWidgetItem::setToolTip(const QString &toolTip)


static void _init_f_setToolTip_2025 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("toolTip");
  decl->add_arg<const QString & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setToolTip_2025 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QString &arg1 = args.read<const QString & > ();
  ((QTableWidgetItem *)cls)->setToolTip (arg1);
}

static qt_gsi::GenericMethod *_create_f_setToolTip_2025 ()
{
  return new qt_gsi::GenericMethod ("setToolTip|toolTip=", "@brief Method void QTableWidgetItem::setToolTip(const QString &toolTip)\n", false, &_init_f_setToolTip_2025, &_call_f_setToolTip_2025);
}

// void QTableWidgetItem::setWhatsThis(const QString &whatsThis)


static void _init_f_setWhatsThis_2025 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("whatsThis");
  decl->add_arg<const QString & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setWhatsThis_2025 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QString &arg1 = args.read<const QString & > ();
  ((QTableWidgetItem *)cls)->setWhatsThis (arg1);
}

static qt_gsi::GenericMethod *_create_f_setWhatsThis_2025 ()
{
  return new qt_gsi::GenericMethod ("setWhatsThis|whatsThis=", "@brief Method void QTableWidgetItem::setWhatsThis(const QString &whatsThis)\n", false, &_init_f_setWhatsThis_2025, &_call_f_setWhatsThis_2025);
}

// QSize QTableWidgetItem::sizeHint()


static void _init_f_sizeHint_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QSize > ();
}

static void _call_f_sizeHint_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QSize > ((QSize)((QTableWidgetItem *)cls)->sizeHint ());
}

static qt_gsi::GenericMethod *_create_f_sizeHint_c0 ()
{
  return new qt_gsi::GenericMethod (":sizeHint", "@brief Method QSize QTableWidgetItem::sizeHint()\n", true, &_init_f_sizeHint_c0, &_call_f_sizeHint_c0);
}

// QString QTableWidgetItem::statusTip()


static void _init_f_statusTip_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QString > ();
}

static void _call_f_statusTip_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QString > ((QString)((QTableWidgetItem *)cls)->statusTip ());
}

static qt_gsi::GenericMethod *_create_f_statusTip_c0 ()
{
  return new qt_gsi::GenericMethod (":statusTip", "@brief Method QString QTableWidgetItem::statusTip()\n", true, &_init_f_statusTip_c0, &_call_f_statusTip_c0);
}

// QTableWidget *QTableWidgetItem::tableWidget()


static void _init_f_tableWidget_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QTableWidget * > ();
}

static void _call_f_tableWidget_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QTableWidget * > ((QTableWidget *)((QTableWidgetItem *)cls)->tableWidget ());
}

static qt_gsi::GenericMethod *_create_f_tableWidget_c0 ()
{
  return new qt_gsi::GenericMethod ("tableWidget", "@brief Method QTableWidget *QTableWidgetItem::tableWidget()\n", true, &_init_f_tableWidget_c0, &_call_f_tableWidget_c0);
}

// QString QTableWidgetItem::text()


static void _init_f_text_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QString > ();
}

static void _call_f_text_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QString > ((QString)((QTableWidgetItem *)cls)->text ());
}

static qt_gsi::GenericMethod *_create_f_text_c0 ()
{
  return new qt_gsi::GenericMethod (":text", "@brief Method QString QTableWidgetItem::text()\n", true, &_init_f_text_c0, &_call_f_text_c0);
}

// int QTableWidgetItem::textAlignment()


static void _init_f_textAlignment_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<int > ();
}

static void _call_f_textAlignment_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<int > ((int)((QTableWidgetItem *)cls)->textAlignment ());
}

static qt_gsi::GenericMethod *_create_f_textAlignment_c0 ()
{
  return new qt_gsi::GenericMethod (":textAlignment", "@brief Method int QTableWidgetItem::textAlignment()\n", true, &_init_f_textAlignment_c0, &_call_f_textAlignment_c0);
}

// QColor QTableWidgetItem::textColor()


static void _init_f_textColor_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QColor > ();
}

static void _call_f_textColor_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QColor > ((QColor)((QTableWidgetItem *)cls)->textColor ());
}

static qt_gsi::GenericMethod *_create_f_textColor_c0 ()
{
  return new qt_gsi::GenericMethod (":textColor", "@brief Method QColor QTableWidgetItem::textColor()\n", true, &_init_f_textColor_c0, &_call_f_textColor_c0);
}

// QString QTableWidgetItem::toolTip()


static void _init_f_toolTip_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QString > ();
}

static void _call_f_toolTip_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QString > ((QString)((QTableWidgetItem *)cls)->toolTip ());
}

static qt_gsi::GenericMethod *_create_f_toolTip_c0 ()
{
  return new qt_gsi::GenericMethod (":toolTip", "@brief Method QString QTableWidgetItem::toolTip()\n", true, &_init_f_toolTip_c0, &_call_f_toolTip_c0);
}

// int QTableWidgetItem::type()


static void _init_f_type_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<int > ();
}

static void _call_f_type_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<int > ((int)((QTableWidgetItem *)cls)->type ());
}

static qt_gsi::GenericMethod *_create_f_type_c0 ()
{
  return new qt_gsi::GenericMethod ("type", "@brief Method int QTableWidgetItem::type()\n", true, &_init_f_type_c0, &_call_f_type_c0);
}

// QString QTableWidgetItem::whatsThis()


static void _init_f_whatsThis_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QString > ();
}

static void _call_f_whatsThis_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QString > ((QString)((QTableWidgetItem *)cls)->whatsThis ());
}

static qt_gsi::GenericMethod *_create_f_whatsThis_c0 ()
{
  return new qt_gsi::GenericMethod (":whatsThis", "@brief Method QString QTableWidgetItem::whatsThis()\n", true, &_init_f_whatsThis_c0, &_call_f_whatsThis_c0);
}

// void QTableWidgetItem::write(QDataStream &out)


static void _init_f_write_c1697 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("out");
  decl->add_arg<QDataStream & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_write_c1697 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QDataStream &arg1 = args.read<QDataStream & > ();
  ((QTableWidgetItem *)cls)->write (arg1);
}

static qt_gsi::GenericMethod *_create_f_write_c1697 ()
{
  return new qt_gsi::GenericMethod ("write", "@brief Method void QTableWidgetItem::write(QDataStream &out)\n", true, &_init_f_write_c1697, &_call_f_write_c1697);
}

namespace gsi
{
gsi::Class<QTableWidgetItem> decl_QTableWidgetItem ("QTableWidgetItem_Native",
  gsi::Methods(_create_f_background_c0 ()) +
  gsi::Methods(_create_f_backgroundColor_c0 ()) +
  gsi::Methods(_create_f_checkState_c0 ()) +
  gsi::Methods(_create_f_clone_c0 ()) +
  gsi::Methods(_create_f_column_c0 ()) +
  gsi::Methods(_create_f_data_c767 ()) +
  gsi::Methods(_create_f_flags_c0 ()) +
  gsi::Methods(_create_f_font_c0 ()) +
  gsi::Methods(_create_f_foreground_c0 ()) +
  gsi::Methods(_create_f_icon_c0 ()) +
  gsi::Methods(_create_f_isSelected_c0 ()) +
  gsi::Methods(_create_f_operator_lt__c2893 ()) +
  gsi::Methods(_create_f_operator_eq__2893 ()) +
  gsi::Methods(_create_f_read_1697 ()) +
  gsi::Methods(_create_f_row_c0 ()) +
  gsi::Methods(_create_f_setBackground_1910 ()) +
  gsi::Methods(_create_f_setBackgroundColor_1905 ()) +
  gsi::Methods(_create_f_setCheckState_1740 ()) +
  gsi::Methods(_create_f_setData_2778 ()) +
  gsi::Methods(_create_f_setFlags_2222 ()) +
  gsi::Methods(_create_f_setFont_1801 ()) +
  gsi::Methods(_create_f_setForeground_1910 ()) +
  gsi::Methods(_create_f_setIcon_1787 ()) +
  gsi::Methods(_create_f_setSelected_864 ()) +
  gsi::Methods(_create_f_setSizeHint_1805 ()) +
  gsi::Methods(_create_f_setStatusTip_2025 ()) +
  gsi::Methods(_create_f_setText_2025 ()) +
  gsi::Methods(_create_f_setTextAlignment_767 ()) +
  gsi::Methods(_create_f_setTextColor_1905 ()) +
  gsi::Methods(_create_f_setToolTip_2025 ()) +
  gsi::Methods(_create_f_setWhatsThis_2025 ()) +
  gsi::Methods(_create_f_sizeHint_c0 ()) +
  gsi::Methods(_create_f_statusTip_c0 ()) +
  gsi::Methods(_create_f_tableWidget_c0 ()) +
  gsi::Methods(_create_f_text_c0 ()) +
  gsi::Methods(_create_f_textAlignment_c0 ()) +
  gsi::Methods(_create_f_textColor_c0 ()) +
  gsi::Methods(_create_f_toolTip_c0 ()) +
  gsi::Methods(_create_f_type_c0 ()) +
  gsi::Methods(_create_f_whatsThis_c0 ()) +
  gsi::Methods(_create_f_write_c1697 ()),
  "@hide\n@alias QTableWidgetItem");
}


class QTableWidgetItem_Adaptor : public QTableWidgetItem, public qt_gsi::QtObjectBase
{
public:

  virtual ~QTableWidgetItem_Adaptor();

  //  [adaptor ctor] QTableWidgetItem::QTableWidgetItem(int type)
  QTableWidgetItem_Adaptor() : QTableWidgetItem()
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTableWidgetItem::QTableWidgetItem(int type)
  QTableWidgetItem_Adaptor(int type) : QTableWidgetItem(type)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTableWidgetItem::QTableWidgetItem(const QString &text, int type)
  QTableWidgetItem_Adaptor(const QString &text) : QTableWidgetItem(text)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTableWidgetItem::QTableWidgetItem(const QString &text, int type)
  QTableWidgetItem_Adaptor(const QString &text, int type) : QTableWidgetItem(text, type)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTableWidgetItem::QTableWidgetItem(const QIcon &icon, const QString &text, int type)
  QTableWidgetItem_Adaptor(const QIcon &icon, const QString &text) : QTableWidgetItem(icon, text)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTableWidgetItem::QTableWidgetItem(const QIcon &icon, const QString &text, int type)
  QTableWidgetItem_Adaptor(const QIcon &icon, const QString &text, int type) : QTableWidgetItem(icon, text, type)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor ctor] QTableWidgetItem::QTableWidgetItem(const QTableWidgetItem &other)
  QTableWidgetItem_Adaptor(const QTableWidgetItem &other) : QTableWidgetItem(other)
  {
    qt_gsi::QtObjectBase::init (this);
  }

  //  [adaptor impl] QTableWidgetItem *QTableWidgetItem::clone()
  QTableWidgetItem * cbs_clone_c0_0() const
  {
    return QTableWidgetItem::clone();
  }

  virtual QTableWidgetItem * clone() const
  {
    if (cb_clone_c0_0.can_issue()) {
      return cb_clone_c0_0.issue<QTableWidgetItem_Adaptor, QTableWidgetItem *>(&QTableWidgetItem_Adaptor::cbs_clone_c0_0);
    } else {
      return QTableWidgetItem::clone();
    }
  }

  //  [adaptor impl] QVariant QTableWidgetItem::data(int role)
  QVariant cbs_data_c767_0(int role) const
  {
    return QTableWidgetItem::data(role);
  }

  virtual QVariant data(int role) const
  {
    if (cb_data_c767_0.can_issue()) {
      return cb_data_c767_0.issue<QTableWidgetItem_Adaptor, QVariant, int>(&QTableWidgetItem_Adaptor::cbs_data_c767_0, role);
    } else {
      return QTableWidgetItem::data(role);
    }
  }

  //  [adaptor impl] bool QTableWidgetItem::operator<(const QTableWidgetItem &other)
  bool cbs_operator_lt__c2893_0(const QTableWidgetItem &other) const
  {
    return QTableWidgetItem::operator<(other);
  }

  virtual bool operator<(const QTableWidgetItem &other) const
  {
    if (cb_operator_lt__c2893_0.can_issue()) {
      return cb_operator_lt__c2893_0.issue<QTableWidgetItem_Adaptor, bool, const QTableWidgetItem &>(&QTableWidgetItem_Adaptor::cbs_operator_lt__c2893_0, other);
    } else {
      return QTableWidgetItem::operator<(other);
    }
  }

  //  [adaptor impl] void QTableWidgetItem::read(QDataStream &in)
  void cbs_read_1697_0(QDataStream &in)
  {
    QTableWidgetItem::read(in);
  }

  virtual void read(QDataStream &in)
  {
    if (cb_read_1697_0.can_issue()) {
      cb_read_1697_0.issue<QTableWidgetItem_Adaptor, QDataStream &>(&QTableWidgetItem_Adaptor::cbs_read_1697_0, in);
    } else {
      QTableWidgetItem::read(in);
    }
  }

  //  [adaptor impl] void QTableWidgetItem::setData(int role, const QVariant &value)
  void cbs_setData_2778_0(int role, const QVariant &value)
  {
    QTableWidgetItem::setData(role, value);
  }

  virtual void setData(int role, const QVariant &value)
  {
    if (cb_setData_2778_0.can_issue()) {
      cb_setData_2778_0.issue<QTableWidgetItem_Adaptor, int, const QVariant &>(&QTableWidgetItem_Adaptor::cbs_setData_2778_0, role, value);
    } else {
      QTableWidgetItem::setData(role, value);
    }
  }

  //  [adaptor impl] void QTableWidgetItem::write(QDataStream &out)
  void cbs_write_c1697_0(QDataStream &out) const
  {
    QTableWidgetItem::write(out);
  }

  virtual void write(QDataStream &out) const
  {
    if (cb_write_c1697_0.can_issue()) {
      cb_write_c1697_0.issue<QTableWidgetItem_Adaptor, QDataStream &>(&QTableWidgetItem_Adaptor::cbs_write_c1697_0, out);
    } else {
      QTableWidgetItem::write(out);
    }
  }

  gsi::Callback cb_clone_c0_0;
  gsi::Callback cb_data_c767_0;
  gsi::Callback cb_operator_lt__c2893_0;
  gsi::Callback cb_read_1697_0;
  gsi::Callback cb_setData_2778_0;
  gsi::Callback cb_write_c1697_0;
};

QTableWidgetItem_Adaptor::~QTableWidgetItem_Adaptor() { }

//  Constructor QTableWidgetItem::QTableWidgetItem(int type) (adaptor class)

static void _init_ctor_QTableWidgetItem_Adaptor_767 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("type", true, "QTableWidgetItem::Type");
  decl->add_arg<int > (argspec_0);
  decl->set_return_new<QTableWidgetItem_Adaptor *> ();
}

static void _call_ctor_QTableWidgetItem_Adaptor_767 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args ? args.read<int > () : (int)(QTableWidgetItem::Type);
  ret.write<QTableWidgetItem_Adaptor *> (new QTableWidgetItem_Adaptor (arg1));
}

static qt_gsi::GenericStaticMethod *_create_ctor_QTableWidgetItem_Adaptor_767 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QTableWidgetItem::QTableWidgetItem(int type)\nThis method creates an object of class QTableWidgetItem.", &_init_ctor_QTableWidgetItem_Adaptor_767, &_call_ctor_QTableWidgetItem_Adaptor_767);
}

//  Constructor QTableWidgetItem::QTableWidgetItem(const QString &text, int type) (adaptor class)

static void _init_ctor_QTableWidgetItem_Adaptor_2684 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("text");
  decl->add_arg<const QString & > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("type", true, "QTableWidgetItem::Type");
  decl->add_arg<int > (argspec_1);
  decl->set_return_new<QTableWidgetItem_Adaptor *> ();
}

static void _call_ctor_QTableWidgetItem_Adaptor_2684 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QString &arg1 = args.read<const QString & > ();
  int arg2 = args ? args.read<int > () : (int)(QTableWidgetItem::Type);
  ret.write<QTableWidgetItem_Adaptor *> (new QTableWidgetItem_Adaptor (arg1, arg2));
}

static qt_gsi::GenericStaticMethod *_create_ctor_QTableWidgetItem_Adaptor_2684 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QTableWidgetItem::QTableWidgetItem(const QString &text, int type)\nThis method creates an object of class QTableWidgetItem.", &_init_ctor_QTableWidgetItem_Adaptor_2684, &_call_ctor_QTableWidgetItem_Adaptor_2684);
}

//  Constructor QTableWidgetItem::QTableWidgetItem(const QIcon &icon, const QString &text, int type) (adaptor class)

static void _init_ctor_QTableWidgetItem_Adaptor_4363 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("icon");
  decl->add_arg<const QIcon & > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("text");
  decl->add_arg<const QString & > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("type", true, "QTableWidgetItem::Type");
  decl->add_arg<int > (argspec_2);
  decl->set_return_new<QTableWidgetItem_Adaptor *> ();
}

static void _call_ctor_QTableWidgetItem_Adaptor_4363 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QIcon &arg1 = args.read<const QIcon & > ();
  const QString &arg2 = args.read<const QString & > ();
  int arg3 = args ? args.read<int > () : (int)(QTableWidgetItem::Type);
  ret.write<QTableWidgetItem_Adaptor *> (new QTableWidgetItem_Adaptor (arg1, arg2, arg3));
}

static qt_gsi::GenericStaticMethod *_create_ctor_QTableWidgetItem_Adaptor_4363 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QTableWidgetItem::QTableWidgetItem(const QIcon &icon, const QString &text, int type)\nThis method creates an object of class QTableWidgetItem.", &_init_ctor_QTableWidgetItem_Adaptor_4363, &_call_ctor_QTableWidgetItem_Adaptor_4363);
}

//  Constructor QTableWidgetItem::QTableWidgetItem(const QTableWidgetItem &other) (adaptor class)

static void _init_ctor_QTableWidgetItem_Adaptor_2893 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QTableWidgetItem & > (argspec_0);
  decl->set_return_new<QTableWidgetItem_Adaptor *> ();
}

static void _call_ctor_QTableWidgetItem_Adaptor_2893 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QTableWidgetItem &arg1 = args.read<const QTableWidgetItem & > ();
  ret.write<QTableWidgetItem_Adaptor *> (new QTableWidgetItem_Adaptor (arg1));
}

static qt_gsi::GenericStaticMethod *_create_ctor_QTableWidgetItem_Adaptor_2893 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QTableWidgetItem::QTableWidgetItem(const QTableWidgetItem &other)\nThis method creates an object of class QTableWidgetItem.", &_init_ctor_QTableWidgetItem_Adaptor_2893, &_call_ctor_QTableWidgetItem_Adaptor_2893);
}

// QTableWidgetItem *QTableWidgetItem::clone()

static void _init_cbs_clone_c0_0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QTableWidgetItem * > ();
}

static void _call_cbs_clone_c0_0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QTableWidgetItem * > ((QTableWidgetItem *)((QTableWidgetItem_Adaptor *)cls)->cbs_clone_c0_0 ());
}

static void _set_callback_cbs_clone_c0_0 (void *cls, const gsi::Callback &cb)
{
  ((QTableWidgetItem_Adaptor *)cls)->cb_clone_c0_0 = cb;
}

static qt_gsi::GenericMethod *_create_cbs_clone_c0_0 ()
{
  return new qt_gsi::GenericMethod ("clone", "@hide", true, &_init_cbs_clone_c0_0, &_call_cbs_clone_c0_0);
}

static qt_gsi::GenericMethod *_create_callback_cbs_clone_c0_0 ()
{
  return new qt_gsi::GenericMethod ("clone", "@brief Virtual method QTableWidgetItem *QTableWidgetItem::clone()\nThis method can be reimplemented in a derived class.", true, &_init_cbs_clone_c0_0, &_call_cbs_clone_c0_0, &_set_callback_cbs_clone_c0_0);
}


// QVariant QTableWidgetItem::data(int role)

static void _init_cbs_data_c767_0 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("role");
  decl->add_arg<int > (argspec_0);
  decl->set_return<QVariant > ();
}

static void _call_cbs_data_c767_0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  ret.write<QVariant > ((QVariant)((QTableWidgetItem_Adaptor *)cls)->cbs_data_c767_0 (arg1));
}

static void _set_callback_cbs_data_c767_0 (void *cls, const gsi::Callback &cb)
{
  ((QTableWidgetItem_Adaptor *)cls)->cb_data_c767_0 = cb;
}

static qt_gsi::GenericMethod *_create_cbs_data_c767_0 ()
{
  return new qt_gsi::GenericMethod ("data", "@hide", true, &_init_cbs_data_c767_0, &_call_cbs_data_c767_0);
}

static qt_gsi::GenericMethod *_create_callback_cbs_data_c767_0 ()
{
  return new qt_gsi::GenericMethod ("data", "@brief Virtual method QVariant QTableWidgetItem::data(int role)\nThis method can be reimplemented in a derived class.", true, &_init_cbs_data_c767_0, &_call_cbs_data_c767_0, &_set_callback_cbs_data_c767_0);
}


// bool QTableWidgetItem::operator<(const QTableWidgetItem &other)

static void _init_cbs_operator_lt__c2893_0 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QTableWidgetItem & > (argspec_0);
  decl->set_return<bool > ();
}

static void _call_cbs_operator_lt__c2893_0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QTableWidgetItem &arg1 = args.read<const QTableWidgetItem & > ();
  ret.write<bool > ((bool)((QTableWidgetItem_Adaptor *)cls)->cbs_operator_lt__c2893_0 (arg1));
}

static void _set_callback_cbs_operator_lt__c2893_0 (void *cls, const gsi::Callback &cb)
{
  ((QTableWidgetItem_Adaptor *)cls)->cb_operator_lt__c2893_0 = cb;
}

static qt_gsi::GenericMethod *_create_cbs_operator_lt__c2893_0 ()
{
  return new qt_gsi::GenericMethod ("<", "@hide", true, &_init_cbs_operator_lt__c2893_0, &_call_cbs_operator_lt__c2893_0);
}

static qt_gsi::GenericMethod *_create_callback_cbs_operator_lt__c2893_0 ()
{
  return new qt_gsi::GenericMethod ("<", "@brief Virtual method bool QTableWidgetItem::operator<(const QTableWidgetItem &other)\nThis method can be reimplemented in a derived class.", true, &_init_cbs_operator_lt__c2893_0, &_call_cbs_operator_lt__c2893_0, &_set_callback_cbs_operator_lt__c2893_0);
}


// void QTableWidgetItem::read(QDataStream &in)

static void _init_cbs_read_1697_0 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("in");
  decl->add_arg<QDataStream & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_cbs_read_1697_0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QDataStream &arg1 = args.read<QDataStream & > ();
  ((QTableWidgetItem_Adaptor *)cls)->cbs_read_1697_0 (arg1);
}

static void _set_callback_cbs_read_1697_0 (void *cls, const gsi::Callback &cb)
{
  ((QTableWidgetItem_Adaptor *)cls)->cb_read_1697_0 = cb;
}

static qt_gsi::GenericMethod *_create_cbs_read_1697_0 ()
{
  return new qt_gsi::GenericMethod ("read", "@hide", false, &_init_cbs_read_1697_0, &_call_cbs_read_1697_0);
}

static qt_gsi::GenericMethod *_create_callback_cbs_read_1697_0 ()
{
  return new qt_gsi::GenericMethod ("read", "@brief Virtual method void QTableWidgetItem::read(QDataStream &in)\nThis method can be reimplemented in a derived class.", false, &_init_cbs_read_1697_0, &_call_cbs_read_1697_0, &_set_callback_cbs_read_1697_0);
}


// void QTableWidgetItem::setData(int role, const QVariant &value)

static void _init_cbs_setData_2778_0 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("role");
  decl->add_arg<int > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("value");
  decl->add_arg<const QVariant & > (argspec_1);
  decl->set_return<void > ();
}

static void _call_cbs_setData_2778_0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  int arg1 = args.read<int > ();
  const QVariant &arg2 = args.read<const QVariant & > ();
  ((QTableWidgetItem_Adaptor *)cls)->cbs_setData_2778_0 (arg1, arg2);
}

static void _set_callback_cbs_setData_2778_0 (void *cls, const gsi::Callback &cb)
{
  ((QTableWidgetItem_Adaptor *)cls)->cb_setData_2778_0 = cb;
}

static qt_gsi::GenericMethod *_create_cbs_setData_2778_0 ()
{
  return new qt_gsi::GenericMethod ("setData", "@hide", false, &_init_cbs_setData_2778_0, &_call_cbs_setData_2778_0);
}

static qt_gsi::GenericMethod *_create_callback_cbs_setData_2778_0 ()
{
  return new qt_gsi::GenericMethod ("setData", "@brief Virtual method void QTableWidgetItem::setData(int role, const QVariant &value)\nThis method can be reimplemented in a derived class.", false, &_init_cbs_setData_2778_0, &_call_cbs_setData_2778_0, &_set_callback_cbs_setData_2778_0);
}


// void QTableWidgetItem::write(QDataStream &out)

static void _init_cbs_write_c1697_0 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("out");
  decl->add_arg<QDataStream & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_cbs_write_c1697_0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  QDataStream &arg1 = args.read<QDataStream & > ();
  ((QTableWidgetItem_Adaptor *)cls)->cbs_write_c1697_0 (arg1);
}

static void _set_callback_cbs_write_c1697_0 (void *cls, const gsi::Callback &cb)
{
  ((QTableWidgetItem_Adaptor *)cls)->cb_write_c1697_0 = cb;
}

static qt_gsi::GenericMethod *_create_cbs_write_c1697_0 ()
{
  return new qt_gsi::GenericMethod ("write", "@hide", true, &_init_cbs_write_c1697_0, &_call_cbs_write_c1697_0);
}

static qt_gsi::GenericMethod *_create_callback_cbs_write_c1697_0 ()
{
  return new qt_gsi::GenericMethod ("write", "@brief Virtual method void QTableWidgetItem::write(QDataStream &out)\nThis method can be reimplemented in a derived class.", true, &_init_cbs_write_c1697_0, &_call_cbs_write_c1697_0, &_set_callback_cbs_write_c1697_0);
}


namespace gsi
{

extern gsi::Class<QTableWidgetItem> decl_QTableWidgetItem;

gsi::Class<QTableWidgetItem_Adaptor> decl_QTableWidgetItem_Adaptor (decl_QTableWidgetItem, "QTableWidgetItem",
  gsi::Methods(_create_cbs_clone_c0_0 ()) +
  gsi::Methods(_create_callback_cbs_clone_c0_0 ()) +
  gsi::Methods(_create_cbs_data_c767_0 ()) +
  gsi::Methods(_create_callback_cbs_data_c767_0 ()) +
  gsi::Methods(_create_cbs_operator_lt__c2893_0 ()) +
  gsi::Methods(_create_callback_cbs_operator_lt__c2893_0 ()) +
  gsi::Methods(_create_cbs_read_1697_0 ()) +
  gsi::Methods(_create_callback_cbs_read_1697_0 ()) +
  gsi::Methods(_create_cbs_setData_2778_0 ()) +
  gsi::Methods(_create_callback_cbs_setData_2778_0 ()) +
  gsi::Methods(_create_cbs_write_c1697_0 ()) +
  gsi::Methods(_create_callback_cbs_write_c1697_0 ()) +
  gsi::Methods(_create_ctor_QTableWidgetItem_Adaptor_767 ()) +
  gsi::Methods(_create_ctor_QTableWidgetItem_Adaptor_2684 ()) +
  gsi::Methods(_create_ctor_QTableWidgetItem_Adaptor_4363 ()) +
  gsi::Methods(_create_ctor_QTableWidgetItem_Adaptor_2893 ()),
  "@qt\n@brief Binding of QTableWidgetItem");

}

