
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file gsiDeclQGraphicsSceneResizeEvent.cc 
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include "gsiQtGui.h"
#include "gsiDeclQtTypeTraits.h"
#include "gsiDeclQGraphicsSceneResizeEvent_Enums.h"
#include <memory>

// -----------------------------------------------------------------------
// class QGraphicsSceneResizeEvent

// QSizeF QGraphicsSceneResizeEvent::newSize()


static void _init_f_newSize_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QSizeF > ();
}

static void _call_f_newSize_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QSizeF > ((QSizeF)((QGraphicsSceneResizeEvent *)cls)->newSize ());
}

static qt_gsi::GenericMethod *_create_f_newSize_c0 ()
{
  return new qt_gsi::GenericMethod (":newSize", "@brief Method QSizeF QGraphicsSceneResizeEvent::newSize()\n", true, &_init_f_newSize_c0, &_call_f_newSize_c0);
}

// QSizeF QGraphicsSceneResizeEvent::oldSize()


static void _init_f_oldSize_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QSizeF > ();
}

static void _call_f_oldSize_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QSizeF > ((QSizeF)((QGraphicsSceneResizeEvent *)cls)->oldSize ());
}

static qt_gsi::GenericMethod *_create_f_oldSize_c0 ()
{
  return new qt_gsi::GenericMethod (":oldSize", "@brief Method QSizeF QGraphicsSceneResizeEvent::oldSize()\n", true, &_init_f_oldSize_c0, &_call_f_oldSize_c0);
}

// void QGraphicsSceneResizeEvent::setNewSize(const QSizeF &size)


static void _init_f_setNewSize_1875 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("size");
  decl->add_arg<const QSizeF & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setNewSize_1875 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QSizeF &arg1 = args.read<const QSizeF & > ();
  ((QGraphicsSceneResizeEvent *)cls)->setNewSize (arg1);
}

static qt_gsi::GenericMethod *_create_f_setNewSize_1875 ()
{
  return new qt_gsi::GenericMethod ("setNewSize|newSize=", "@brief Method void QGraphicsSceneResizeEvent::setNewSize(const QSizeF &size)\n", false, &_init_f_setNewSize_1875, &_call_f_setNewSize_1875);
}

// void QGraphicsSceneResizeEvent::setOldSize(const QSizeF &size)


static void _init_f_setOldSize_1875 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("size");
  decl->add_arg<const QSizeF & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setOldSize_1875 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  const QSizeF &arg1 = args.read<const QSizeF & > ();
  ((QGraphicsSceneResizeEvent *)cls)->setOldSize (arg1);
}

static qt_gsi::GenericMethod *_create_f_setOldSize_1875 ()
{
  return new qt_gsi::GenericMethod ("setOldSize|oldSize=", "@brief Method void QGraphicsSceneResizeEvent::setOldSize(const QSizeF &size)\n", false, &_init_f_setOldSize_1875, &_call_f_setOldSize_1875);
}

namespace gsi
{
extern gsi::Class<QGraphicsSceneEvent> decl_QGraphicsSceneEvent;

gsi::Class<QGraphicsSceneResizeEvent> decl_QGraphicsSceneResizeEvent (decl_QGraphicsSceneEvent, "QGraphicsSceneResizeEvent_Native",
  gsi::Methods(_create_f_newSize_c0 ()) +
  gsi::Methods(_create_f_oldSize_c0 ()) +
  gsi::Methods(_create_f_setNewSize_1875 ()) +
  gsi::Methods(_create_f_setOldSize_1875 ()),
  "@hide\n@alias QGraphicsSceneResizeEvent");
}


class QGraphicsSceneResizeEvent_Adaptor : public QGraphicsSceneResizeEvent, public qt_gsi::QtObjectBase
{
public:

  virtual ~QGraphicsSceneResizeEvent_Adaptor();

  //  [adaptor ctor] QGraphicsSceneResizeEvent::QGraphicsSceneResizeEvent()
  QGraphicsSceneResizeEvent_Adaptor() : QGraphicsSceneResizeEvent()
  {
    qt_gsi::QtObjectBase::init (this);
  }

  
};

QGraphicsSceneResizeEvent_Adaptor::~QGraphicsSceneResizeEvent_Adaptor() { }

//  Constructor QGraphicsSceneResizeEvent::QGraphicsSceneResizeEvent() (adaptor class)

static void _init_ctor_QGraphicsSceneResizeEvent_Adaptor_0 (qt_gsi::GenericStaticMethod *decl)
{
  decl->set_return_new<QGraphicsSceneResizeEvent_Adaptor *> ();
}

static void _call_ctor_QGraphicsSceneResizeEvent_Adaptor_0 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QGraphicsSceneResizeEvent_Adaptor *> (new QGraphicsSceneResizeEvent_Adaptor ());
}

static qt_gsi::GenericStaticMethod *_create_ctor_QGraphicsSceneResizeEvent_Adaptor_0 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QGraphicsSceneResizeEvent::QGraphicsSceneResizeEvent()\nThis method creates an object of class QGraphicsSceneResizeEvent.", &_init_ctor_QGraphicsSceneResizeEvent_Adaptor_0, &_call_ctor_QGraphicsSceneResizeEvent_Adaptor_0);
}

namespace gsi
{

extern gsi::Class<QGraphicsSceneResizeEvent> decl_QGraphicsSceneResizeEvent;

gsi::Class<QGraphicsSceneResizeEvent_Adaptor> decl_QGraphicsSceneResizeEvent_Adaptor (decl_QGraphicsSceneResizeEvent, "QGraphicsSceneResizeEvent",
  gsi::Methods(_create_ctor_QGraphicsSceneResizeEvent_Adaptor_0 ()),
  "@qt\n@brief Binding of QGraphicsSceneResizeEvent");

}

