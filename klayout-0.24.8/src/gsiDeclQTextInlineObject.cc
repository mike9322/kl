
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2016 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file gsiDeclQTextInlineObject.cc 
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include "gsiQtGui.h"
#include "gsiDeclQtTypeTraits.h"
#include "gsiDeclQTextInlineObject_Enums.h"
#include <memory>

// -----------------------------------------------------------------------
// class QTextInlineObject

//  Constructor QTextInlineObject::QTextInlineObject()


static void _init_ctor_QTextInlineObject_0 (qt_gsi::GenericStaticMethod *decl)
{
  decl->set_return_new<QTextInlineObject *> ();
}

static void _call_ctor_QTextInlineObject_0 (const qt_gsi::GenericStaticMethod *decl, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QTextInlineObject *> (new QTextInlineObject ());
}

static qt_gsi::GenericStaticMethod *_create_ctor_QTextInlineObject_0 ()
{
  return new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QTextInlineObject::QTextInlineObject()\nThis method creates an object of class QTextInlineObject.", &_init_ctor_QTextInlineObject_0, &_call_ctor_QTextInlineObject_0);
}

// double QTextInlineObject::ascent()


static void _init_f_ascent_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<double > ();
}

static void _call_f_ascent_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<double > ((double)((QTextInlineObject *)cls)->ascent ());
}

static qt_gsi::GenericMethod *_create_f_ascent_c0 ()
{
  return new qt_gsi::GenericMethod (":ascent", "@brief Method double QTextInlineObject::ascent()\n", true, &_init_f_ascent_c0, &_call_f_ascent_c0);
}

// double QTextInlineObject::descent()


static void _init_f_descent_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<double > ();
}

static void _call_f_descent_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<double > ((double)((QTextInlineObject *)cls)->descent ());
}

static qt_gsi::GenericMethod *_create_f_descent_c0 ()
{
  return new qt_gsi::GenericMethod (":descent", "@brief Method double QTextInlineObject::descent()\n", true, &_init_f_descent_c0, &_call_f_descent_c0);
}

// QTextFormat QTextInlineObject::format()


static void _init_f_format_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QTextFormat > ();
}

static void _call_f_format_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QTextFormat > ((QTextFormat)((QTextInlineObject *)cls)->format ());
}

static qt_gsi::GenericMethod *_create_f_format_c0 ()
{
  return new qt_gsi::GenericMethod ("format", "@brief Method QTextFormat QTextInlineObject::format()\n", true, &_init_f_format_c0, &_call_f_format_c0);
}

// int QTextInlineObject::formatIndex()


static void _init_f_formatIndex_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<int > ();
}

static void _call_f_formatIndex_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<int > ((int)((QTextInlineObject *)cls)->formatIndex ());
}

static qt_gsi::GenericMethod *_create_f_formatIndex_c0 ()
{
  return new qt_gsi::GenericMethod ("formatIndex", "@brief Method int QTextInlineObject::formatIndex()\n", true, &_init_f_formatIndex_c0, &_call_f_formatIndex_c0);
}

// double QTextInlineObject::height()


static void _init_f_height_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<double > ();
}

static void _call_f_height_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<double > ((double)((QTextInlineObject *)cls)->height ());
}

static qt_gsi::GenericMethod *_create_f_height_c0 ()
{
  return new qt_gsi::GenericMethod ("height", "@brief Method double QTextInlineObject::height()\n", true, &_init_f_height_c0, &_call_f_height_c0);
}

// bool QTextInlineObject::isValid()


static void _init_f_isValid_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isValid_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<bool > ((bool)((QTextInlineObject *)cls)->isValid ());
}

static qt_gsi::GenericMethod *_create_f_isValid_c0 ()
{
  return new qt_gsi::GenericMethod ("isValid?", "@brief Method bool QTextInlineObject::isValid()\n", true, &_init_f_isValid_c0, &_call_f_isValid_c0);
}

// QRectF QTextInlineObject::rect()


static void _init_f_rect_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QRectF > ();
}

static void _call_f_rect_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<QRectF > ((QRectF)((QTextInlineObject *)cls)->rect ());
}

static qt_gsi::GenericMethod *_create_f_rect_c0 ()
{
  return new qt_gsi::GenericMethod ("rect", "@brief Method QRectF QTextInlineObject::rect()\n", true, &_init_f_rect_c0, &_call_f_rect_c0);
}

// void QTextInlineObject::setAscent(double a)


static void _init_f_setAscent_1071 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("a");
  decl->add_arg<double > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setAscent_1071 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  double arg1 = args.read<double > ();
  ((QTextInlineObject *)cls)->setAscent (arg1);
}

static qt_gsi::GenericMethod *_create_f_setAscent_1071 ()
{
  return new qt_gsi::GenericMethod ("setAscent|ascent=", "@brief Method void QTextInlineObject::setAscent(double a)\n", false, &_init_f_setAscent_1071, &_call_f_setAscent_1071);
}

// void QTextInlineObject::setDescent(double d)


static void _init_f_setDescent_1071 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("d");
  decl->add_arg<double > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setDescent_1071 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  double arg1 = args.read<double > ();
  ((QTextInlineObject *)cls)->setDescent (arg1);
}

static qt_gsi::GenericMethod *_create_f_setDescent_1071 ()
{
  return new qt_gsi::GenericMethod ("setDescent|descent=", "@brief Method void QTextInlineObject::setDescent(double d)\n", false, &_init_f_setDescent_1071, &_call_f_setDescent_1071);
}

// void QTextInlineObject::setWidth(double w)


static void _init_f_setWidth_1071 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("w");
  decl->add_arg<double > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setWidth_1071 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  double arg1 = args.read<double > ();
  ((QTextInlineObject *)cls)->setWidth (arg1);
}

static qt_gsi::GenericMethod *_create_f_setWidth_1071 ()
{
  return new qt_gsi::GenericMethod ("setWidth|width=", "@brief Method void QTextInlineObject::setWidth(double w)\n", false, &_init_f_setWidth_1071, &_call_f_setWidth_1071);
}

// Qt::LayoutDirection QTextInlineObject::textDirection()


static void _init_f_textDirection_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qt_gsi::Converter<Qt::LayoutDirection>::target_type > ();
}

static void _call_f_textDirection_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<qt_gsi::Converter<Qt::LayoutDirection>::target_type > ((qt_gsi::Converter<Qt::LayoutDirection>::target_type)qt_gsi::CppToQtAdaptor<Qt::LayoutDirection>(((QTextInlineObject *)cls)->textDirection ()));
}

static qt_gsi::GenericMethod *_create_f_textDirection_c0 ()
{
  return new qt_gsi::GenericMethod ("textDirection", "@brief Method Qt::LayoutDirection QTextInlineObject::textDirection()\n", true, &_init_f_textDirection_c0, &_call_f_textDirection_c0);
}

// int QTextInlineObject::textPosition()


static void _init_f_textPosition_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<int > ();
}

static void _call_f_textPosition_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<int > ((int)((QTextInlineObject *)cls)->textPosition ());
}

static qt_gsi::GenericMethod *_create_f_textPosition_c0 ()
{
  return new qt_gsi::GenericMethod ("textPosition", "@brief Method int QTextInlineObject::textPosition()\n", true, &_init_f_textPosition_c0, &_call_f_textPosition_c0);
}

// double QTextInlineObject::width()


static void _init_f_width_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<double > ();
}

static void _call_f_width_c0 (const qt_gsi::GenericMethod *decl, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  ret.write<double > ((double)((QTextInlineObject *)cls)->width ());
}

static qt_gsi::GenericMethod *_create_f_width_c0 ()
{
  return new qt_gsi::GenericMethod (":width", "@brief Method double QTextInlineObject::width()\n", true, &_init_f_width_c0, &_call_f_width_c0);
}


namespace gsi
{
gsi::Class<QTextInlineObject> decl_QTextInlineObject ("QTextInlineObject",
  gsi::Methods(_create_ctor_QTextInlineObject_0 ()) +
  gsi::Methods(_create_f_ascent_c0 ()) +
  gsi::Methods(_create_f_descent_c0 ()) +
  gsi::Methods(_create_f_format_c0 ()) +
  gsi::Methods(_create_f_formatIndex_c0 ()) +
  gsi::Methods(_create_f_height_c0 ()) +
  gsi::Methods(_create_f_isValid_c0 ()) +
  gsi::Methods(_create_f_rect_c0 ()) +
  gsi::Methods(_create_f_setAscent_1071 ()) +
  gsi::Methods(_create_f_setDescent_1071 ()) +
  gsi::Methods(_create_f_setWidth_1071 ()) +
  gsi::Methods(_create_f_textDirection_c0 ()) +
  gsi::Methods(_create_f_textPosition_c0 ()) +
  gsi::Methods(_create_f_width_c0 ()),
  "@qt\n@brief Binding of QTextInlineObject");

}

